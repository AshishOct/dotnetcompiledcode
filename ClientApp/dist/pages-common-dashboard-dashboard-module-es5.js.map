{"version":3,"sources":["webpack:///src/app/pages/common/dashboard/dashboard-routing.module.ts","webpack:///src/app/pages/common/dashboard/dashboard.component.html","webpack:///src/app/pages/common/dashboard/dashboard.component.ts","webpack:///src/app/pages/common/dashboard/dashboard.module.ts"],"names":["routes","path","component","DashboardRoutingModule","forChild","imports","exports","DashboardComponent","router","formBuilder","apiCall","common","translate","el","sanitizer","nextMonthDayBasedonToday","Date","selectedCompanyInfo","companyDetails","CompanyRenualDetails","CompanyDashboardCount","companyVehiclesStagingList","companyDriverStagingList","listVehicleData","listVehicleDataWithoutFilter","listDriversData","listDriversDataWithoutFilter","vehicleUpdateRequestList","vehicleRenewalsList","listVehicleUpdateRequestData","listVehicleRenewalRequestData","driverUpdateRequestList","driverRenewalsList","listDriverUpdateRequestData","listDriverRenewalRequestData","isShowVehicleRenewalList","isShowDriverRenewalList","isShowVehicleUpdateRequestList","isShowDriverUpdateRequestList","isShowVehicleRenewalRequestList","isShowDriverRenewalRequestList","isShowVehicleUnApprovalList","isShowDriverUnApprovalList","currentPageNumber","totalListVehicleData","p1","p2","p3","p4","p5","p6","p7","p8","totalDriverUnApprovalList","collection","count","data","config","itemsPerPage","currentPage","totalItems","maxSize","directionLinks","autoHide","responsive","labels","screenReaderPaginationLabel","screenReaderPageLabel","screenReaderCurrentLabel","tempAllVehicleRecords","noVehicleData","noDriverData","noUnApprovedVehicleData","noUnApprovedDriverData","noUpdateVehicleData","noRenewalVehicleData","noUpdateDriverData","noRenewalDriverData","setDate","getDate","dateFormatWithDash","split","reverse","join","getValueFromSessionStorage","getCompanyDashboardCount","initMasterData","getVehicleList","getDriversList","getListCompanyVehiclesStagingList","getListCompanyDriverStagingList","onChangeOfCompany","subscription","unsubscribe","getContent","subscribe","msg","event","loader","userLoginInfo","jsonData","UserID","ID","Token","CompanyID","outerJsonData","inputParameter","JSON","stringify","postAPICallWithToken","then","result","error","console","log","QueryCount","PageNumber","toString","headerResponse","totalCount","getAllVehicleRecords","filterVehicle","filterVehicleUpdateRequestList","filterVehicleRenewalRequestList","filter","val","vehicle_Make","PermitExpiryDate","newdate","today","next30Days","length","vehicle","setValueToSessionStorage","navigateByUrl","filterDriver","filterDriverUpdateRequestList","filterDriverRenewalRequestList","driver_FirstName","driver","requestFrom","PendingRequestsAvailable","PendingRenewalsAvailable","info","VehicleID","concat","driver_Request","i","driver_Renewal","DriverID","vehicleUpdateRequestInfo","driverUpdateRequestInfo","vehicleRenewalInfo","driverRenewalInfo","showVehicleRenewalList","showDriverRenewalList","showVehicleUnApprovedList","showDriverUnApprovedList","showVehicleUpdateRequestList","showDriverUpdateRequestList","showVehicleRenewalRequestList","showDriverRenewalRequestList","selector","templateUrl","styleUrls","DashboardModule","declarations"],"mappings":"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","file":"pages-common-dashboard-dashboard-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [{ path: '', component: DashboardComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","<app-globalheader></app-globalheader>\r\n<div class=\"page-wrapper\" dir=\"{{common.textAlignment}}\">\r\n  <div class=\"container-fluid\">\r\n    <!-- Row -->\r\n    <div class=\"row\">\r\n      <!-- Column -->\r\n      <div class=\"col-md-6 col-lg-3\">\r\n        <div class=\"card card-body\">\r\n          <!-- Row -->\r\n          <div class=\"row\">\r\n            <!-- Column -->\r\n            <div class=\"col pr-0 align-self-center dash_left_cont\">\r\n              <h1 class=\"font-weight-light mb-0\">{{CompanyDashboardCount.NoOfVehicles}}</h1>\r\n              <h6 class=\"text-muted\">{{ 'Vehicles' | translate }}</h6>\r\n            </div>\r\n            <!-- Column -->\r\n            <div class=\"col text-right align-self-center\">\r\n              <div class=\"icon-image\"><img src=\"../assets/images/icon/vehicles1.png\" alt=\"\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6 col-lg-3\">\r\n        <!-- Column -->\r\n        <div class=\"card card-body\">\r\n          <!-- Row -->\r\n          <div class=\"row\">\r\n            <!-- Column -->\r\n            <div class=\"col pr-0 align-self-center dash_left_cont\">\r\n              <h1 class=\"font-weight-light mb-0\">{{CompanyDashboardCount.NoOfDrivers}}</h1>\r\n              <h6 class=\"text-muted\">{{ 'Drivers' | translate }}</h6>\r\n            </div>\r\n            <!-- Column -->\r\n            <div class=\"col text-right align-self-center\">\r\n              <div class=\"icon-image\"><img src=\"../assets/images/icon/drivers1.png\" alt=\"\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Column -->\r\n      <div class=\"col-md-6 col-lg-3\">\r\n        <div class=\"card card-body\">\r\n          <!-- Row -->\r\n          <div class=\"row\">\r\n            <!-- Column -->\r\n            <div class=\"col pr-0 align-self-center dash_left_cont\">\r\n              <h1 class=\"font-weight-light mb-0\">{{CompanyDashboardCount.NoOfTransactions}}</h1>\r\n              <h6 class=\"text-muted\">{{ 'Transactions' | translate }}</h6>\r\n            </div>\r\n            <!-- Column -->\r\n            <div class=\"col text-right \">\r\n              <div class=\"icon-image\"><img src=\"../assets/images/icon/transactions.png\" alt=\"\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!-- Column -->\r\n      <div class=\"col-md-6 col-lg-3\">\r\n        <div class=\"card card-body\">\r\n          <!-- Row -->\r\n          <div class=\"row\">\r\n            <!-- Column -->\r\n            <div class=\"col pr-0 align-self-center dash_left_cont\">\r\n              <h1 class=\"font-weight-light mb-0\">{{CompanyDashboardCount.NoOfFines}}</h1>\r\n              <h6 class=\"text-muted\">{{ 'Fines' | translate }}</h6>\r\n            </div>\r\n            <!-- Column -->\r\n            <div class=\"col text-right align-self-center\">\r\n              <div class=\"icon-image\"><img src=\"../assets/images/icon/fines1.png\" alt=\"\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Row -->\r\n    <!-- Row -->\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-8\">\r\n        <div class=\"card media-768\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-md-flex no-block\">\r\n              <h4 class=\"card-title\">{{ 'ExpiringSoon' | translate }}</h4>\r\n            </div>\r\n            <div class=\"dash_btn\">\r\n              <button class=\"vehicle_btn_dash\" [class.active]=\"isShowVehicleRenewalList\" (click)=\"showVehicleRenewalList()\">{{ 'Vehicle' | translate }}</button>  &nbsp;&nbsp; <button class=\"vehicle_btn_dash\" [class.active]=\"isShowDriverRenewalList\" (click)=\"showDriverRenewalList()\">{{ 'Driver' | translate }}</button>\r\n            </div>\r\n            <div class=\"month-table\" *ngIf=\"isShowVehicleRenewalList\">\r\n              <div class=\"table-responsive mt-3\" *ngIf=\"!noVehicleData\">\r\n                <table class=\"table stylish-table mb-0 no-wrap v-middle\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th class=\"border-0 text-muted font-weight-medium\" colspan=\"2\">{{ 'Items' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'VehicleType' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'ExpiryDate' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'Actions' | translate }}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr class=\"\" *ngFor=\"let lvd of listVehicleData | paginate: { id: 'first', itemsPerPage: 5, currentPage: p1 }\">\r\n                      <td>\r\n                        <span class=\"round text-white d-inline-block text-center rounded-circle \">\r\n                          <img src=\"../assets/images/icon/vehicles1.png\" class=\"rounded-circle vehicle_image\" alt=\"user\"\r\n                               width=\"50\">\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <h5 class=\"font-weight-medium mb-0\">{{lvd.VehicleMake}} - {{lvd.VehicleModel}} - {{lvd.ModelNumber}}</h5><small class=\"text-muted\"></small>\r\n                      </td>\r\n                      <td>{{lvd.VehicleType}}</td>\r\n                      <td><span class=\"\">{{lvd.PermitExpiryDate}}</span></td>\r\n                      <td>\r\n                        <button class=\"badge badge-info px-2 py-1\" *ngIf=\"!lvd.PendingPayments && !lvd.PendingRequestsAvailable && !lvd.PendingRenewalsAvailable\"\r\n                                (click)=\"navigateToVehicleViewPage(lvd)\">\r\n                          {{ 'Renew' | translate }}\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n\r\n                </table>\r\n                <pagination-controls [maxSize]=\"maxSize\"\r\n                                     [directionLinks]=\"directionLinks\"\r\n                                     [autoHide]=\"autoHide\"\r\n                                     [responsive]=\"responsive\"\r\n                                     [previousLabel]=\"labels.previousLabel\"\r\n                                     [nextLabel]=\"labels.nextLabel\"\r\n                                     [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\"\r\n                                     [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                                     [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\"\r\n                                     (pageChange)=\"p1 = $event\" id=\"first\"></pagination-controls>\r\n              </div>\r\n              <div *ngIf=\"noVehicleData\">\r\n                <div class=\"main_card no_record_found\">\r\n                  <span>{{ 'NoRecordFound' | translate }}</span>\r\n                </div>\r\n              </div>              \r\n            </div>\r\n\r\n            <div class=\"month-table\" *ngIf=\"isShowDriverRenewalList\">\r\n              <div class=\"table-responsive mt-3\" *ngIf=\"!noDriverData\">\r\n                <table class=\"table stylish-table mb-0 no-wrap v-middle\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th class=\"border-0 text-muted font-weight-medium\" colspan=\"2\">{{ 'Name/ID' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'Type' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'ExpiryDate' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'Actions' | translate }}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr class=\"\" *ngFor=\"let ldd of listDriversData | paginate: { id: 'second', itemsPerPage: 5, currentPage: p2 }\">\r\n                      <td>\r\n                        <span class=\"round text-white d-inline-block text-center rounded-circle\">\r\n                          <img src=\"../assets/images/icon/drivers1.png\" class=\"rounded-circle vehicle_image\" alt=\"user\"\r\n                               width=\"50\">\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <h5 class=\"font-weight-medium mb-0\">{{ldd.FirstName}} {{ldd.LastName}}</h5>\r\n                      </td>\r\n                      <td>{{ldd.DriverType}}</td>\r\n                      <td><span class=\"\">{{ldd.PermitExpiryDate}}</span></td>\r\n                      <td>\r\n                        <button class=\"badge badge-info px-2 py-1\" *ngIf=\"!ldd.PendingPayments && !ldd.PendingRequestsAvailable && !ldd.PendingRenewalsAvailable\"\r\n                                (click)=\"navigateToDriverViewPage(ldd)\">\r\n                          {{ 'Renew' | translate }}\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n                <pagination-controls [maxSize]=\"maxSize\"\r\n                                     [directionLinks]=\"directionLinks\"\r\n                                     [autoHide]=\"autoHide\"\r\n                                     [responsive]=\"responsive\"\r\n                                     [previousLabel]=\"labels.previousLabel\"\r\n                                     [nextLabel]=\"labels.nextLabel\"\r\n                                     [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\"\r\n                                     [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                                     [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\"\r\n                                     (pageChange)=\"p2 = $event\" id=\"second\"></pagination-controls>\r\n              </div>\r\n              <div *ngIf=\"noDriverData\">\r\n                <div class=\"main_card no_record_found\">\r\n                  <span>{{ 'NoRecordFound' | translate }}</span>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"card media-768\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-md-flex no-block\">\r\n              <h4 class=\"card-title\" *ngIf=\"isShowVehicleUnApprovalList\">{{ 'UnApprovedVehicleList' | translate }}</h4>\r\n              <h4 class=\"card-title\" *ngIf=\"isShowDriverUnApprovalList\">{{ 'UnApprovedDriverList' | translate }}</h4>\r\n            </div>\r\n            <div class=\"dash_btn\">\r\n              <button class=\"vehicle_btn_dash\" [class.active]=\"isShowVehicleUnApprovalList\" (click)=\"showVehicleUnApprovedList()\">{{ 'Vehicle' | translate }}</button>  &nbsp;&nbsp; <button class=\"vehicle_btn_dash\" [class.active]=\"isShowDriverUnApprovalList\" (click)=\"showDriverUnApprovedList()\">{{ 'Driver' | translate }}</button>\r\n            </div>\r\n            <div class=\"month-table\" *ngIf=\"isShowVehicleUnApprovalList\">\r\n              <div class=\"table-responsive mt-3\" *ngIf=\"!noUnApprovedVehicleData\">\r\n                <table class=\"table stylish-table mb-0 no-wrap v-middle\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th class=\"border-0 text-muted font-weight-medium\" colspan=\"2\">{{ 'VehicleInfo' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'VehicleType' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'Status' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'Actions' | translate }}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr class=\"\" *ngFor=\"let vehicle of companyVehiclesStagingList | paginate: { id: 'third', itemsPerPage: 5, currentPage: p3 }\">\r\n                      <td>\r\n                        <span class=\"round text-white d-inline-block text-center rounded-circle \">\r\n                          <img src=\"../assets/images/icon/vehicles1.png\" class=\"rounded-circle vehicle_image\" alt=\"user\"\r\n                               width=\"50\">\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <h5 class=\"font-weight-medium mb-0\">{{vehicle.VehicleMake}} - {{vehicle.VehicleModel}} - {{vehicle.ModelNumber}}</h5><small class=\"text-muted\"></small>\r\n                      </td>\r\n                      <td>{{vehicle.VehicleType}}</td>\r\n                      <td><span class=\"\">{{vehicle.Status}}</span></td>\r\n                      <td>\r\n                        <button class=\"badge badge-info px-2 py-1\" *ngIf=\"vehicle.Status === 'Need More Information'\" (click)=\"navigateToVehicleUpdatePage(vehicle)\">{{ 'Edit' | translate }}</button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>                  \r\n                </table>\r\n                <pagination-controls [maxSize]=\"maxSize\"\r\n                                     [directionLinks]=\"directionLinks\"\r\n                                     [autoHide]=\"autoHide\"\r\n                                     [responsive]=\"responsive\"\r\n                                     [previousLabel]=\"labels.previousLabel\"\r\n                                     [nextLabel]=\"labels.nextLabel\"\r\n                                     [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\"\r\n                                     [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                                     [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\"\r\n                                     (pageChange)=\"p3 = $event\" id=\"third\"></pagination-controls>\r\n              </div>\r\n              <div *ngIf=\"noUnApprovedVehicleData\">\r\n                <div class=\"main_card no_record_found\">\r\n                  <span>{{ 'NoRecordFound' | translate }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"month-table\" *ngIf=\"isShowDriverUnApprovalList\">\r\n              <div class=\"table-responsive mt-3\"  *ngIf=\"!noUnApprovedDriverData\">\r\n                <table class=\"table stylish-table mb-0 no-wrap v-middle\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th class=\"border-0 text-muted font-weight-medium\" colspan=\"2\">{{ 'Name/ID' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'Type' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'Status' | translate }}</th>\r\n                      <th class=\"border-0 text-muted font-weight-medium\">{{ 'Actions' | translate }}</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr class=\"\" *ngFor=\"let driver of companyDriverStagingList | paginate: { id: 'fourth', itemsPerPage: 5, currentPage: p4 }\">\r\n                      <td>\r\n                        <span class=\"round text-white d-inline-block text-center rounded-circle\">\r\n                          <img src=\"../assets/images/icon/drivers1.png\" class=\"rounded-circle vehicle_image\" alt=\"user\"\r\n                               width=\"50\">\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <h5 class=\"font-weight-medium mb-0\">{{driver.FirstName}} {{driver.LastName}}</h5>\r\n                      </td>\r\n                      <td>{{driver.DriverType}}</td>\r\n                      <td><span class=\"\">{{driver.Status}}</span></td>\r\n                      <td>\r\n                        <button class=\"badge badge-info px-2 py-1\" *ngIf=\"driver.Status === 'Need More Information'\" (click)=\"navigateToDriverUpdatePage(driver)\">{{ 'Edit' | translate }}</button>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>                  \r\n                </table>\r\n                <pagination-controls [maxSize]=\"maxSize\"\r\n                                     [directionLinks]=\"directionLinks\"\r\n                                     [autoHide]=\"autoHide\"\r\n                                     [responsive]=\"responsive\"\r\n                                     [previousLabel]=\"labels.previousLabel\"\r\n                                     [nextLabel]=\"labels.nextLabel\"\r\n                                     [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\"\r\n                                     [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                                     [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\"\r\n                                     (pageChange)=\"p4 = $event\" id=\"fourth\"></pagination-controls>\r\n              </div>\r\n              <div *ngIf=\"noUnApprovedDriverData\">\r\n                <div class=\"main_card no_record_found\">\r\n                  <span>{{ 'NoRecordFound' | translate }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <!--Start update & renewal list-->\r\n        <div class=\"card media-768\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-md-flex no-block\">\r\n              <h4 class=\"card-title\">{{ 'UpdateRequestList' | translate }}</h4>\r\n            </div>\r\n            <div class=\"dash_btn\">\r\n              <button class=\"vehicle_btn_dash\" [class.active]=\"isShowVehicleUpdateRequestList\" (click)=\"showVehicleUpdateRequestList()\">{{ 'Vehicle' | translate }}</button>  &nbsp;&nbsp; <button class=\"vehicle_btn_dash\" [class.active]=\"isShowDriverUpdateRequestList\" (click)=\"showDriverUpdateRequestList()\">{{ 'Driver' | translate }}</button>\r\n            </div>\r\n              <div class=\"month-table\" *ngIf=\"isShowVehicleUpdateRequestList\">\r\n                <div class=\"table-responsive mt-3\" *ngIf=\"!noUpdateVehicleData\">\r\n                  <table class=\"table stylish-table mb-0 no-wrap v-middle\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th class=\"border-0 text-muted font-weight-medium\" colspan=\"2\">{{ 'VehicleInfo' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'VehicleType' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Status' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Actions' | translate }}</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr class=\"\" *ngFor=\"let vehicle of listVehicleUpdateRequestData | paginate: { id: 'fifth', itemsPerPage: 5, currentPage: p5 }\">\r\n                        <td>\r\n                          <span class=\"round text-white d-inline-block text-center rounded-circle \">\r\n                            <img src=\"../assets/images/icon/vehicles1.png\" class=\"rounded-circle vehicle_image\" alt=\"user\"\r\n                                 width=\"50\">\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <h5 class=\"font-weight-medium mb-0\">{{vehicle.VehicleMake}} - {{vehicle.VehicleModel}} - {{vehicle.ModelNumber}}</h5><small class=\"text-muted\"></small>\r\n                        </td>\r\n                        <td>{{vehicle.VehicleType}}</td>\r\n                        <td><span class=\"\">{{vehicle.Status}}</span></td>\r\n                        <td>\r\n                          <button class=\"badge badge-info px-2 py-1\" *ngIf=\"vehicle.Status === 'Need More Information'\"  (click)=\"navigateToVehicleUpdateRequestPage(vehicle)\">{{ 'Edit' | translate }}</button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <pagination-controls [maxSize]=\"maxSize\"\r\n                                       [directionLinks]=\"directionLinks\"\r\n                                       [autoHide]=\"autoHide\"\r\n                                       [responsive]=\"responsive\"\r\n                                       [previousLabel]=\"labels.previousLabel\"\r\n                                       [nextLabel]=\"labels.nextLabel\"\r\n                                       [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\"\r\n                                       [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                                       [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\"\r\n                                       (pageChange)=\"p5 = $event\" id=\"fifth\"></pagination-controls>\r\n                </div>\r\n                <div *ngIf=\"noUpdateVehicleData\">\r\n                  <div class=\"main_card no_record_found\">\r\n                    <span>{{ 'NoRecordFound' | translate }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"month-table\" *ngIf=\"isShowDriverUpdateRequestList\">\r\n                <div class=\"table-responsive mt-3\" *ngIf=\"!noUpdateDriverData\">\r\n                  <table class=\"table stylish-table mb-0 no-wrap v-middle\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th class=\"border-0 text-muted font-weight-medium\" colspan=\"2\">{{ 'Name/ID' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Type' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Status' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Actions' | translate }}</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr class=\"\" *ngFor=\"let driver of listDriverUpdateRequestData | paginate: { id: 'sixth', itemsPerPage: 5, currentPage: p6 }\">\r\n                        <td>\r\n                          <span class=\"round text-white d-inline-block text-center rounded-circle\">\r\n                            <img src=\"../assets/images/icon/drivers1.png\" class=\"rounded-circle vehicle_image\" alt=\"user\"\r\n                                 width=\"50\">\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <h5 class=\"font-weight-medium mb-0\">{{driver.FirstName}} {{driver.LastName}}</h5>\r\n                        </td>\r\n                        <td>{{driver.DriverType}}</td>\r\n                        <td><span class=\"\">{{driver.Status}}</span></td>\r\n                        <td>\r\n                          <button class=\"badge badge-info px-2 py-1\" *ngIf=\"driver.Status === 'Need More Information'\" (click)=\"navigateToDriverUpdatePage(driver)\">{{ 'Edit' | translate }}</button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <pagination-controls [maxSize]=\"maxSize\"\r\n                                       [directionLinks]=\"directionLinks\"\r\n                                       [autoHide]=\"autoHide\"\r\n                                       [responsive]=\"responsive\"\r\n                                       [previousLabel]=\"labels.previousLabel\"\r\n                                       [nextLabel]=\"labels.nextLabel\"\r\n                                       [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\"\r\n                                       [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                                       [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\"\r\n                                       (pageChange)=\"p6 = $event\" id=\"sixth\"></pagination-controls>\r\n                </div>\r\n                <div *ngIf=\"noUpdateDriverData\">\r\n                  <div class=\"main_card no_record_found\">\r\n                    <span>{{ 'NoRecordFound' | translate }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        <div class=\"card media-768\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-md-flex no-block\">\r\n              <h4 class=\"card-title\">{{ 'RenewalRequestList' | translate }}</h4>\r\n            </div>\r\n            <div class=\"dash_btn\">\r\n              <button class=\"vehicle_btn_dash\" [class.active]=\"isShowVehicleRenewalRequestList\" (click)=\"showVehicleRenewalRequestList()\">{{ 'Vehicle' | translate }}</button>  &nbsp;&nbsp; <button class=\"vehicle_btn_dash\" [class.active]=\"isShowDriverRenewalRequestList\" (click)=\"showDriverRenewalRequestList()\">{{ 'Driver' | translate }}</button>\r\n            </div>\r\n              <div class=\"month-table\" *ngIf=\"isShowVehicleRenewalRequestList\">\r\n                <div class=\"table-responsive mt-3\" *ngIf=\"!noRenewalVehicleData\">\r\n                  <table class=\"table stylish-table mb-0 no-wrap v-middle\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th class=\"border-0 text-muted font-weight-medium\" colspan=\"2\">{{ 'ID' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'VehicleType' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Status' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Actions' | translate }}</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr class=\"\" *ngFor=\"let vehicle of listVehicleRenewalRequestData | paginate: { id: 'seventh', itemsPerPage: 5, currentPage: p7 }\">\r\n                        <td>\r\n                          <span class=\"round text-white d-inline-block text-center rounded-circle \">\r\n                            <img src=\"../assets/images/icon/vehicles1.png\" class=\"rounded-circle vehicle_image\" alt=\"user\"\r\n                                 width=\"50\">\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <h5 class=\"font-weight-medium mb-0\">{{vehicle.VehicleID}}</h5><small class=\"text-muted\"></small>\r\n                        </td>\r\n                        <td>{{vehicle.VehicleType}}</td>\r\n                        <td><span class=\"\">{{vehicle.Status}}</span></td>\r\n                        <td>\r\n                          <button class=\"badge badge-info px-2 py-1\" *ngIf=\"vehicle.Status === 'Need More Information'\" (click)=\"navigateToVehicleRenewalPage(vehicle)\">{{ 'Edit' | translate }}</button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <pagination-controls [maxSize]=\"maxSize\"\r\n                                       [directionLinks]=\"directionLinks\"\r\n                                       [autoHide]=\"autoHide\"\r\n                                       [responsive]=\"responsive\"\r\n                                       [previousLabel]=\"labels.previousLabel\"\r\n                                       [nextLabel]=\"labels.nextLabel\"\r\n                                       [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\"\r\n                                       [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                                       [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\"\r\n                                       (pageChange)=\"p7 = $event\" id=\"seventh\"></pagination-controls>\r\n                </div>\r\n                <div *ngIf=\"noRenewalVehicleData\">\r\n                  <div class=\"main_card no_record_found\">\r\n                    <span>{{ 'NoRecordFound' | translate }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"month-table\" *ngIf=\"isShowDriverRenewalRequestList\">\r\n                <div class=\"table-responsive mt-3\" *ngIf=\"!noRenewalDriverData\">\r\n                  <table class=\"table stylish-table mb-0 no-wrap v-middle\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th class=\"border-0 text-muted font-weight-medium\" colspan=\"2\">{{ 'ID' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Type' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Status' | translate }}</th>\r\n                        <th class=\"border-0 text-muted font-weight-medium\">{{ 'Actions' | translate }}</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <tr class=\"\" *ngFor=\"let driver of listDriverRenewalRequestData | paginate: { id: 'eigth', itemsPerPage: 5, currentPage: p8 }\">\r\n                        <td>\r\n                          <span class=\"round text-white d-inline-block text-center rounded-circle\">\r\n                            <img src=\"../assets/images/icon/drivers1.png\" class=\"rounded-circle vehicle_image\" alt=\"user\"\r\n                                 width=\"50\">\r\n                          </span>\r\n                        </td>\r\n                        <td>\r\n                          <h5 class=\"font-weight-medium mb-0\">{{driver.DriverID}}</h5>\r\n                        </td>\r\n                        <td>{{driver.DriverType}}</td>\r\n                        <td><span class=\"\">{{driver.Status}}</span></td>\r\n                        <td>\r\n                          <button class=\"badge badge-info px-2 py-1\" *ngIf=\"driver.Status === 'Need More Information'\" (click)=\"navigateToDriverRenewalPage(driver)\">{{ 'Edit' | translate }}</button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <pagination-controls [maxSize]=\"maxSize\"\r\n                                       [directionLinks]=\"directionLinks\"\r\n                                       [autoHide]=\"autoHide\"\r\n                                       [responsive]=\"responsive\"\r\n                                       [previousLabel]=\"labels.previousLabel\"\r\n                                       [nextLabel]=\"labels.nextLabel\"\r\n                                       [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\"\r\n                                       [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                                       [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\"\r\n                                       (pageChange)=\"p8 = $event\" id=\"eigth\"></pagination-controls>\r\n                </div>\r\n                <div *ngIf=\"noRenewalDriverData\">\r\n                  <div class=\"main_card no_record_found\">\r\n                    <span>{{ 'NoRecordFound' | translate }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        <!--End update & renewal list-->\r\n      </div>\r\n\r\n\r\n      <div class=\"col-lg-4\">\r\n        <!-- Column -->\r\n        <div class=\"card\">\r\n          <img src=\"../assets/images/background/company-card-bg.jpg\" alt=\"Card image cap\"\r\n               class=\"profile-bg-height  w-100 rounded-top\">\r\n          <div class=\"card-body little-profile little-profile-block text-left\">\r\n            <h2 class=\"mb-0 font-weight-bold\">{{companyDetails.CompanyNameEN}}</h2>\r\n            <div class=\"col-md-12 d-flex mb-2\">\r\n              <div class=\"mr-3 align-items-center d-flex\"><em class=\"icon-location-pin font-28 text-blue\"></em></div>\r\n              <div class=\"w-100\">\r\n                <p class=\"mb-1 border-bottom text-gold\">{{ 'Location' | translate }}</p>\r\n                <h5 class=\"text-blue\">{{companyDetails.City}}</h5>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 d-flex mb-2\">\r\n              <div class=\"mr-3 align-items-center d-flex\"><em class=\"icon-map font-28 text-blue\"></em></div>\r\n              <div class=\"w-100\">\r\n                <p class=\"mb-1 border-bottom text-gold\">{{ 'Emirates' | translate }}</p>\r\n                <h5 class=\"text-blue\">{{companyDetails.CompanyEmirate}}</h5>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 d-flex mb-2\">\r\n              <div class=\"mr-3 align-items-center d-flex\"><em class=\"icon-phone font-28 text-blue\"></em></div>\r\n              <div class=\"w-100\">\r\n                <p class=\"mb-1 border-bottom text-gold\">{{ 'Telephone' | translate }}</p>\r\n                <h5 class=\"text-blue\">{{companyDetails.ManagerMobile}}</h5>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 d-flex mb-2\">\r\n              <div class=\"mr-3 align-items-center d-flex\"><em class=\"icon-screen-smartphone font-28 text-blue\"></em></div>\r\n              <div class=\"w-100\">\r\n                <p class=\"mb-1 border-bottom text-gold\">{{ 'Mobile' | translate }}</p>\r\n                <h5 class=\"text-blue\">{{companyDetails.ManagerMobile}}</h5>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 d-flex mb-2\">\r\n              <div class=\"mr-3 align-items-center d-flex\"><em class=\"icon-envelope font-28 text-blue\"></em></div>\r\n              <div class=\"w-100\">\r\n                <p class=\"mb-1 border-bottom text-gold\">{{ 'Email' | translate }}</p>\r\n                <h5 class=\"text-blue\">{{companyDetails.Email}}</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- Column -->\r\n      </div>\r\n    </div>\r\n    <!-- Row -->\r\n  </div>\r\n</div>\r\n<app-globalfooter></app-globalfooter>\r\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { Subscription } from 'rxjs';\r\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n\n  nextMonthDayBasedonToday = new Date();\n  selectedCompanyInfo: any = {};\n\n  companyDetails: any = [];\n  CompanyRenualDetails: any = [];\n  CompanyDashboardCount: any = [];\n  companyVehiclesStagingList: any = [];\n  companyDriverStagingList: any = [];\n\n\n  listVehicleData: any = [];\n  listVehicleDataWithoutFilter: any = [];\n  listDriversData: any = [];\n  listDriversDataWithoutFilter: any = [];\n  vehicleUpdateRequestList: any = [];\n  vehicleRenewalsList: any = [];\r\n  listVehicleUpdateRequestData: any = [];\r\n  listVehicleRenewalRequestData: any = [];\n  driverUpdateRequestList: any = [];\n  driverRenewalsList: any = [];\r\n  listDriverUpdateRequestData: any = [];\r\n  listDriverRenewalRequestData: any = [];\n\n  isShowVehicleRenewalList: boolean = false;\n  isShowDriverRenewalList: boolean = false;\n\n  isShowVehicleUpdateRequestList: boolean = false;\n  isShowDriverUpdateRequestList: boolean = false;\n  isShowVehicleRenewalRequestList: boolean = false;\n  isShowDriverRenewalRequestList: boolean = false;\n\n  isShowVehicleUnApprovalList: boolean = false;\n  isShowDriverUnApprovalList: boolean = false;\n\n  currentPageNumber: number = 1;\n  totalListVehicleData: number = 0;\n\n  public p1: number = 1;\n  public p2: number = 1;\n  public p3: number = 1;\n  public p4: number = 1;\n  public p5: number = 1;\n  public p6: number = 1;\n  public p7: number = 1;\n  public p8: number = 1;\n\n totalDriverUnApprovalList: number = 0;\n  collection = { count: this.totalDriverUnApprovalList, data: [] };\r\n  config = {\r\n    itemsPerPage: 5,\r\n    currentPage: 1,\r\n    totalItems: this.totalDriverUnApprovalList\r\n  };\n  public maxSize: number = 7;\r\n  public directionLinks: boolean = true;\r\n  public autoHide: boolean = false;\r\n  public responsive: boolean = true;\r\n  public labels: any = {\r\n    screenReaderPaginationLabel: 'Pagination',\r\n    screenReaderPageLabel: 'page',\r\n    screenReaderCurrentLabel: `You're on page`\r\n  };\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private apiCall: ApiService,\n    public common: CommonService,\n    private translate: TranslateService,\n    private el: ElementRef,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  ngOnInit(): void {\n    this.nextMonthDayBasedonToday.setDate(this.nextMonthDayBasedonToday.getDate() + 30);\n    this.nextMonthDayBasedonToday = this.common.dateFormatWithDash(this.nextMonthDayBasedonToday).split(\"-\").reverse().join(\"-\");\n    this.companyDetails = this.common.getValueFromSessionStorage('companyDataforDashboard');\r\n\n    this.getCompanyDashboardCount(false);\n\n    this.isShowVehicleRenewalList = true;\r\n    this.isShowDriverRenewalList = false;\n\n    this.isShowVehicleUnApprovalList = true;\n    this.isShowDriverUnApprovalList = false;\n\n    this.isShowVehicleUpdateRequestList = true;\n    this.isShowVehicleRenewalRequestList = true;\n\n    this.initMasterData();\n  }\n\n  async initMasterData() {\n    await this.getVehicleList(false);\n    await this.getDriversList(false);\n    await this.getListCompanyVehiclesStagingList(false);\n    await this.getListCompanyDriverStagingList();\r\n    //await this.filterVehicleUpdateRequestList();\r\n    //await this.filterVehicleRenewalRequestList();\r\n    //await this.filterDriverUpdateRequestList();\r\n    //await this.filterDriverRenewalRequestList();\r\n\n    this.onChangeOfCompany();\n\r\n  }\n\n  public subscription: Subscription;\n  public ngOnDestroy(): void {\r\n\r\n    // onDestroy cancels the subscribe request\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\n\n  //on changing the company name\n  onChangeOfCompany() {\n    this.subscription = this.common.getContent().subscribe(msg => {\n      let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\n      if (selectedCompanyInfo != null) {\n        this.companyDetails = selectedCompanyInfo;\n        this.getCompanyDashboardCount(false);\n        this.getVehicleList(false);\n        this.getDriversList(false);\n        this.getListCompanyVehiclesStagingList(false);\n        this.getListCompanyDriverStagingList();\r\n        //this.filterVehicleUpdateRequestList();\r\n        //this.filterVehicleRenewalRequestList();\r\n        //this.filterDriverUpdateRequestList();\r\n        //this.filterDriverRenewalRequestList();\n      }\n    });\n  }\n\n\n// For Pagination\n  onPageChange(event) {\r\n    this.config.currentPage = event;\r\n    this.currentPageNumber = event;\r\n    this.getVehicleList(false);\r\n  }\n\n  // Used for get the Company Dashboard Count\n  getCompanyDashboardCount(loader: boolean = true) {\r\n    let companyDetails = this.common.getValueFromSessionStorage('companyDataforDashboard');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let jsonData: any = {};\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.CompanyID = companyDetails.CompanyID;\r\n    let outerJsonData: any = {};\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    this.apiCall.postAPICallWithToken('api/CompanyManager/CompanyDashboard', outerJsonData, loader).then(result => {\r\n      this.CompanyDashboardCount = result;\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\n\n  //For Show/Hide Vehicle Renewal List\n  showVehicleRenewalList() {\n    this.isShowVehicleRenewalList = true;\r\n    this.isShowDriverRenewalList = false;\r\n  }\n\n  //For Show/Hide Driver Renewal List\n  showDriverRenewalList() {\n    this.isShowVehicleRenewalList = false;\r\n    this.isShowDriverRenewalList = true;\r\n  }\n\n  // Used for get Vehicle List\r\n  async getVehicleList(loader: boolean = true) {\r\n    let jsonData: any = {};\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('companyDataforDashboard');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.QueryCount = \"5\";\r\n    jsonData.PageNumber = this.currentPageNumber.toString();\r\n    await this.apiCall.postAPICallWithToken('api/VehicleManager/getVehicleList', jsonData, loader).then(result => {\r\n      this.listVehicleDataWithoutFilter = result.data;\r\n      this.totalListVehicleData = result.headerResponse.totalCount;\r\n      this.config = {\r\n        itemsPerPage: 6,\r\n        currentPage: this.currentPageNumber,\r\n        totalItems: this.totalListVehicleData\r\n      };\r\n      this.getAllVehicleRecords();\r\n      //this.filterVehicle();\r\n      //this.filterVehicleUpdateRequestList();\r\n      //this.filterVehicleRenewalRequestList();\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\n\n  // Used for get Vehicle List\r\n  tempAllVehicleRecords: any = [];\r\n  async getAllVehicleRecords(loader: boolean = true) {\r\n    let jsonData: any = {};\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('companyDataforDashboard');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.QueryCount = this.totalListVehicleData.toString();\r\n    jsonData.PageNumber = \"1\";\r\n    await this.apiCall.postAPICallWithToken('api/VehicleManager/getVehicleList', jsonData, loader).then(result => {\r\n      this.tempAllVehicleRecords = result.data;\r\n      this.listVehicleDataWithoutFilter = result.data;\r\n      this.filterVehicle();\r\n      this.filterVehicleUpdateRequestList();\r\n      this.filterVehicleRenewalRequestList();\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\n\n  //Used For Vehicle which will expiring soon list\r\n  noVehicleData: boolean = false;\r\n  filterVehicle() {\r\n    this.noVehicleData = false;\r\n    this.listVehicleData = this.listVehicleDataWithoutFilter.filter((val) => {\r\n      let vehicle_Make;\r\n      if (val.PermitExpiryDate != null) {\r\n        var newdate = val.PermitExpiryDate.split(\"-\").reverse().join(\"-\");\r\n        let PermitExpiryDate = new Date(newdate);\r\n        let today = new Date();\n        let next30Days = new Date();\n        next30Days.setDate(next30Days.getDate() + 30);        \r\n        if (today <= PermitExpiryDate && PermitExpiryDate <= next30Days) {\r\n            vehicle_Make = true;\r\n          }        \r\n      }\r\n      return (vehicle_Make);\r\n    })\r\n    if (this.listVehicleData.length == 0) {\r\n      this.noVehicleData = true;\r\n    }\n  }\n\n  // For navigate to Vehicle detail page\n  navigateToVehicleViewPage(vehicle) {\n    this.common.setValueToSessionStorage('vehicleInfo', vehicle);\r\n    this.router.navigateByUrl('/vehicle/detailvehicle');\r\n  }\n\n  // Used for get Drivers List\n  async getDriversList(loader: boolean = true) {\n    let jsonData: any = {};\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('companyDataforDashboard');\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\n    jsonData.Token = userLoginInfo.Token;\n    jsonData.UserID = userLoginInfo.ID;\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.PageNumber = this.currentPageNumber.toString();\r\n    await this.apiCall.postAPICallWithToken('api/DriverManager/getDriverList', jsonData, loader).then(result => {\n      this.listDriversDataWithoutFilter = result.data;\n      this.filterDriver();\r\n      this.filterDriverUpdateRequestList();\r\n      this.filterDriverRenewalRequestList();\n    }).catch(error => {\n      console.log(\"error \", error);\n    });\n  }\n\n  //Used For Driver which will expiring soon list\r\n  noDriverData: boolean = false;\r\n  filterDriver() {\r\n    this.noDriverData = false;\r\n    this.listDriversData = this.listDriversDataWithoutFilter.filter((val) => {\r\n      let driver_FirstName;\r\n      if (val.PermitExpiryDate != null) {\r\n        var newdate = val.PermitExpiryDate.split(\"-\").reverse().join(\"-\");\r\n        let PermitExpiryDate = new Date(newdate);\n        let today = new Date();\n        let next30Days = new Date();\n        next30Days.setDate(next30Days.getDate() + 30);  \r\n        if (today <= PermitExpiryDate && PermitExpiryDate <= next30Days) {\r\n          driver_FirstName = true;\r\n        }\r\n       }       \r\n      return (driver_FirstName);\r\n    })\r\n    if (this.listDriversData.length == 0) {\r\n      this.noDriverData = true;\r\n    }\n  }\n\n  //Used for navigate to driver view page\n  navigateToDriverViewPage(driver) {\n    this.common.setValueToSessionStorage('driverInfo', driver);\n    this.router.navigateByUrl('/driver/detaildriver');\r\n  }\n\n  //For Show/Hide Vehicle UnApproved List\n  showVehicleUnApprovedList() {\n    this.isShowVehicleUnApprovalList = true;\r\n    this.isShowDriverUnApprovalList = false;\r\n  }\n\n  //For Show/Hide Driver UnApproved List\n  showDriverUnApprovedList() {\n    this.isShowVehicleUnApprovalList = false;\r\n    this.isShowDriverUnApprovalList = true;\r\n  }\n\n  // Used for get Un Approved Vehicle List\r\n  noUnApprovedVehicleData: boolean = false;\r\n  async getListCompanyVehiclesStagingList(loader: boolean = true) {\r\n    let jsonData: any = {};\r\n    let outerJsonData: any = {};\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('companyDataforDashboard');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    this.noUnApprovedVehicleData = false;\r\n    await this.apiCall.postAPICallWithToken('api/VehicleManager/ListCompanyVehiclesStaging', outerJsonData, loader).then(result => {\r\n      this.companyVehiclesStagingList = result;\r\n      if (this.companyVehiclesStagingList.length == 0) {\r\n        this.noUnApprovedVehicleData = true;\r\n      } else {\r\n        this.noUnApprovedVehicleData = false;\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\n\n  // For navigating to add vehicle page when required need more info\n  navigateToVehicleUpdatePage(vehicle) {\r\n    vehicle.requestFrom = 'unapprovedUpdate';\r\n    this.common.setValueToSessionStorage('updateVehicleInfo', vehicle);\r\n    this.router.navigateByUrl('/vehicle/addvehicle');\r\n  }\n\n\n  // Used for get Un Approved Driver List\n  noUnApprovedDriverData: boolean = false;\n  async getListCompanyDriverStagingList() {\n    let jsonData: any = {};\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('companyDataforDashboard');\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\n    jsonData.UserID = userLoginInfo.ID;\n    jsonData.Token = userLoginInfo.Token;\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\n    this.noUnApprovedDriverData = false;\n    await this.apiCall.postAPICallWithToken('api/DriverManager/getListCompanyDriversStaging', jsonData).then(result => {\n      this.companyDriverStagingList = result;\n      if (this.companyDriverStagingList.length == 0) {\r\n        this.noUnApprovedDriverData = true;\r\n      } else {\r\n        this.noUnApprovedDriverData = false;\r\n      }\n    }).catch(error => {\n      console.log(\"error \", error);\n    });\n  }\n\n  // For navigating to add driver page when required need more info\n  navigateToDriverUpdatePage(driver) {\n    driver.requestFrom = 'unapprovedUpdate';\n    this.common.setValueToSessionStorage('updateDriverInfo', driver);\n    this.router.navigateByUrl('/driver/adddriver');\r\n  }\n\n  //For Show/Hide Vehicle Update Request List\n  showVehicleUpdateRequestList() {\n    this.isShowVehicleUpdateRequestList = true;\r\n    this.isShowDriverUpdateRequestList = false;\r\n  }\n\n  //For Show/Hide Driver Update Request List\n  showDriverUpdateRequestList() {\n    this.isShowVehicleUpdateRequestList = false;\r\n    this.isShowDriverUpdateRequestList = true;\r\n  }\n\n\n  //Used For Vehicle Update Request List\r\n  async filterVehicleUpdateRequestList() {\r\n    this.listVehicleUpdateRequestData = this.listVehicleDataWithoutFilter.filter((val) => {\r\n      let vehicle_Make;\r\n      if (val.PendingRequestsAvailable != null) {\r\n        vehicle_Make = val.PendingRequestsAvailable;\r\n      }\r\n      return (vehicle_Make);\r\n    })\n    if (this.listVehicleUpdateRequestData.length != 0) {\n      this.noUpdateVehicleData = false;\n    } else {\n      this.noUpdateVehicleData = true;\r\n    }\n  }\r\n\r\n  //Used For Vehicle Renewal List\r\n  filterVehicleRenewalRequestList() {\r\n    this.listVehicleRenewalRequestData = this.listVehicleDataWithoutFilter.filter((val) => {\r\n      let vehicle_Make;\r\n      if (val.PendingRenewalsAvailable != null) {\r\n        vehicle_Make = val.PendingRenewalsAvailable;\r\n      }\r\n      return (vehicle_Make);\r\n    })\n    if (this.listVehicleRenewalRequestData.length != 0) {\n      this.noRenewalVehicleData = false;\r\n    } else {\n      this.noRenewalVehicleData = true;\r\n    }\n  }\n\n  // For get the list of Update request list of vehicle\n  noUpdateVehicleData: boolean = false;\n  async getVehicleUpdateRequestList(info) {\n    let outerJsonData: any = {};\n    let jsonData: any = {};\n    jsonData.VehicleID = info.VehicleID;\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\n    this.noUpdateVehicleData = false;\n    await this.apiCall.postAPICallWithToken('api/VehicleManager/ListVehicleUpdateRequests', outerJsonData).then(result => {\n      if (this.vehicleUpdateRequestList.length != 0) {\n        this.noUpdateVehicleData = true;\n        this.vehicleUpdateRequestList = this.vehicleUpdateRequestList.concat(result);;\r\n      } else {\n        this.noUpdateVehicleData = true;\n        this.vehicleUpdateRequestList = result;\r\n      }\n    }).catch(error => {\n      console.log(\"error \", error);\n    });\r\n  }\n\n\n  // For get the vehicle renewal list\n  noRenewalVehicleData: boolean = false;\n  async getVehicleRenewalsList(info) {\n    let outerJsonData: any = {};\n    let jsonData: any = {};\n    jsonData.VehicleID = info.VehicleID;\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\n    this.noRenewalVehicleData = false;\n    await this.apiCall.postAPICallWithToken('api/VehicleManager/ListVehicleRenewals', outerJsonData).then(result => {\n      if (this.vehicleRenewalsList.length != 0) {\n        this.noRenewalVehicleData = true;\n        this.vehicleRenewalsList = this.vehicleRenewalsList.concat(result);\r\n      } else {\n        this.noRenewalVehicleData = true;\n        this.vehicleRenewalsList = result;\r\n      }\n    }).catch(error => {\n      console.log(\"error \", error);\n    });\r\n  }\n\n\n  //Used For Driver Update Request List\r\n  filterDriverUpdateRequestList() {\r\n    this.listDriverUpdateRequestData = this.listDriversDataWithoutFilter.filter((val) => {\r\n      let driver_Request;\r\n      if (val.PendingRequestsAvailable != null) {\r\n        driver_Request = val.PendingRequestsAvailable;\r\n      }\r\n      return (driver_Request);\r\n    })\n    if (this.listDriverUpdateRequestData.length != 0) {\n      this.noUpdateDriverData = false;\n      for (let i = 0; i < this.listDriverUpdateRequestData.length; i++) {\r\n        //setTimeout(() => {\r\n        //  this.getDriverUpdateRequestList(this.listDriverUpdateRequestData[i]);\r\n        //}, 200);\r\n      }\n    } else {\n      this.noUpdateDriverData = true;\r\n    }\n  }\r\n\r\n  //Used For Driver  Renewal List\r\n  filterDriverRenewalRequestList() {\r\n    this.listDriverRenewalRequestData = this.listDriversDataWithoutFilter.filter((val) => {\r\n      let driver_Renewal;\r\n      if (val.PendingRenewalsAvailable != null) {\r\n        driver_Renewal = val.PendingRenewalsAvailable;\r\n      }\r\n      return (driver_Renewal);\r\n    })\n    if (this.listDriverRenewalRequestData.length != 0) {\n      this.noRenewalDriverData = false;\r\n    } else {\n      this.noRenewalDriverData = true;\r\n    }\n  }\n\n  //For Show/Hide Vehicle Renewal Request List\n  showVehicleRenewalRequestList() {\n    this.isShowVehicleRenewalRequestList = true;\r\n    this.isShowDriverRenewalRequestList = false;\r\n  }\n\n  //For Show/Hide Driver Renewal Request List\n  showDriverRenewalRequestList() {\n    this.isShowVehicleRenewalRequestList = false;\r\n    this.isShowDriverRenewalRequestList = true;\r\n  }\n\n  // For Driver Update Request\n  noUpdateDriverData: boolean = false;\n  async getDriverUpdateRequestList(info) {\n    let outerJsonData: any = {};\n    let jsonData: any = {};\n    jsonData.DriverID = info.DriverID;\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\n    this.noUpdateDriverData = false;\n    await this.apiCall.postAPICallWithToken('api/DriverManager/ListDriverUpdateRequests', outerJsonData).then(result => {\n      if (this.driverUpdateRequestList.length != 0) {\n        this.noUpdateDriverData = true;\n        this.driverUpdateRequestList = this.driverUpdateRequestList.concat(result)\r\n      } else {\n        this.driverUpdateRequestList = result;\r\n      }\n    }).catch(error => {\n      console.log(\"error \", error);\n    });\n  }\n\n  // For Driver Renewal request\n  noRenewalDriverData: boolean = false;\n  async getDriverRenewalsList(info) {\n    let jsonData: any = {};\n    jsonData.DriverID = info.DriverID;\n    this.noRenewalDriverData = false;\n    await this.apiCall.postAPICallWithToken('api/DriverManager/getListDriverRenewals', jsonData).then(result => {\n      if (this.driverRenewalsList.length != 0) {\n        this.noRenewalDriverData = true;\n        this.driverRenewalsList = this.driverRenewalsList.concat(result);\r\n      } else {\n        this.noRenewalDriverData = true;\n        this.driverRenewalsList = result;\r\n      }\n    }).catch(error => {\n      console.log(\"error \", error);\n    });\n  }\n\n\n  // For navigating to Vehicle detail page\n  navigateToVehicleUpdateRequestPage(vehicleUpdateRequestInfo) {\r\n    this.common.setValueToSessionStorage('vehicleInfo', vehicleUpdateRequestInfo);\r\n    this.router.navigateByUrl('/vehicle/detailvehicle');\r\n  }\n\n  // For navigating to Driver detail page\n  navigateToDriverUpdateRequestPage(driverUpdateRequestInfo) {\r\n    this.common.setValueToSessionStorage('driverInfo', driverUpdateRequestInfo);\n    this.router.navigateByUrl('/driver/detaildriver');\r\n  }\n\n\n  // For Navigate to Vehicle detail page\n  navigateToVehicleRenewalPage(vehicleRenewalInfo) {\n    this.common.setValueToSessionStorage('vehicleInfo', vehicleRenewalInfo);\r\n    this.router.navigateByUrl('/vehicle/detailvehicle');\n\r\n  }\n  \n  // For navigate to Driver detail page\n  navigateToDriverRenewalPage(driverRenewalInfo) {\r\n    this.common.setValueToSessionStorage('driverInfo', driverRenewalInfo);\n    this.router.navigateByUrl('/driver/detaildriver');\r\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbDatepickerModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GlobalheaderModule } from '../globalheader/globalheader.module';\r\nimport { GlobalfooterModule } from '../globalfooter/globalfooter.module';\r\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\n\n@NgModule({\n  declarations: [DashboardComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbDatepickerModule,\n    NgbModule,\n    GlobalheaderModule,\n    GlobalfooterModule,\n    AutocompleteLibModule,\n    DataTablesModule,\n    NgxPaginationModule\n  ]\n})\nexport class DashboardModule { }\n"]}