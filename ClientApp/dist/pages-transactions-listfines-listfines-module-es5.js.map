{"version":3,"sources":["webpack:///node_modules/angular-datatables/__ivy_ngcc__/index.js","webpack:///node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.directive.js","webpack:///node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.module.js","webpack:///src/app/pages/transactions/listfines/listfines-routing.module.ts","webpack:///src/app/pages/transactions/listfines/listfines.component.html","webpack:///src/app/pages/transactions/listfines/listfines.component.ts","webpack:///src/app/pages/transactions/listfines/listfines.module.ts"],"names":["DataTableDirective","el","dtOptions","prototype","ngOnInit","_this","dtTrigger","subscribe","displayTable","ngOnDestroy","unsubscribe","dt","destroy","dtInstance","Promise","resolve","reject","then","setTimeout","options","rowCallback","row","data","index","columns","columns_1","colsWithPipe","filter","x","ngPipeInstance","forEach","pipe","i","findIndex","e","rowFromCol","childNodes","item","rowVal","$","text","rowValAfter","transform","Object","assign","nativeElement","DataTable","ctorParameters","type","propDecorators","ɵfac","DataTableDirective_Factory","t","ɵdir","selectors","inputs","args","selector","DataTablesModule","forRoot","ngModule","ɵmod","ɵinj","factory","DataTablesModule_Factory","imports","ngJitMode","declarations","exports","routes","path","component","ListfinesRoutingModule","forChild","ListfinesComponent","router","apiCall","common","translate","order","emiratesList","addComapanyMappingResponseData","listofCompanyFines","listofCompanyFinesPayments","companyList","userLoginDetails","selectedCompanyInfo","selectedLang","amount","noCompanyFineRecordsFound","noCompanyFinePaymentsRecordsFound","showListCompanyTable","showListCompanyPaymentTable","fineDataforLatter","companyPaymentFineDataforLatter","ispaybtnDis","isbtnvissible","isfine","body","document","getElementsByTagName","classList","remove","getValueFromSessionStorage","listOfCompanyFines","listOfCompanyFinesPayments","onChangeOfCompany","CompanyInfo","console","log","CompanyType","get","toPromise","language","subscription","getContent","msg","obj","userLoginInfo","jsonData","UserID","ID","Token","CompanyID","outerJsonData","inputParameter","JSON","stringify","isfirstLoad","postAPICallWithToken","result","Message","showSussessFailureMessage","TotalUnPaidFineAmount","Fines","getUnpaidTransactionsId","length","FineStatus","TransactionId","FineID","push","sessionStorage","setItem","error","BrokenTransactionExist","GetPaymentRefID","jsonDataValue","apiEndPoint","Amount","toString","CompanyId","PortalReferenceID","ReferenceID","FineAmount","requestFrom","setValueToSessionStorage","isPageLoad","navigateByUrl","fid","navigate","window","open","finePaymentDetail","PaymentReferenceID","templateUrl","styleUrls","ListfinesModule"],"mappings":"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","file":"pages-transactions-listfines-listfines-module-es5.js","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n\n//# sourceMappingURL=index.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (dtOptions.columns) {\n                                var columns_1 = dtOptions.columns;\n                                // Filter columns with pipe declared\n                                var colsWithPipe = columns_1.filter(function (x) { return x.ngPipeInstance; });\n                                // Iterate\n                                colsWithPipe.forEach(function (el) {\n                                    var pipe = el.ngPipeInstance;\n                                    // find index of column using `data` attr\n                                    var i = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    // get <td> element which holds data using index\n                                    var rowFromCol = row.childNodes.item(i);\n                                    // Transform data with Pipe\n                                    var rowVal = $(rowFromCol).text();\n                                    var rowValAfter = pipe.transform(rowVal);\n                                    // Apply transformed string to <td>\n                                    $(rowFromCol).text(rowValAfter);\n                                });\n                            }\n                            // run user specified row callback if provided.\n                            if (_this.dtOptions.rowCallback) {\n                                _this.dtOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, dtOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    DataTableDirective.propDecorators = {\n        dtOptions: [{ type: Input }],\n        dtTrigger: [{ type: Input }]\n    };\nDataTableDirective.ɵfac = function DataTableDirective_Factory(t) { return new (t || DataTableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataTableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableDirective, selectors: [[\"\", \"datatable\", \"\"]], inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[datatable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { dtOptions: [{\n            type: Input\n        }], dtTrigger: [{\n            type: Input\n        }] }); })();\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as ɵngcc0 from '@angular/core';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\nDataTablesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DataTablesModule });\nDataTablesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DataTablesModule_Factory(t) { return new (t || DataTablesModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DataTablesModule, { declarations: function () { return [DataTableDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DataTableDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTablesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [DataTableDirective],\n                exports: [DataTableDirective]\n            }]\n    }], function () { return []; }, null); })();\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n\n//# sourceMappingURL=angular-datatables.module.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListfinesComponent } from './listfines.component';\n\nconst routes: Routes = [{ path: '', component: ListfinesComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListfinesRoutingModule { }\n","<app-globalheader></app-globalheader>\r\n<div class=\"page-wrapper\" dir=\"{{common.textAlignment}}\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 d-flex action_box py-3\">\r\n        <div class=\"d-flex align-items-center action_box-first\">\r\n          <!-- Franchaise company should not have pay all button, Enabled in staging and production, Abhijith 03-08-2023 -->\r\n          <button class=\"btn theme-blue-btn px-4 add_company_xs mx-auto mt-0\"\r\n                  *ngIf=\"common.isCompanyTypeFranchise == false\" (click)=\"payAll()\"\r\n                  [disabled]=\"((listofCompanyFines && listofCompanyFines.BrokenTransactionExist)||(isbtnvissible))\">\r\n            <img class=\"theme-blue-btn-img\" src=\"/assets/images/company-page/wallet-filled-money-tool.svg\" alt=\"\">\r\n            <span>{{ 'PayAll' | translate }} : <span> {{amount}}</span></span>\r\n          </button>\r\n          <!-- <button class=\"btn theme-blue-btn px-4 add_company_xs mx-auto mt-0\" (click)=\"payAll()\" [disabled]=\"((listofCompanyFines && listofCompanyFines.BrokenTransactionExist)||(isbtnvissible))\">\r\n            <img class=\"theme-blue-btn-img\" src=\"/assets/images/company-page/wallet-filled-money-tool.svg\" alt=\"\">\r\n            <span>{{ 'PayAll' | translate }} : <span> {{amount}}</span></span>\r\n          </button> -->\r\n          <!-- End -->\r\n          <div *ngIf=\"listofCompanyFines && listofCompanyFines.BrokenTransactionExist\" class=\"alert alert-danger payment_validation\">\r\n            <strong>{{ 'PleaseWaitPaymentIsUnderProgress' | translate }}</strong>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h4>{{ 'ListOfCompanyFines' | translate }}</h4>\r\n      </div>\r\n      <div class=\"col-12 card add_company_tab_card\" [class.hidetable]=\"noCompanyFineRecordsFound\">\r\n        <div class=\"table-responsive\">\r\n          <table datatable [dtOptions]=\"dtOptions\" class=\"mytable\" *ngIf=\"showListCompanyTable\">\r\n            <thead>\r\n              <tr>\r\n                <th>{{ 'FineID' | translate }}</th>\r\n                <th>{{ 'CompanyId' | translate }}</th>\r\n                <th>{{ 'FineAmount' | translate }}</th>\r\n                <th>{{ 'FineIssueDate' | translate }}</th>\r\n                <th>{{ 'Status' | translate }}</th>\r\n                <th>{{ 'Notes' | translate }}</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let companyFine of listofCompanyFines.Fines;\">\r\n                <td>{{companyFine.FineID}}</td>\r\n                <td>{{companyFine.CompanyID}}</td>\r\n                <td>{{companyFine.FineAmount}}</td>\r\n                <td>{{companyFine.FineIssueDate}}</td>\r\n                <td>{{companyFine.FineStatus}}</td>\r\n                <td>{{companyFine.Notes}}</td>\r\n                <td>\r\n                  <img src=\"assets/images/printer_icon.svg\" alt=\"search_images\" *ngIf=\"companyFine.FineStatus === 'Paid'\" (click)=\"printFineData(companyFine.FineID)\">\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 card add_company_tab_card\" *ngIf=\"noCompanyFineRecordsFound\">\r\n        <div class=\"col-md-12 p-0\">\r\n          <div class=\"main_card no_record_found\">\r\n            <span>{{ 'NoRecordFound' | translate }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h4>{{ 'ListOfCompanyFinePayments' | translate }}</h4>\r\n      </div>\r\n      <div class=\"col-12 card add_company_tab_card\" [class.hidetable]=\"noCompanyFinePaymentsRecordsFound\">\r\n        <div class=\"table-responsive\">\r\n          <table datatable [dtOptions]=\"dtOptions\" class=\"mytable\" *ngIf=\"showListCompanyPaymentTable\">\r\n            <thead>\r\n              <tr>\r\n                <th>{{ 'CompanyId' | translate }}</th>\r\n                <th>{{ 'PaymentReferenceId' | translate }}</th>\r\n                <th>{{ 'TotalAmount' | translate }}</th>\r\n                <th>{{ 'PaymentDate' | translate }}</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let companyFinePayment of listofCompanyFinesPayments;\">\r\n                <td>{{companyFinePayment.CompanyID}}</td>\r\n                <td>{{companyFinePayment.PaymentReferenceID}}</td>\r\n                <td>{{companyFinePayment.TotalAmount}}</td>\r\n                <td>{{companyFinePayment.PaymentDate}}</td>\r\n                <td>\r\n                  <img src=\"assets/images/printer_icon.svg\" alt=\"search_images\" (click)=\"printFinePaymentData(companyFinePayment)\">\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 card add_company_tab_card\" *ngIf=\"noCompanyFinePaymentsRecordsFound\">\r\n        <div class=\"col-md-12 p-0\">\r\n          <div class=\"main_card no_record_found\">\r\n            <span>{{ 'NoRecordFound' | translate }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-globalfooter></app-globalfooter>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-listfines',\r\n  templateUrl: './listfines.component.html',\r\n  styleUrls: ['./listfines.component.scss']\r\n})\r\nexport class ListfinesComponent implements OnInit {\r\n\r\n  dtOptions: DataTables.Settings = {\r\n    order: [[0, 'desc']]\r\n  };\r\n\r\n  @ViewChild(DataTableDirective, { static: false }) datatableElement: DataTableDirective;\r\n\r\n  dtTrigger = new Subject();\r\n\r\n  reactiveFormName: FormGroup;\r\n\r\n  emiratesList: any = [];\r\n  addComapanyMappingResponseData: any = [];\r\n  listofCompanyFines: any = [];\r\n  listofCompanyFinesPayments: any = [];\r\n  companyList: any = [];\r\n  userLoginDetails: any = {};\r\n  selectedCompanyInfo: any = {};\r\n  selectedLang: string = \"\";\r\n  amount: string = \"\";\r\n  filterSearchBox: any;\r\n  filterStartDate: any;\r\n  filterEndDate: any;\r\n  noCompanyFineRecordsFound: boolean = false;\r\n  noCompanyFinePaymentsRecordsFound: boolean = false;\r\n  showListCompanyTable: boolean = true;\r\n  showListCompanyPaymentTable: boolean = true;\r\n  fineDataforLatter: any = [];\r\n  companyPaymentFineDataforLatter: any = [];\r\n  ispaybtnDis: boolean = false;\r\n  isbtnvissible: boolean = false;\r\n  isfine: boolean = false;\r\n  constructor(\r\n    private router: Router,\r\n    private apiCall: ApiService,\r\n    public common: CommonService,\r\n    private translate: TranslateService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    const body = document.getElementsByTagName('body')[0];\r\n    body.classList.remove('userLogin');\r\n    this.userLoginDetails = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    this.listOfCompanyFines(true);\r\n    this.listOfCompanyFinesPayments();\r\n    this.onChangeOfCompany();\r\n    let CompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    console.log(\"companyinfo\", CompanyInfo);\r\n    this.ispaybtnDis = false;\r\n    if (CompanyInfo.CompanyType == \"Franchise\") {\r\ndebugger;\r\n      this.ispaybtnDis = true;\r\n    }\r\n    debugger;\r\n    if (this.amount == \"\" || this.amount == \"0\") {\r\n      this.isbtnvissible = true;\r\n    }\r\n    else {\r\n      this.isbtnvissible = false;\r\n    }\r\n    \r\n    this.dtOptions = {\r\n      order: [[0, 'desc']],\r\n      language: ({\r\n        \"zeroRecords\": await this.translate.get('NoDataAvailable').toPromise(),\r\n        \"search\": await this.translate.get('Search').toPromise(),\r\n        \"info\": await this.translate.get('Information').toPromise(),\r\n        \"infoFiltered\": await this.translate.get('infoFiltered').toPromise(),\r\n        \"infoEmpty\": await this.translate.get('infoEmpty').toPromise(),\r\n        \"lengthMenu\": await this.translate.get('lengthMenu').toPromise(),\r\n        \"paginate\": {\r\n          \"first\": await this.translate.get('First').toPromise(),\r\n          \"last\": await this.translate.get('Last').toPromise(),\r\n          \"next\": await this.translate.get('Next').toPromise(),\r\n          \"previous\": await this.translate.get('Previous').toPromise(),\r\n        }\r\n      }),\r\n    }  }\r\n\r\n  public subscription: Subscription;\r\n  public ngOnDestroy(): void {\r\n    // onDestroy cancels the subscribe request\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    // Do not forget to unsubscribe the event\r\n    if (this.dtTrigger) {\r\n      this.dtTrigger.unsubscribe();\r\n    }\r\n  }\r\n  onChangeOfCompany() {\r\n    this.subscription = this.common.getContent().subscribe(msg => {\r\n      let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n      if (selectedCompanyInfo != null) {\r\n        this.listOfCompanyFines(true);\r\n        this.listOfCompanyFinesPayments();\r\n        let CompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n        console.log(\"companyinfo\", CompanyInfo);\r\n        this.ispaybtnDis = false;\r\n        if (CompanyInfo.CompanyType == \"Franchise\") {\r\n          debugger;\r\n          this.ispaybtnDis = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // Used for get list of company fine\r\n  listOfCompanyFines(obj) {\r\n    debugger;\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let jsonData: any = {};\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n    let outerJsonData: any = {};\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    outerJsonData.isfirstLoad = obj;\r\n    this.showListCompanyTable = false;\r\n    this.noCompanyFineRecordsFound = false;\r\n    this.amount = '0';\r\n    this.apiCall.postAPICallWithToken('api/TransactionManager/getListCompanyFines', outerJsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        this.listofCompanyFines = result;\r\n        this.amount = result.TotalUnPaidFineAmount;\r\n        console.log(\"1stcall\", result);\r\n        console.log(\"1stcall\", result.TotalUnPaidFineAmount);\r\n        if (this.listofCompanyFines.Fines == null) {\r\n          this.noCompanyFineRecordsFound = true;\r\n        } else {\r\n          let getUnpaidTransactionsId = [];\r\n          debugger;\r\n          for (var i = 0; i < this.listofCompanyFines.Fines.length; i++) {\r\n            if (this.listofCompanyFines.Fines[i].FineStatus == \"Not Paid\") {\r\n              /**Get Unpaid Fines list TransactionID's to send in PaymentGatewayResponseCreateUpdate API, Abhijith 22-11-2023 */\r\n              let obj = {\r\n                TransactionId: this.listofCompanyFines.Fines[i].FineID\r\n              }\r\n              getUnpaidTransactionsId.push(obj);\r\n            }\r\n          }\r\n          /**Store getUnpaidTransactionsId in array to access in payment page, Abhijith 22-11-2023 */\r\n          sessionStorage.setItem(\"GetUnpaidTransactionsIdList\", JSON.stringify(getUnpaidTransactionsId));\r\n        }\r\n        debugger;\r\n        if (this.amount == \"\" || this.amount == \"0\") {\r\n          this.isbtnvissible = true;\r\n          \r\n        }\r\n        else {\r\n          this.isbtnvissible = false; \r\n        }\r\n\r\n\r\n\r\n      }\r\n      this.showListCompanyTable = true;\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  // Used for get list of company fine payment\r\n  listOfCompanyFinesPayments() {\r\n    debugger;\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let jsonData: any = {};\r\n    jsonData.UserID = this.userLoginDetails.ID;\r\n    jsonData.Token = this.userLoginDetails.Token;\r\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n    let outerJsonData: any = {};\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    outerJsonData.isfirstLoad = true;\r\n    this.showListCompanyPaymentTable = false;\r\n    this.noCompanyFinePaymentsRecordsFound = false;\r\n    this.apiCall.postAPICallWithToken('api/TransactionManager/getListCompanyFinePayments', outerJsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        this.listofCompanyFinesPayments = result;\r\n        console.log(\"1stcall\", result);\r\n        console.log(\"1stcall\", result.TotalUnPaidFineAmount);\r\n        if (this.listofCompanyFinesPayments.length == 0) {\r\n          this.noCompanyFinePaymentsRecordsFound = true;\r\n        }\r\n      }\r\n      this.showListCompanyPaymentTable = true;\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  // Used for pay company fine\r\n  payAll() {\r\n    if (this.listofCompanyFines && this.listofCompanyFines.TotalUnPaidFineAmount > 0) {\r\n      if (!this.listofCompanyFines.BrokenTransactionExist) {\r\n        this.GetPaymentRefID();\r\n      }\r\n    }\r\n  }\r\n  // Used for get payment reference id while doing payment\r\n  async GetPaymentRefID() {\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let outerJsonData: any = {};\r\n    let jsonDataValue: any = {}; console.log(\"selected companyinfo\", selectedCompanyInfo);\r\n    jsonDataValue.CompanyID = selectedCompanyInfo.CompanyID;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonDataValue);\r\n    outerJsonData.apiEndPoint = '/CRM/API/GetCompanyFinePaymentRefID';\r\n    this.listOfCompanyFines(false);\r\n    outerJsonData.UserID = this.userLoginDetails.ID;\r\n    outerJsonData.Amount = this.listofCompanyFines.TotalUnPaidFineAmount.toString();\r\n    outerJsonData.CompanyId = selectedCompanyInfo.CompanyID;\r\n    await this.apiCall.postAPICallWithToken('api/EnquiryManager/GetPaymentRefID', outerJsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        let jsonData: any = {}\r\n        jsonData.UserID = this.userLoginDetails.ID;\r\n        jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n        jsonData.PortalReferenceID = result.ReferenceID;\r\n        jsonData.FineAmount = this.listofCompanyFines.TotalUnPaidFineAmount;\r\n        jsonData.requestFrom = 'finePayAll';\r\n        this.common.setValueToSessionStorage('paymentInfo', jsonData);\r\n        this.common.isPageLoad = true;\r\n        this.router.navigateByUrl('/payment/choosepaymentgetway');\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  // Used for company fine list print functionality\r\n  printFineData(fid) {\r\n    let jsonData: any = {};\r\n    jsonData.FineID = fid;\r\n    this.apiCall.postAPICallWithToken('api/EnquiryManager/FineLetter', jsonData).then(result => {\r\n      this.fineDataforLatter = result;\r\n      this.common.setValueToSessionStorage('fineDataforLatter', this.fineDataforLatter);\r\n      this.router.navigate([]).then(result => { window.open('/print/printfinedetail', '_blank'); });\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  // Used for company fine payment list print functionality\r\n  printFinePaymentData(finePaymentDetail) {\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let jsonData: any = {};\r\n    let outerJsonData: any = {};\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.CompanyID = finePaymentDetail.CompanyID;\r\n    jsonData.PaymentReferenceID = finePaymentDetail.PaymentReferenceID;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    outerJsonData.isfirstLoad = true;\r\n    this.apiCall.postAPICallWithToken('api/TransactionManager/CompanyFinePaymentReceipt', outerJsonData).then(result => {\r\n      this.companyPaymentFineDataforLatter = result;\r\n      this.common.setValueToSessionStorage('companyPaymentFineDataforLatter', this.companyPaymentFineDataforLatter);\r\n      this.router.navigate([]).then(result => { window.open('/print/finepaymentrecepit', '_blank'); });\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListfinesRoutingModule } from './listfines-routing.module';\nimport { ListfinesComponent } from './listfines.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbDatepickerModule, NgbModule, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTablesModule } from 'angular-datatables';\nimport { GlobalheaderModule } from '../../common/globalheader/globalheader.module';\nimport { GlobalfooterModule } from '../../common/globalfooter/globalfooter.module';\n\n\n@NgModule({\n  declarations: [ListfinesComponent],\n  imports: [\n    CommonModule,\n    ListfinesRoutingModule,\n    TranslateModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbDatepickerModule,\n    NgbModule,\n    GlobalheaderModule,\n    GlobalfooterModule\n  ]\n})\nexport class ListfinesModule { }\n"]}