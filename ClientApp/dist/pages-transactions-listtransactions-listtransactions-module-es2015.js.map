{"version":3,"sources":["./node_modules/angular-datatables/__ivy_ngcc__/index.js","./node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.directive.js","./node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.module.js","./src/app/pages/transactions/listtransactions/listtransactions-routing.module.ts","./src/app/pages/transactions/listtransactions/listtransactions.component.ts","./src/app/pages/transactions/listtransactions/listtransactions.component.html","./src/app/pages/transactions/listtransactions/listtransactions.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwE;AACL;;AAEnE,iC;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAC6D;AAC9B;AACS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,yBAAyB,EAAE;AAC7G;AACA;AACA;AACA;AACA,8EAA8E,0BAA0B,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA,qDAAqD;AACrD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA,kEAAkE,sCAAsC,+DAAwB,CAAC,wDAAiB,GAAG;AACrJ,0BAA0B,+DAAwB,EAAE,wEAAwE,iDAAiD,EAAE;AAC/K,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,EAAE,EAAE,GAAG;AAChE,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;AAChB;AACA,CAAC;AAC6B;;AAE9B,wD;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACyC;AACM;AACqB;AAC5B;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8DAAuB,EAAE,yBA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","file":"pages-transactions-listtransactions-listtransactions-module-es2015.js","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n\n//# sourceMappingURL=index.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (dtOptions.columns) {\n                                var columns_1 = dtOptions.columns;\n                                // Filter columns with pipe declared\n                                var colsWithPipe = columns_1.filter(function (x) { return x.ngPipeInstance; });\n                                // Iterate\n                                colsWithPipe.forEach(function (el) {\n                                    var pipe = el.ngPipeInstance;\n                                    // find index of column using `data` attr\n                                    var i = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    // get <td> element which holds data using index\n                                    var rowFromCol = row.childNodes.item(i);\n                                    // Transform data with Pipe\n                                    var rowVal = $(rowFromCol).text();\n                                    var rowValAfter = pipe.transform(rowVal);\n                                    // Apply transformed string to <td>\n                                    $(rowFromCol).text(rowValAfter);\n                                });\n                            }\n                            // run user specified row callback if provided.\n                            if (_this.dtOptions.rowCallback) {\n                                _this.dtOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, dtOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    DataTableDirective.propDecorators = {\n        dtOptions: [{ type: Input }],\n        dtTrigger: [{ type: Input }]\n    };\nDataTableDirective.ɵfac = function DataTableDirective_Factory(t) { return new (t || DataTableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataTableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableDirective, selectors: [[\"\", \"datatable\", \"\"]], inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[datatable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { dtOptions: [{\n            type: Input\n        }], dtTrigger: [{\n            type: Input\n        }] }); })();\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as ɵngcc0 from '@angular/core';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\nDataTablesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DataTablesModule });\nDataTablesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DataTablesModule_Factory(t) { return new (t || DataTablesModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DataTablesModule, { declarations: function () { return [DataTableDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DataTableDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTablesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [DataTableDirective],\n                exports: [DataTableDirective]\n            }]\n    }], function () { return []; }, null); })();\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n\n//# sourceMappingURL=angular-datatables.module.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListtransactionsComponent } from './listtransactions.component';\n\nconst routes: Routes = [{ path: '', component: ListtransactionsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListtransactionsRoutingModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-listtransactions',\r\n  templateUrl: './listtransactions.component.html',\r\n  styleUrls: ['./listtransactions.component.scss']\r\n})\r\nexport class ListtransactionsComponent implements OnInit {\r\n\r\n  dtOptions: DataTables.Settings = {\r\n    order: [[1, 'desc']]\r\n  };\r\n\r\n  @ViewChild(DataTableDirective, { static: false }) datatableElement: DataTableDirective;\r\n\r\n  dtTrigger = new Subject();\r\n\r\n  reactiveFormName: FormGroup;\r\n\r\n  emiratesList: any = [];\r\n  addComapanyMappingResponseData: any = [];\r\n  listOfTransactions: any = [];\r\n  companyList: any = [];\r\n  userLoginDetails: any = {};\r\n  selectedCompanyInfo: any = {};\r\n  selectedLang: string = \"\";\r\n  amount: number = 0;\r\n  pendingFineAmount: number = 0;\r\n  PendingAmount: number = 0;\r\n  filterSearchBox: any;\r\n  filterStartDate: any;\r\n  ispaybtnDis: boolean = false;\r\n  filterEndDate: any;\r\n  noRecordsFound: boolean = false;\r\n  transactionIDToDelete: any;\r\n  getDataFromTransactionList: any;\r\n  isShowNoticepopUp: boolean = false;\r\n  isbtndisable: boolean = false;\r\n  getUnpaidTransactionsId = [];\r\n  constructor(\r\n    private router: Router,\r\n    private apiCall: ApiService,\r\n    public common: CommonService,\r\n    private translate: TranslateService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    const body = document.getElementsByTagName('body')[0];\r\n    body.classList.remove('userLogin');\r\n\r\n    this.userLoginDetails = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    this.selectedCompanyInfo\r\n    this.listOfTransanctions();\r\n    this.onChangeOfCompany();\r\n    this.dtOptions = {\r\n      order: [[0, 'desc']],\r\n      language: ({\r\n        \"zeroRecords\": await this.translate.get('NoDataAvailable').toPromise(),\r\n        \"search\": await this.translate.get('Search').toPromise(),\r\n        \"info\": await this.translate.get('Information').toPromise(),\r\n        \"infoFiltered\": await this.translate.get('infoFiltered').toPromise(),\r\n        \"infoEmpty\": await this.translate.get('infoEmpty').toPromise(),\r\n        \"lengthMenu\": await this.translate.get('lengthMenu').toPromise(),\r\n        \"paginate\": {\r\n          \"first\": await this.translate.get('First').toPromise(),\r\n          \"last\": await this.translate.get('Last').toPromise(),\r\n          \"next\": await this.translate.get('Next').toPromise(),\r\n          \"previous\": await this.translate.get('Previous').toPromise(),\r\n        }\r\n      }),\r\n    }\r\n  }\r\n\r\n  showListTable: boolean = true;\r\n  public subscription: Subscription;\r\n  public ngOnDestroy(): void {\r\n    // onDestroy cancels the subscribe request\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    // Do not forget to unsubscribe the event\r\n    if (this.dtTrigger) {\r\n      this.dtTrigger.unsubscribe();\r\n    }\r\n  }\r\n  onChangeOfCompany() {\r\n    this.subscription = this.common.getContent().subscribe(msg => {\r\n      let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n      if (selectedCompanyInfo != null) {\r\n        this.listOfTransanctions();\r\n        //this.transactionPayAllAmount(true);////added code by radhika on 24-07-2023 for transaction amount issue on calling both api's \r\n      }\r\n    });\r\n  }\r\n\r\n  // Used for get transaction list\r\n  async listOfTransanctions() {\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let jsonData: any = {};\r\n    jsonData.UserID = this.userLoginDetails.ID;\r\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n    jsonData.Token = this.userLoginDetails.Token;\r\n    this.showListTable = false;\r\n    this.noRecordsFound = false;\r\n    await this.apiCall.postAPICallWithToken('api/TransactionManager/getTransactionList', jsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        debugger;\r\n        //This is having reference in PayAll() & GetPaymentRefID() methods, Abhijith 04-08-2023\r\n        this.getDataFromTransactionList = result;\r\n        this.amount = result.Amount;\r\n        this.listOfTransactions = result.ListTransactions;\r\n        //Code changes done by radhika for transaction amounts check on calling both api's 24-07-2023 start\r\n        if (this.listOfTransactions.length == 0) {\r\n          this.noRecordsFound = true;\r\n        }\r\n        else {\r\n          this.PendingAmount = 0;\r\n          let getUnpaidTransactionsId = [];\r\n          \r\n          for (var i = 0; i < this.listOfTransactions.length; i++) {\r\n            if (this.listOfTransactions[i].TransactionStatus == \"UnPaid\") {\r\n              this.PendingAmount += this.listOfTransactions[i].Fees;//test\r\n              /**Get Unpaid transaction list TransactionID's to send in PaymentGatewayResponseCreateUpdate API, Abhijith 22-11-2023 */\r\n              let obj = {\r\n                TransactionId : this.listOfTransactions[i].TransactionID\r\n                //unpaidTransactionAmount : this.listOfTransactions[i].Fees.toString()\r\n              }\r\n              getUnpaidTransactionsId.push(obj);              \r\n            }\r\n          }\r\n          /**Store getUnpaidTransactionsId in array to access in payment page, Abhijith 22-11-2023 */\r\n          sessionStorage.setItem(\"GetUnpaidTransactionsIdList\", JSON.stringify(getUnpaidTransactionsId));\r\n\r\n          if (!this.common.isCompanyTypeFranchise) { \r\n          //added below code for showing validation message to  Restrict Transaction Payment depends on Fines\r\n          // If we have un paid Transaction and un paid Fine, the fines should be paid first.radhika-04-09-2023\r\n          let outerJsonData: any = {};\r\n          outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n          outerJsonData.isfirstLoad = true;\r\n          this.apiCall.postAPICallWithToken('api/TransactionManager/getListCompanyFines', outerJsonData).then(result => {\r\n            if (result.Message) {\r\n              this.common.showSussessFailureMessage(2, result.Message);\r\n            } else {\r\n              this.pendingFineAmount = result.TotalUnPaidFineAmount;\r\n              console.log(\"1stcall\", result);\r\n              console.log(\"1stcall\", result.TotalUnPaidFineAmount);\r\n              if (this.PendingAmount != 0 && this.pendingFineAmount != 0) {\r\n                this.common.showSussessFailureMessage(2, 'Please pay pending fines first before doing pending payment', false);\r\n                this.isbtndisable = true;\r\n              }\r\n              else {\r\n                this.isbtndisable = this.PendingAmount == 0 ? true : false;\r\n              }\r\n            }\r\n          }).catch(error => {\r\n            console.log(\"error \", error);\r\n          });//end radhika-04-09-2023\r\n          \r\n        }\r\n        }\r\n      }\r\n      this.showListTable = true;\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  //This API is doesn't exists from 04-08-2023 due to new implementation in gettransactionlist API only, Abhijith 04-08-2023\r\n  // // Used for get total unpaid amount\r\n  // totalUnPaidTransAmount: any;\r\n  // async transactionPayAllAmount(obj) {\r\n  //   let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n  //   let jsonData: any = {};\r\n  //   jsonData.UserID = this.userLoginDetails.ID;\r\n  //   jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n  //   jsonData.Token = this.userLoginDetails.Token;\r\n  //   jsonData.isFirstLoading = obj;\r\n  //   jsonData.transAmount = this.PendingAmount;\r\n  //   this.amount = 0;\r\n  //   await this.apiCall.postAPICallWithToken('api/TransactionManager/getListTotalUnPaidTransAmount', jsonData).then(result => {\r\n  //     debugger;\r\n  //     this.totalUnPaidTransAmount = result;\r\n  //     this.amount = result.Amount;\r\n  //     if (this.amount == 0) {\r\n  //       this.ispaybtnDis = true;\r\n  //     } else {\r\n  //       if (this.PendingAmount != this.amount) {//added code by radhika on 24-07-2023 for transaction amount issue on calling both api's start\r\n  //         this.ispaybtnDis = true;\r\n  //       }\r\n  //       else {\r\n  //         this.ispaybtnDis = false;\r\n  //       }//added code by radhika on 24-07-2023 for transaction amount issue on calling both api's end\r\n  //     }\r\n  //   }).catch(error => {\r\n  //     console.log(\"error \", error);\r\n  //   });\r\n  // }\r\n\r\n  //Used for payment\r\n  payAll() {\r\n    //Use total unpaid amount from getTransactionList API response, Abhijith 04-08-2023\r\n    if (this.getDataFromTransactionList && this.PendingAmount > 0) {\r\n      if (!this.getDataFromTransactionList.BrokenTransactionExist) {\r\n        this.GetPaymentRefID();\r\n      }\r\n    }\r\n  }\r\n  // Used for get payment refrence id while doing payment\r\n  async GetPaymentRefID() {\r\n    debugger;\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let outerJsonData: any = {};\r\n    let jsonDataValue: any = {};\r\n    jsonDataValue.CompanyID = selectedCompanyInfo.CompanyID;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonDataValue);\r\n    outerJsonData.apiEndPoint = '/CRM/API/GetCompanyPaymentRefID';\r\n    outerJsonData.UserID = this.userLoginDetails.ID;\r\n    //Instead of amount parameter from getTransaction API, We will pass this.PendingAmount(Total unpaid list of amount)-05-08-2023\r\n    // outerJsonData.Amount = this.getDataFromTransactionList.Amount.toString();\r\n    outerJsonData.Amount = this.PendingAmount.toString();\r\n    outerJsonData.CompanyId = selectedCompanyInfo.CompanyID;\r\n\r\n    await this.apiCall.postAPICallWithToken('api/EnquiryManager/GetPaymentRefID', outerJsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        let jsonData: any = {}\r\n        jsonData.UserID = this.userLoginDetails.ID;\r\n        jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n        jsonData.PortalReferenceID = result.ReferenceID;\r\n        //Instead of amount parameter from getTransaction API, We will pass this.PendingAmount(Total unpaid list of amount)-05-08-2023\r\n        jsonData.FineAmount = this.PendingAmount;\r\n        jsonData.requestFrom = 'companyPayAll';\r\n        this.common.setValueToSessionStorage('paymentInfo', jsonData);\r\n        this.common.setValueToLocalStorage('paymentInfo', jsonData);\r\n        this.common.isPageLoad = true;\r\n        this.router.navigateByUrl('/payment/choosepaymentgetway');\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  //Ask confirmation before delete, Abhijith 02-08-2023\r\n  showDeleteConfirmationPopUp(transaction_Id) {\r\n    this.transactionIDToDelete = transaction_Id;\r\n    if (this.isShowNoticepopUp) {\r\n      this.isShowNoticepopUp = false;\r\n      this.common.closeNoticePopUp = false;\r\n    } else {\r\n      this.isShowNoticepopUp = true;\r\n    }\r\n  }\r\n\r\n    //Delete updaid transaction, Abhijith 02-08-2023\r\n    onDelete() {\r\n      let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n      let jsonData = {\r\n        CompanyId: selectedCompanyInfo.CompanyID,\r\n        TransactionId: this.transactionIDToDelete\r\n      }\r\n      this.apiCall.postAPICallWithToken('api/TransactionManager/DeleteUnpaidTransaction', jsonData).then(result => {\r\n        debugger;\r\n        if (result != null) {\r\n          this.common.showSussessFailureMessage(1, result.Status);\r\n          this.showDeleteConfirmationPopUp(this.transactionIDToDelete)\r\n          this.listOfTransanctions();\r\n        }\r\n        else {\r\n          this.common.showSussessFailureMessage(2, result.Status);\r\n        }\r\n      }).catch(error => {\r\n        console.log(\"error \", error);\r\n      });\r\n    }\r\n\r\n}\r\n","<app-globalheader></app-globalheader>\r\n<div class=\"page-wrapper\" dir=\"{{common.textAlignment}}\">\r\n  <!-- ============================================================== -->\r\n  <!-- Container fluid  -->\r\n  <!-- ============================================================== -->\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 d-flex action_box py-3\">\r\n        <div class=\"d-flex align-items-center action_box-first\">\r\n          <!-- Franchaise company should not have pay all button, Enabled in staging and production, Abhijith 03-08-2023 -->\r\n          <button class=\"btn theme-blue-btn px-4 add_company_xs mx-auto mt-0\"\r\n          *ngIf=\"common.isCompanyTypeFranchise == false\" (click)=\"payAll()\"\r\n          [disabled]=\"(PendingAmount!=0 && getDataFromTransactionList.BrokenTransactionExist)||isbtndisable\">\r\n          <img class=\"theme-blue-btn-img\" src=\"/assets/images/company-page/wallet-filled-money-tool.svg\" alt=\"\">\r\n          <span>{{ 'PayAll' | translate }} : <span> {{PendingAmount}}</span></span>\r\n        </button>\r\n          <!-- <button class=\"btn theme-blue-btn px-4 add_company_xs mx-auto mt-0\" (click)=\"payAll()\" [disabled]=\"((getDataFromTransactionList.Amount!=0 && getDataFromTransactionList.BrokenTransactionExist)||ispaybtnDis)\">\r\n            <img class=\"theme-blue-btn-img\" src=\"/assets/images/company-page/wallet-filled-money-tool.svg\" alt=\"\">\r\n            <span>{{ 'PayAll' | translate }} : <span> {{amount}}</span></span>\r\n          </button> -->\r\n          <div *ngIf=\"getDataFromTransactionList && getDataFromTransactionList.BrokenTransactionExist\"\r\n          class=\"alert alert-danger payment_validation\">\r\n          <strong>{{ 'PleaseWaitPaymentIsUnderProgress' | translate }}</strong>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"common.mesage.showMessage\" [class]=\"common.mesage.class\" style=\"width: 100%;\">\r\n        <strong>{{common.mesage.mesage}}</strong>\r\n        <span class=\"close\" (click)=\"common.mesage.showMessage=!common.mesage.showMessage\">&times;</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12 card add_company_tab_card\">\r\n        <div class=\"table-responsive\" *ngIf=\"!noRecordsFound\">\r\n          <table datatable [dtOptions]=\"dtOptions\" *ngIf=\"showListTable\" class=\"mytable\">\r\n            <thead>\r\n              <tr>\r\n                <th>{{ 'TransactionId' | translate }}</th>\r\n                <th>{{ 'TransactionName' | translate }}</th>\r\n                <th>{{ 'ServiceCode' | translate }}</th>\r\n                <th>{{ 'Fees' | translate }}</th>\r\n                <th>{{ 'TransactionDate' | translate }}</th>\r\n                <th>{{ 'TransactionStatus' | translate }}</th>\r\n                <th>{{ 'Action' | translate }}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let transactions of listOfTransactions;\">\r\n                <td>{{transactions.TransactionID}}</td>\r\n                <td>{{transactions.TransactionName}}</td>\r\n                <td>{{transactions.ServiceCode}}</td>\r\n                <td>{{transactions.Fees}}</td>\r\n                <td>{{transactions.TransactionDate}}</td>\r\n                <td>{{transactions.TransactionStatus}}</td>\r\n                <td> <button class=\"btn btn-orders edit\" *ngIf=\"transactions.TransactionStatus == 'UnPaid' \"\r\n                    (click)=\"showDeleteConfirmationPopUp(transactions.TransactionID)\">\r\n                    <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                  </button></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col-md-12 p-0\" *ngIf=\"noRecordsFound\">\r\n          <div class=\"main_card no_record_found\">\r\n            <span>{{ 'NoRecordFound' | translate }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!---- For Delete confirmation pop-up, Abhijith 02-08-2023, Released to production on 07-08-2023------>\r\n<div class=\"rakta_login_blk \" *ngIf=\"isShowNoticepopUp\">\r\n  <div class=\"login_container_blk rakta_delete_confirm_blk\">\r\n    <img src=\"/assets/images/close_image.svg\" (click)=\"showDeleteConfirmationPopUp('')\" alt=\"close image\"\r\n      class=\"close_img\">\r\n    <h1 class=\"heading\">{{ 'Are you sure, You want to delete this transaction' | translate }}</h1>\r\n    <div class=\"row\" style=\"padding-left: 56px;\">\r\n      <div class=\"d-flex align-items-center justify-content-between edit_popup_button\">\r\n        <div class=\"col-md-12\">\r\n          <button class=\"login_btn\" (click)=\"onDelete()\"> {{ 'Yes' | translate }} </button>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <button class=\"login_btn\" (click)=\"showDeleteConfirmationPopUp('')\"> {{ 'No' | translate }} </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!----  For Delete confirmation pop-up End------>\r\n<app-globalfooter></app-globalfooter>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListtransactionsRoutingModule } from './listtransactions-routing.module';\nimport { ListtransactionsComponent } from './listtransactions.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbDatepickerModule, NgbModule, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTablesModule } from 'angular-datatables';\nimport { GlobalheaderModule } from '../../common/globalheader/globalheader.module';\r\nimport { GlobalfooterModule } from '../../common/globalfooter/globalfooter.module';\r\n\n@NgModule({\n  declarations: [ListtransactionsComponent],\n  imports: [\n    CommonModule,\n    ListtransactionsRoutingModule,\n    TranslateModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbDatepickerModule,\n    NgbModule,\n    GlobalheaderModule,\n    GlobalfooterModule\n  ]\n})\nexport class ListtransactionsModule { }\n"],"sourceRoot":"webpack:///"}