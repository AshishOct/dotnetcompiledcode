{"version":3,"sources":["webpack:///src/app/pages/payment/choosepaymentgetway/choosepaymentgetway-routing.module.ts","webpack:///src/app/pages/payment/choosepaymentgetway/choosepaymentgetway.component.ts","webpack:///src/app/pages/payment/choosepaymentgetway/choosepaymentgetway.component.html","webpack:///src/app/pages/payment/choosepaymentgetway/choosepaymentgetway.module.ts"],"names":["routes","path","component","ChoosepaymentgetwayRoutingModule","forChild","imports","exports","ChoosepaymentgetwayComponent","router","formBuilder","apiCall","common","translate","el","PageReload","body","document","getElementsByTagName","classList","add","paymentDetailsData","getValueFromSessionStorage","requestFrom","isBackToFineEnquirySearch","isPageLoad","location","reload","PaymentGatewayRequestInitation","navigateByUrl","paymentGateway","getUnpaidTransactionsIdList","JSON","parse","sessionStorage","getItem","jsonData","userLoginInfo","UserID","ID","CompanyID","FineID","FineAmount","Amount","FinalizedAmount","GatewayType","PortalReferenceID","ReferenceID","Type","fineEnq","PlateEmirate","PlateCode","PlateNumber","serviceListId","ServiceID","paymentServeId","Token","postAPICallWithoutToken","then","result","Message","showSussessFailureMessage","access_token","error","console","log","PaymentTransactionsList","postAPICallWithToken","Outcome","showSubmitForm","setValueToSessionStorage","navigate","replaceUrl","EdirhamPaymentGateway","goBack","selector","templateUrl","styleUrls","ChoosepaymentgetwayModule","declarations"],"mappings":"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","file":"pages-payment-choosepaymentgetway-choosepaymentgetway-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChoosepaymentgetwayComponent } from './choosepaymentgetway.component';\n\nconst routes: Routes = [{ path: '', component: ChoosepaymentgetwayComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChoosepaymentgetwayRoutingModule { }\n","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-choosepaymentgetway',\r\n  templateUrl: './choosepaymentgetway.component.html',\r\n  styleUrls: ['./choosepaymentgetway.component.scss']\r\n})\r\nexport class ChoosepaymentgetwayComponent implements OnInit {\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private apiCall: ApiService,\r\n    public common: CommonService,\r\n    private translate: TranslateService,\r\n    private el: ElementRef,\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.PageReload();\r\n    const body = document.getElementsByTagName('body')[0];\r\n    body.classList.add('userLogin');\r\n    let paymentDetailsData = this.common.getValueFromSessionStorage('paymentInfo');\r\n    if (paymentDetailsData.requestFrom == 'fineEnquiry') {\r\n      this.common.isBackToFineEnquirySearch = true;\r\n    }\r\n  }\r\n\r\n  PageReload() {\r\n    if (this.common.isPageLoad) {\r\n      this.common.isPageLoad = false;\r\n      document.location.reload();\r\n    }\r\n  }\r\n\r\n  // Used for eDirham Payment\r\n  EdirhamPaymentGateway() {\r\n    this.PaymentGatewayRequestInitation(1);\r\n  }\r\n\r\n  // Used for Etisala Payment\r\n  EtisalatPaymentGateway() {\r\n    //this.PaymentGatewayRequestInitation(2);\r\n  }\r\n\r\n  // For navigating to back or previous page\r\n  goBack() {\r\n    let paymentDetailsData = this.common.getValueFromSessionStorage('paymentInfo');\r\n    if (paymentDetailsData.requestFrom == 'companyPayAll') {\r\n      this.router.navigateByUrl('/transactions/listtransactions');\r\n    } else if (paymentDetailsData.requestFrom == 'fineEnquiry') {\r\n      this.router.navigateByUrl('/home/login');\r\n    } else if (paymentDetailsData.requestFrom == 'finePayAll') {\r\n      this.router.navigateByUrl('/transactions/listfines');\r\n    }\r\n  }\r\n\r\n  // Used for Create or Update Payment Gateway Response\r\n  async PaymentGatewayRequestInitation(paymentGateway: number) {\r\n    /**Get unpaid transactions list ID's, Abhijith 22-11-2023 */\r\n    \r\n    let getUnpaidTransactionsIdList = JSON.parse(sessionStorage.getItem(\"GetUnpaidTransactionsIdList\"));\r\n\r\n    let jsonData: any = {};\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let paymentDetailsData = this.common.getValueFromSessionStorage('paymentInfo');\r\n    if (userLoginInfo != null) {\r\n      jsonData.UserID = userLoginInfo.ID;\r\n    }\r\n    if (paymentDetailsData.CompanyID) {\r\n      jsonData.CompanyID = paymentDetailsData.CompanyID;\r\n    }\r\n    if (paymentDetailsData.FineID) {\r\n      jsonData.FineID = paymentDetailsData.FineID;\r\n    }\r\n    if (paymentDetailsData.FineAmount) {\r\n      jsonData.Amount = paymentDetailsData.FineAmount + '';\r\n      jsonData.FinalizedAmount = paymentDetailsData.FineAmount + '';\r\n    }\r\n\r\n    jsonData.GatewayType = paymentGateway + '';\r\n\r\n    if (paymentDetailsData.PortalReferenceID) {\r\n      jsonData.ReferenceID = paymentDetailsData.PortalReferenceID;\r\n    }\r\n\r\n\r\n    if (paymentDetailsData.requestFrom == 'companyPayAll') {\r\n      jsonData.Type = 1;\r\n    } else if (paymentDetailsData.requestFrom == 'fineEnquiry') {\r\n      jsonData.Type = 2;\r\n      let fineEnq = this.common.getValueFromSessionStorage('fineEnquirySearchParameters');\r\n      if (fineEnq && fineEnq.PlateEmirate) {\r\n        jsonData.PlateEmirate = fineEnq.PlateEmirate;\r\n        jsonData.PlateCode = fineEnq.PlateCode;\r\n        jsonData.PlateNumber = fineEnq.PlateNumber;\r\n      }\r\n    } else if (paymentDetailsData.requestFrom == 'finePayAll') {\r\n      jsonData.Type = 3;\r\n    }\r\n\r\n    let serviceListId = '000000-0008';\r\n    if (paymentGateway == 1) {\r\n      if (paymentDetailsData.requestFrom == 'companyPayAll') {\r\n        //jsonData.Type = 1;\r\n        serviceListId = '198412-1210';\r\n      } else if (paymentDetailsData.requestFrom == 'fineEnquiry' || paymentDetailsData.requestFrom == 'finePayAll') {\r\n        serviceListId = '198412-1209';\r\n        //jsonData.Type = 2;\r\n      }\r\n    }\r\n\r\n    jsonData.ServiceID = this.common.paymentServeId;\r\n\r\n    if (userLoginInfo) {\r\n      jsonData.Token = userLoginInfo.Token;\r\n    } else {\r\n      await this.apiCall.postAPICallWithoutToken('api/EnquiryManager/GenerateToken', {}).then(result => {\r\n        if (result.Message) {\r\n          this.common.showSussessFailureMessage(2, result.Message);\r\n        } else {\r\n          jsonData.Token = result.access_token;\r\n        }\r\n      }).catch(error => {\r\n        console.log(\"error \", error);\r\n      });\r\n    }\r\n    /**Send unpaid transaction ID's list in this API entity data only if TYPE == 1(only company), Abhijith 22-11-2023 */\r\n    //if (jsonData.Type == 1) {\r\n    //  jsonData.PaymentTransactionsList = getUnpaidTransactionsIdList; \r\n    //}else{\r\n    //  jsonData.PaymentTransactionsList = null;\r\n    //}\r\n    jsonData.PaymentTransactionsList = getUnpaidTransactionsIdList;\r\n    /**End, Abhijith 22-11-2023 */\r\n\r\n    await this.apiCall.postAPICallWithToken('api/TransactionManager/PaymentGatewayResponseCreateUpdate', jsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        if (result.Outcome == 'Created') {\r\n          paymentDetailsData.paymentGateway = paymentGateway;\r\n          paymentDetailsData.ID = result.ID;\r\n          paymentDetailsData.serviceListId = serviceListId;\r\n          paymentDetailsData.showSubmitForm = true;\r\n          paymentDetailsData.PaymentTransactionsList = result.PaymentTransactionsList;\r\n          this.common.setValueToSessionStorage('paymentInfo', paymentDetailsData);\r\n          this.router.navigate(['/payment/onlinepayment'], { replaceUrl: true });\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n}\r\n","<div class=\"home_page_blk\" dir=\"{{common.textAlignment}}\">\r\n  <div class=\"container_fluid\">\r\n\r\n    <!-- header -->\r\n    <header>\r\n      <div class=\"wrapper\">\r\n        <div class=\"logo_block\">\r\n          <img src=\"../assets/images/RAKTA-LOGO.png\" alt=\"logo image\">\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <!-- header Ends -->\r\n    <!-- choose a payment gateway -->\r\n    <div class=\"payment_gateway_blk\">\r\n      <div class=\"payment_gateway\">\r\n        <div class=\"title_blk\">\r\n          <h2>{{ 'ChoosePaymentGateway' | translate }}</h2>\r\n        </div>\r\n        <div class=\"content\">\r\n          <div class=\"content_blk\">\r\n            <div class=\"content_left\">\r\n              <a (click)=\"EdirhamPaymentGateway()\"><img  src=\"../assets/images/LogoL.svg\" alt=\"eDirham\"></a>\r\n            </div>\r\n            <!--<div class=\"content_left\">\r\n              <a (click)=\"EtisalatPaymentGateway()\"><img   src=\"../assets/images/Etisalat.png\" alt=\"Etisalat\"></a>//Changed Surya\r\n            </div>-->\r\n          </div>\r\n          <a (click)=\"goBack()\" class=\"go_back_btn\"><span><svg id=\"Layer\" enable-background=\"new 0 0 64 64\" height=\"512\" viewBox=\"0 0 64 64\" width=\"512\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m54 30h-39.899l15.278-14.552c.8-.762.831-2.028.069-2.828-.761-.799-2.027-.831-2.828-.069l-17.448 16.62c-.755.756-1.172 1.76-1.172 2.829 0 1.068.417 2.073 1.207 2.862l17.414 16.586c.387.369.883.552 1.379.552.528 0 1.056-.208 1.449-.621.762-.8.731-2.065-.069-2.827l-15.342-14.552h39.962c1.104 0 2-.896 2-2s-.896-2-2-2z\" /></svg></span>{{ 'GoBack' | translate }} </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- choose a payment gateway Ends -->\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChoosepaymentgetwayRoutingModule } from './choosepaymentgetway-routing.module';\nimport { ChoosepaymentgetwayComponent } from './choosepaymentgetway.component';\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\n\n@NgModule({\n  declarations: [ChoosepaymentgetwayComponent],\n  imports: [\n    CommonModule,\n    ChoosepaymentgetwayRoutingModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class ChoosepaymentgetwayModule { }\n"]}