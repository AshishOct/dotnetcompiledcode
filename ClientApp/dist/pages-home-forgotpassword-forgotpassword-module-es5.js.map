{"version":3,"sources":["webpack:///src/app/pages/home/forgotpassword/forgotpassword-routing.module.ts","webpack:///src/app/pages/home/forgotpassword/forgotpassword.component.ts","webpack:///src/app/pages/home/forgotpassword/forgotpassword.component.html","webpack:///src/app/pages/home/forgotpassword/forgotpassword.module.ts"],"names":["routes","path","component","ForgotpasswordRoutingModule","forChild","imports","exports","ForgotpasswordComponent","router","formBuilder","apiCall","common","translate","el","body","document","getElementsByTagName","classList","add","reactiveFormName","group","emiratesId","required","Username","controls","navigateByUrl","invalid","markAllAsTouched","autoFocusOnErrorFieldInRecativeForm","jsonData","EmiratesID","value","postAPICallWithToken","then","result","Message","showSussessFailureMessage","error","console","log","onSubmitForm","goBack","selector","templateUrl","styleUrls","ForgotpasswordModule","declarations"],"mappings":"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","file":"pages-home-forgotpassword-forgotpassword-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForgotpasswordComponent } from './forgotpassword.component';\n\nconst routes: Routes = [{ path: '', component: ForgotpasswordComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgotpasswordRoutingModule { }\n","import { Component, ElementRef, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { CommonService } from '../../../services/common.service';\r\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.scss']\n})\nexport class ForgotpasswordComponent implements OnInit {\n\n\n  reactiveFormName: FormGroup;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private apiCall: ApiService,\n    public common: CommonService,\n    private translate: TranslateService,\n    private el: ElementRef,\n\n  ) { }\n\n  ngOnInit(): void {\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.add('userLogin');\n\n    this.reactiveFormName = this.formBuilder.group({\r\n      emiratesId: ['', [Validators.required]],\r\n      Username: ['', [Validators.required]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\r\n  get d() { return this.reactiveFormName.controls; }\n\n  // Used for navigate to login page when user clicked on Go Back button\n  goBack() {\n    this.router.navigateByUrl('home/login');\n  }\n\n  // Used for submit form\n  onSubmitForm() {\n    if (this.reactiveFormName.invalid) {\r\n      this.reactiveFormName.markAllAsTouched();\r\n      this.common.autoFocusOnErrorFieldInRecativeForm(this.reactiveFormName, this.el);\r\n      return;\r\n    }\n    let jsonData: any = {};\r\n    jsonData.EmiratesID = this.reactiveFormName.value.emiratesId;\r\n    jsonData.Username = this.reactiveFormName.value.Username;   \r\n    this.apiCall.postAPICallWithToken('api/LoginManager/ForgotPassword', jsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message, false);\r\n      } else {\r\n        this.reactiveFormName = this.formBuilder.group({\r\n          emiratesId: ['', [Validators.required]],\r\n          Username: ['', [Validators.required]]\r\n        });\r\n        this.common.showSussessFailureMessage(1, \"Thank you for the requesting the reset password. Kindly check your mail.\", false);\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\n}\n","<div class=\"home_page_blk forget_password_blk\">\r\n  <div class=\"container_fluid\">\r\n    <!-- header -->\r\n    <header>\r\n      <div class=\"wrapper\">\r\n        <div class=\"logo_block\">\r\n          <img src=\"../assets/images/RAKTA-LOGO.png\" alt=\"logo image\">\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <!-- header Ends -->\r\n    <!-- choose a payment gateway -->\r\n    <div class=\"payment_gateway_blk\">\r\n      <div class=\"payment_gateway\">\r\n        <div class=\"title_blk\">\r\n          <h2>{{ 'ForgotPassword' | translate }}</h2>\r\n        </div>\r\n        <div *ngIf=\"common.mesage.showMessage\" [class]=\"common.mesage.class\">\r\n          <strong>{{common.mesage.mesage}}</strong>\r\n          <span class=\"close\" (click)=\"common.mesage.showMessage=!common.mesage.showMessage\">&times;</span>\r\n        </div>\r\n        <form [formGroup]=\"reactiveFormName\" class=\"validation-wizard wizard-circle\" (ngSubmit)=\"onSubmitForm()\">\r\n          <div class=\"content\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"wfirstName2\">{{ 'EmiratesID' | translate }}<span class=\"danger\">*</span> </label>\r\n                  <input type=\"text\" formControlName=\"emiratesId\" class=\"form-control\" placeholder=\" {{ 'EmiratesID' | translate }} \">\r\n                  <div *ngIf=\"(d.emiratesId.touched)  && d.emiratesId.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"d.emiratesId.errors.required\">{{ 'EmiratesID' | translate }} {{ 'isRequired' | translate }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"wfirstName2\">{{ 'EmailIDOrUsername' | translate }}<span class=\"danger\">*</span> </label>\r\n                  <input type=\"text\" formControlName=\"Username\" class=\"form-control\"  (keypress)=\"common.special_char($event);\" placeholder=\" {{ 'EmailIDOrUsername' | translate }} \">\r\n                  <div *ngIf=\"(d.Username.touched )  && d.Username.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"d.Username.errors.required\">{{ 'EmailIDOrUsername' | translate }} {{ 'isRequired' | translate }}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12\">\r\n              <div class=\"forget_pass_btn\">\r\n                <button type=\"submit\" class=\"login_btn\">{{ 'Submit' | translate }}</button>\r\n                <button type=\"button\" class=\"login_btn\" (click)=\"goBack()\">{{ 'GoBack' | translate }}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ForgotpasswordRoutingModule } from './forgotpassword-routing.module';\nimport { ForgotpasswordComponent } from './forgotpassword.component';\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbDatepickerModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { GlobalheaderModule } from '../../common/globalheader/globalheader.module';\r\nimport { GlobalfooterModule } from '../../common/globalfooter/globalfooter.module';\r\n\n\n@NgModule({\n  declarations: [ForgotpasswordComponent],\n  imports: [\n    CommonModule,\n    ForgotpasswordRoutingModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbDatepickerModule,\n    NgbModule,\n    GlobalheaderModule,\n    GlobalfooterModule\n  ]\n})\nexport class ForgotpasswordModule { }\n"]}