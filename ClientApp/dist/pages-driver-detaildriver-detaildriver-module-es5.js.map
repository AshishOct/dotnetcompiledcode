{"version":3,"sources":["webpack:///node_modules/angular-datatables/__ivy_ngcc__/index.js","webpack:///node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.directive.js","webpack:///node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.module.js","webpack:///src/app/pages/driver/detaildriver/detaildriver-routing.module.ts","webpack:///src/app/pages/driver/detaildriver/detaildriver.component.html","webpack:///src/app/pages/driver/detaildriver/detaildriver.component.ts","webpack:///src/app/pages/driver/detaildriver/detaildriver.module.ts"],"names":["DataTableDirective","el","dtOptions","prototype","ngOnInit","_this","dtTrigger","subscribe","displayTable","ngOnDestroy","unsubscribe","dt","destroy","dtInstance","Promise","resolve","reject","then","setTimeout","options","rowCallback","row","data","index","columns","columns_1","colsWithPipe","filter","x","ngPipeInstance","forEach","pipe","i","findIndex","e","rowFromCol","childNodes","item","rowVal","$","text","rowValAfter","transform","Object","assign","nativeElement","DataTable","ctorParameters","type","propDecorators","ɵfac","DataTableDirective_Factory","t","ɵdir","selectors","inputs","args","selector","DataTablesModule","forRoot","ngModule","ɵmod","ɵinj","factory","DataTablesModule_Factory","imports","ngJitMode","declarations","exports","routes","path","component","DetaildriverRoutingModule","forChild","common","DetaildriverComponent","router","formBuilder","apiCall","translate","modalService","sanitizer","dateTimeAdapter","order","today","Date","driverInfo","renewalattach","viewDriverInfo","updatedriveInfo","driverRenewalsList","emiratesList","driverUpdateRequestList","vehicleTypeList","driverTypePermitListWithFilter","viewDriverAttachmentsList","driverTypeList","driverTypePermitList","showDriverRenewalBtn","showDriverEditBtn","showDriverRenewalsTable","showDriverUpdateRequestTable","showDocumentSection","isFormSubmited","noDriverUpdateRequestRecordsFound","noDriverRenewalRecordsFound","FranchiseDriverType","FranchiseCompanyDriverType","FranchiseDrivertypeid","FranchiseDriverpermittypeid","FranchiseDriverpermittypename","isLateFeeApplied","isPermitypeSelected","driveInfo","file1SubjectName","file2SubjectName","file3SubjectName","file4SubjectName","file5SubjectName","file6SubjectName","setLocale","getValueFromSessionStorage","initRectiveForm","initMasterData","get","toPromise","language","reactiveFormName","group","emiratesId","required","emiratesIdExpiryDate","firstName","lastName","email","mobileNo","gender","nationality","licenseNumber","emirate","issueDate","expiryDate","chooseType","typeOfPermit","permitIssueDate","permitExpiryDate","permitFees","driverRenewalForm","ID","driverId","companyId","fees","driverTypeID","typeOfPermitID","permitStartDate","emiratesIDExpiryDate","drivingLicenseExpiryDate","file1","file2","file3","file4","file5","file6","lateFee","totalAmount","driverViewRenewalForm","controls","mesage","showAddDriverBtn","getDriverDeatilInfo","getDriverRenewalsList","getEmiratesList","getDriverUpdateRequestList","getViewDriverAttachmentsList","getDriverTypeList","getDriverTypePermitList","selectedDriverInfo","DriverType","isCompanyTypeFranchise","DriverTrainingStatus","PendingPayments","PermitExpiryDate","newdate","split","reverse","join","startdate","setDate","getDate","PendingRenewalsAvailable","content","selectedCompanyInfo","expDate","strintoUTCDate","minDateForEID","EmiratesIDExpiryDate","minDateForDriverLic","DrivingLicenseExpiryDate","month","getMonth","day","getFullYear","setValue","franchiseDriverRenewal","indexArray","value","NameEN","length","getfilterDriverTypePermitList","CompanyDriverType","DriverID","CompanyID","stringDateToCalendarDateFormat","open","ariaLabelledBy","size","centered","backdropClass","backdrop","windowClass","result","reason","reset","dismissAll","id","userLoginInfo","jsonData","UserID","Token","postAPICallWithToken","assignDataToDriverViewRenewalForm","error","console","log","driver","assignDataToDriverUpdateRenewalForm","getViewDriverRenewalAttachments","outerJsonData","companyInfo","inputParameter","JSON","stringify","assignDataToform","EmiratesID","FirstName","LastName","Email","MobilePhone","Gender","Nationality","DrivingLicenseNumber","LicenseEmirate","DrivingLicenseIssueDate","TypeOfPermit","PermitIssueDate","Fees","PermitStartDate","LateFees","TotalAmount","permitTypeArray","PermitName","Status","needArray","invalid","DriverTypeID","TypeOfPermitID","convertDateFormat","showLateFee","toString","ApiEndPoint","Message","showSussessFailureMessage","onSubmitOfAttchmentForm","loader","assignAttachmentToFrom","attachmentArray","attachment","Data","bypassSecurityTrustResourceUrl","push","driverInfom","requestFrom","setValueToSessionStorage","navigateByUrl","postEnquiryAPICallWithToken","searchValue","FeesForRenew","array","isNaN","g","fee","parseInt","newDate","setMonth","pemitIssueDate","expiredDate","todaysDate","diffInTime","getTime","diffInDays","date","monthDiff","yearDiff","numberOfMonth","amount","Number","currentDate","getDateFromExpiredDate","getMonthFromExpiredDate","getAmountfromForm","calculateAmountOne","assignSameExpiryDateToPermitStartDate","addOneYearToExpiryDate","newDateAfterAddingYearToExpiredDate","franshiseTotalFee","yearForPermitStartDateOne","yearsAddedToExpiryDate","getDateFromYearsAddedToExpiryDate","addOneMoreYear","getNewDateAdded","getDateFromNewDate","dayForPermitStartDateTwo","monthForPermitStartDateTwo","yearForPermitStartDateTwo","minusOneyear","json","downloadFile","event","keyIndex","target","files","file","fileExtanction","name","substring","lastIndexOf","allowedFileType","includes","toLowerCase","allowedfileSize","allowedFileSizeInMB","FileName","reader","FileReader","readAsDataURL","onload","uplaodAttachmentToServerOneByOne","spinner","hide","Subject","DriverRenewalID","fileData","APIEndPoint","AttachmentID","val","indexArray2","indexArray3","indexArray4","indexArray5","indexArray6","getDay","convertDate","minDate","templateUrl","styleUrls","DetaildriverModule","provide","useValue","providers"],"mappings":"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AAA,e;AAAA,yvO;AAAA;AAAA;ADhBlC;;AACA;;AACE;;AACE;;AACE;;AACE;;AAA4B;;AAA2C;;;;AAAwB;;AAAI;;AACnG;;AAA4B;;AAAyC;;;;AAA0B;;AAAI;;AACnG;;AAAuD;;AAAkC;;AAC3F;;AACF;;AACA;;AACE;;AACE;;AAEA;;AACE;;AAIA;;AAIF;;AACF;;AACF;;AACA;;AAIA;;AACE;;AACE;;AACE;;AACE;;AAA4B;;;;AAA8B;;AAC5D;;AACA;;AACE;;AAEE;;AACE;;AAAI;;;;AAA6B;;AACjC;;AACE;;AACE;;AACE;;AAAwB;;;;AAA8B;;AACtD;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAgC;;;;AAAsC;;AACtE;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAuB;;;;AAA8B;;AACrD;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAsB;;;;AAA6B;;AACnD;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAqB;;;;AAA4B;;AACjD;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAsB;;;;AAA6B;;AACnD;;;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAyB;;;;AAAgC;;AACzD;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAkB;;;;AAA2B;;AAAqB;;AAAC;;AAAQ;;AAC3E;;;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAI;;;;AAAwC;;AAC5C;;AACE;;AACE;;AACE;;AAA2B;;;;AAAkC;;AAC7D;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAqB;;;;AAA4B;;AACjD;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAuB;;;;AAA8B;;AACrD;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAwB;;;;AAA+B;;AACvD;;;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAI;;;;AAA8B;;AAClC;;AACE;;AACE;;AACE;;AAAwB;;;;AAA+B;;AACvD;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA0B;;;;AAAiC;;AAC3D;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA6B;;;;AAAoC;;AACjE;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA8B;;;;AAAqC;;AACnE;;;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAkB;;;;AAAyB;;AAC3C;;;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAAI;;;;AAA+B;;AACnC;;AACE;;AAMF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAI;;;;AAAiC;;AACvC;;AACA;;AACE;;AA8BA;;AAKF;;AACF;;AACA;;AACE;;AACE;;AAAI;;;;AAAuC;;AAC7C;;AACA;;AACE;;AAwBA;;AAKF;;AACF;;AACF;;AACF;;AACA;;AAGA;;;;AAnQ0B;;AAAA;;AAIa;;AAAA;;AAAwC;;AAAA;;AACxC;;AAAA;;AAAsC;;AAAA;;AACd;;AAAA;;AAQH;;AAAA;;AAIA;;AAAA;;AAOnD;;AAAA;;AAQ+B;;AAAA;;AAGtB;;AAAA;;AAGE;;AAAA;;AAI0B;;AAAA;;AAC6C;;AAAA;;AAKrC;;AAAA;;AAC+C;;AAAA;;AAKxD;;AAAA;;AAC6C;;AAAA;;AAK9C;;AAAA;;AAC6C;;AAAA;;AAK9C;;AAAA;;AAC2C;;AAAA;;AAK1C;;AAAA;;AAC6C;;AAAA;;AAO1C;;AAAA;;AAC6C;;AAAA;;AAKpD;;AAAA;;AAC+C;;AAAA;;AAOnE;;AAAA;;AAI6B;;AAAA;;AAC6C;;AAAA;;AAKnD;;AAAA;;AAC6C;;AAAA;;AAK3C;;AAAA;;AAC6C;;AAAA;;AAK5C;;AAAA;;AAC6C;;AAAA;;AAOvE;;AAAA;;AAI0B;;AAAA;;AAC6C;;AAAA;;AAK3C;;AAAA;;AAC6C;;AAAA;;AAK1C;;AAAA;;AAC6C;;AAAA;;AAK5C;;AAAA;;AAC6C;;AAAA;;AAKzD;;AAAA;;AACmD;;AAAA;;AAOvE;;AAAA;;AAEoB;;AAAA;;AAe5B;;AAAA;;AAG0B;;AAAA;;AA8BH;;AAAA;;AASvB;;AAAA;;AAG0B;;AAAA;;AAwBH;;AAAA;;;;;;;;;;sECxOtBA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTlB,kBAAQ,EAAE,kBADD;AAETkT,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkCaC,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,iBAJlB,CACT;AAAEC,eAAO,EAAE,sEAAX;AAAiCC,gBAAQ,EAAE;AAA3C,OADS,C;AAEV,gBAfQ,CACP,4DADO,EAEP,sFAFO,EAGP,kEAHO,EAIP,mEAJO,EAKP,8EALO,EAMP,2FANO,EAOP,2FAPO,EAQP,mEARO,EASP,yEATO,EAUP,oEAVO,EAWP,mEAXO,CAeR;;;;0HAEUF,kB,EAAkB;AAAA,uBAlBd,6EAkBc;AAlBO,kBAElC,4DAFkC,EAGlC,sFAHkC,EAIlC,kEAJkC,EAKlC,mEALkC,EAMlC,8EANkC,EAOlC,2FAPkC,EAQlC,2FARkC,EASlC,mEATkC,EAUlC,yEAVkC,EAWlC,oEAXkC,EAYlC,mEAZkC;AAkBP,O;AANX,K;;;;;sEAMPA,kB,EAAkB;cAnB9B,sDAmB8B;eAnBrB;AACR1S,sBAAY,EAAE,CAAC,6EAAD,CADN;AAERF,iBAAO,EAAE,CACP,4DADO,EAEP,sFAFO,EAGP,kEAHO,EAIP,mEAJO,EAKP,8EALO,EAMP,2FANO,EAOP,2FAPO,EAQP,mEARO,EASP,yEATO,EAUP,oEAVO,EAWP,mEAXO,CAFD;AAeR+S,mBAAS,EAAE,CACT;AAAEF,mBAAO,EAAE,sEAAX;AAAiCC,oBAAQ,EAAE;AAA3C,WADS;AAfH,S;AAmBqB,Q","file":"pages-driver-detaildriver-detaildriver-module-es5.js","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n\n//# sourceMappingURL=index.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (dtOptions.columns) {\n                                var columns_1 = dtOptions.columns;\n                                // Filter columns with pipe declared\n                                var colsWithPipe = columns_1.filter(function (x) { return x.ngPipeInstance; });\n                                // Iterate\n                                colsWithPipe.forEach(function (el) {\n                                    var pipe = el.ngPipeInstance;\n                                    // find index of column using `data` attr\n                                    var i = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    // get <td> element which holds data using index\n                                    var rowFromCol = row.childNodes.item(i);\n                                    // Transform data with Pipe\n                                    var rowVal = $(rowFromCol).text();\n                                    var rowValAfter = pipe.transform(rowVal);\n                                    // Apply transformed string to <td>\n                                    $(rowFromCol).text(rowValAfter);\n                                });\n                            }\n                            // run user specified row callback if provided.\n                            if (_this.dtOptions.rowCallback) {\n                                _this.dtOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, dtOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    DataTableDirective.propDecorators = {\n        dtOptions: [{ type: Input }],\n        dtTrigger: [{ type: Input }]\n    };\nDataTableDirective.ɵfac = function DataTableDirective_Factory(t) { return new (t || DataTableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataTableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableDirective, selectors: [[\"\", \"datatable\", \"\"]], inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[datatable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { dtOptions: [{\n            type: Input\n        }], dtTrigger: [{\n            type: Input\n        }] }); })();\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as ɵngcc0 from '@angular/core';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\nDataTablesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DataTablesModule });\nDataTablesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DataTablesModule_Factory(t) { return new (t || DataTablesModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DataTablesModule, { declarations: function () { return [DataTableDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DataTableDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTablesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [DataTableDirective],\n                exports: [DataTableDirective]\n            }]\n    }], function () { return []; }, null); })();\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n\n//# sourceMappingURL=angular-datatables.module.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DetaildriverComponent } from './detaildriver.component';\n\nconst routes: Routes = [{ path: '', component: DetaildriverComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DetaildriverRoutingModule { }\n","<app-globalheader></app-globalheader>\r\n<div class=\"page-wrapper\" dir=\"{{common.textAlignment}}\">\r\n  <div class=\"container-fluid\">\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb cus_bdm_cls\">\r\n        <li class=\"breadcrumb-item\"><a [routerLink]=\"['/company/listcompany']\">{{ 'Home' | translate }}</a></li>\r\n        <li class=\"breadcrumb-item\"><a [routerLink]=\"['/driver/listdriver']\">{{ 'Driver' | translate }}</a></li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">{{driveInfo.DrivingLicenseNumber}}</li>\r\n      </ol>\r\n    </nav>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 d-flex action_box py-3\">\r\n        <div class=\"d-flex align-items-center action_box-first\">\r\n        </div>\r\n        <div>\r\n          <button class=\"btn theme-blue-btn add_company_xs\" *ngIf=\"showDriverRenewalBtn\" (click)=\"openDriverRenewalModel(mymodal)\">\r\n            <img src=\"/assets/images/company-page/add.svg\" alt=\"\" class=\"theme-blue-btn-img\">\r\n            <span>{{ 'DriverRenewal' | translate }}</span>\r\n          </button>\r\n          <button class=\"btn theme-blue-btn add_company_xs\" *ngIf=\"showDriverEditBtn\" (click)=\"navigateToUpdatePage()\">           \r\n            <img src=\"/assets/images/company-page/add.svg\" alt=\"\" class=\"theme-blue-btn-img\">\r\n            <span>{{ 'EditDriver' | translate }}</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"common.mesage.showMessage\" [class]=\"common.mesage.class\">\r\n      <strong>{{common.mesage.mesage}}</strong>\r\n      <span class=\"close\" (click)=\"common.mesage.showMessage=!common.mesage.showMessage\">&times;</span>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header bg-info list_esit_bg_info\">\r\n            <h4 class=\"mb-0 text-white\">{{ 'ViewDriver' | translate }}</h4>\r\n          </div>\r\n          <div class=\"card-body wizard-content\">\r\n            <form [formGroup]=\"reactiveFormName\" class=\"validation-wizard wizard-circle mt-5\">\r\n              <!-- Step 1 -->\r\n              <section class=\"vehi_section\">\r\n                <h4>{{ 'BasicInfo' | translate }}</h4>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"EmiratesId\">{{ 'EmiratesID' | translate }}</label>\r\n                      <input type=\"text\" formControlName=\"emiratesId\" class=\"form-control\" placeholder=\" {{ 'EmiratesID' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"EmiratesExpiryDate\">{{ 'EmiratesExpiryDate' | translate }}</label>\r\n                      <input type=\"text\" formControlName=\"emiratesIdExpiryDate\" class=\"form-control\" placeholder=\" {{ 'EmiratesExpiryDate' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"FirstName\">{{ 'FirstName' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" placeholder=\" {{ 'FirstName' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"LastName\">{{ 'LastName' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" placeholder=\" {{ 'LastName' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"EmailID\">{{ 'EmailID' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\" {{ 'EmailID' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"MobileNo\">{{ 'MobileNo' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"mobileNo\" class=\"form-control\" placeholder=\" {{ 'MobileNo' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"Nationality\">{{ 'Nationality' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"nationality\" class=\"form-control\" placeholder=\" {{ 'Nationality' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"Fees\">{{ 'Gender' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"text\" formControlName=\"gender\" class=\"form-control\" placeholder=\" {{ 'Gender' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <!-- Step 2 -->\r\n              <section class=\"vehi_section\">\r\n                <h4>{{ 'DriverLicenseDetails' | translate }}</h4>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"LicenseNumber\">{{ 'LicenseNumber' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"licenseNumber\" class=\"form-control\" placeholder=\" {{ 'LicenseNumber' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"Emirate\">{{ 'Emirate' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"emirate\" class=\"form-control\" placeholder=\" {{ 'Emirate' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"IssueDate\">{{ 'IssueDate' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"issueDate\" class=\"form-control\" placeholder=\" {{ 'IssueDate' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"ExpiryDate\">{{ 'ExpiryDate' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"expiryDate\" class=\"form-control\" placeholder=\" {{ 'ExpiryDate' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <!-- Step 3 -->\r\n              <section class=\"vehi_section\">\r\n                <h4>{{ 'PermitType' | translate }}</h4>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"ChooseType\">{{ 'ChooseType' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"chooseType\" class=\"form-control\" placeholder=\" {{ 'ChooseType' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"TypeOfPermit\">{{ 'TypeOfPermit' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"typeOfPermit\" class=\"form-control\" placeholder=\" {{ 'TypeOfPermit' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"PermitIssueDate\">{{ 'PermitIssueDate' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"permitIssueDate\" class=\"form-control\" placeholder=\" {{ 'PermitIssueDate' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"PermitExpiryDate\">{{ 'PermitExpiryDate' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"permitExpiryDate\" class=\"form-control\" placeholder=\" {{ 'PermitExpiryDate' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"Fees\">{{ 'Fees' | translate }} </label>\r\n                      <input type=\"text\" formControlName=\"permitFees\" class=\"form-control\" placeholder=\" {{ 'Fees' | translate }} \" readonly>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <!-- Step 4 -->\r\n              <section class=\"vehi_section\">\r\n                <h4>{{ 'Attachments' | translate }}</h4>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-3\" *ngFor=\"let attachment of viewDriverAttachmentsList;\">\r\n                    <div class=\"form-group attachment_section\">\r\n                      <label class=\"attach_lbl\">{{attachment.Subject}}</label>\r\n                      <label class=\"file_name text-center\" (click)=\"downloadFile(attachment)\">{{attachment.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12 p-0\">\r\n        <h4>{{ 'DriverRenewal' | translate }}</h4>\r\n      </div>\r\n      <div class=\"col-12 card add_company_tab_card\">\r\n        <div class=\"table-responsive\" *ngIf=\"!noDriverRenewalRecordsFound\">\r\n          <table datatable [dtOptions]=\"dtOptions\" class=\"mytable\" *ngIf=\"showDriverRenewalsTable\">\r\n            <thead>\r\n              <tr>\r\n                <th>{{ 'ID' | translate }}</th>\r\n                <th>{{ 'DriverID' | translate }}</th>\r\n                <th>{{ 'PermitStartDate' | translate }}</th>\r\n                <th>{{ 'PermitExpiryDate' | translate }}</th>\r\n                <th>{{ 'Fees' | translate }}</th>\r\n                <th>{{ 'Status' | translate }}</th>\r\n                <th>{{ 'Comments' | translate }}</th>\r\n                <th>{{ 'Action' | translate }}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let drl of driverRenewalsList;\">\r\n                <td>{{drl.ID}}</td>\r\n                <td>{{drl.DriverID}}</td>\r\n                <td>{{drl.PermitStartDate}}</td>\r\n                <td>{{drl.PermitExpiryDate}}</td>\r\n                <td>{{drl.Fees}}</td>\r\n                <td>{{drl.Status}}</td>\r\n                <td>{{drl.Comments}}</td>\r\n                <td class=\"cursor_pointer\">\r\n                  <a *ngIf=\"drl.Status=='Need More Information'\" (click)=\"openDriverUpdateRenewalModel(drl, mymodal)\">{{ 'Edit' | translate }}</a>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col-md-12 p-0\" *ngIf=\"noDriverRenewalRecordsFound\">\r\n          <div class=\"main_card no_record_found\">\r\n            <span>{{ 'NoRecordFound' | translate }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h4>{{ 'DriverUpdateRequest' | translate }}</h4>\r\n      </div>\r\n      <div class=\"col-12 card add_company_tab_card\">\r\n        <div class=\"table-responsive\" *ngIf=\"!noDriverUpdateRequestRecordsFound\">\r\n          <table datatable [dtOptions]=\"dtOptions\" class=\"mytable\" *ngIf=\"showDriverUpdateRequestTable\">\r\n            <thead>\r\n              <tr>\r\n                <th>{{ 'ID' | translate }}</th>\r\n                <th>{{ 'DriverID' | translate }}</th>\r\n                <th>{{ 'LicenseNumber' | translate }}</th>\r\n                <th>{{ 'EmailID' | translate }}</th>\r\n                <th>{{ 'MobileNo' | translate }}</th>\r\n                <th>{{ 'Notes' | translate }}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let driver of driverUpdateRequestList;\">\r\n                <td>{{driver.ID}}</td>\r\n                <td>{{driver.DriverID}}</td>\r\n                <td>{{driver.DrivingLicenseNumber}}</td>\r\n                <td>{{driver.Email}}</td>\r\n                <td>{{driver.MobilePhone}}</td>\r\n                <td>{{driver.Notes}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col-md-12 p-0\" *ngIf=\"noDriverUpdateRequestRecordsFound\">\r\n          <div class=\"main_card no_record_found\">\r\n            <span>{{ 'NoRecordFound' | translate }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<app-globalfooter></app-globalfooter>\r\n\r\n<!--Driver Renewal Pop-up-->\r\n<ng-template #mymodal let-close=\"close\">\r\n  <div class=\"modal-header vehicle_ren_header\">\r\n    <h4 class=\"modal-title\">{{ 'DriverRenewal' | translate }} </h4>\r\n    <img _ngcontent-kmx-c109=\"\" (click)=\"closeModel()\" src=\"/assets/images/close_image.svg\" alt=\"close image\" class=\"close_img\">\r\n  </div>\r\n  <div class=\"modal-body vehicle_ren_body\"  (click)=\"dt2.close(); dt1.close()\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body wizard-content\">\r\n            <form [formGroup]=\"driverRenewalForm\" class=\"validation-wizard wizard-circle\" (ngSubmit)=\"driverRenewalSubmitForm()\">\r\n              <section class=\"vehi_section\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"DriverId\">{{ 'DriverID' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"text\" formControlName=\"driverId\" readonly class=\"form-control\" placeholder=\" {{ 'DriverID' | translate }} \">\r\n                      <div *ngIf=\"(g.driverId.touched || isFormSubmited)  && g.driverId.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.driverId.errors.required\">{{ 'DriverID' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"CompanyId\">{{ 'CompanyId' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"text\" formControlName=\"companyId\" readonly class=\"form-control\" placeholder=\" {{ 'CompanyId' | translate }} \">\r\n                      <div *ngIf=\"(g.companyId.touched || isFormSubmited)  && g.companyId.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.companyId.errors.required\">{{ 'CompanyId' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <section class=\"vehi_section\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"Type\">{{ 'Type' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <select formControlName=\"driverTypeID\" class=\"form-control form-design\" (change)=\"getfilterDriverTypePermitList()\" disabled>\r\n                        <option hidden value=\"\" disabled selected>{{ 'Select' | translate }} {{ 'Type' | translate }}</option>\r\n                        <option *ngFor=\"let vtl of driverTypeList\" [value]=\"vtl.ID\">\r\n                          {{vtl.NameEN}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"(g.driverTypeID.touched || isFormSubmited)  && g.driverTypeID.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.driverTypeID.errors.required\">{{ 'Please' | translate }} {{ 'Select' | translate }} {{ 'Type' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"PermitType\">{{ 'PermitType' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <select formControlName=\"typeOfPermitID\" class=\"form-control form-design\" (change)=\"onchangeOfPermitType()\">\r\n                        <option hidden value=\"\" disabled selected>{{ 'Select' | translate }} {{ 'PermitType' | translate }}</option>\r\n                        <option *ngFor=\"let dtpl of driverTypePermitListWithFilter\" [value]=\"dtpl.ID\">\r\n                          {{dtpl.PermitName}}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"(g.typeOfPermitID.touched || isFormSubmited)  && g.typeOfPermitID.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.typeOfPermitID.errors.required\">{{ 'Please' | translate }} {{ 'Select' | translate }} {{ 'PermitType' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <section class=\"vehi_section\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"PermitStartDate\">{{ 'PermitStartDate' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"text\" formControlName=\"permitStartDate\" class=\"form-control\" placeholder=\" {{ 'PermitStartDate' | translate }} \" readonly>\r\n                      <div *ngIf=\"(g.permitStartDate.touched || isFormSubmited)  && g.permitStartDate.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.permitStartDate.errors.required\">{{ 'PermitStartDate' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"PermitExpiryDate\">{{ 'PermitExpiryDate' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"text\" formControlName=\"permitExpiryDate\" class=\"form-control\" placeholder=\" {{ 'PermitExpiryDate' | translate }} \" readonly>\r\n                      <div *ngIf=\"(g.permitExpiryDate.touched || isFormSubmited)  && g.permitExpiryDate.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.permitExpiryDate.errors.required\">{{ 'PermitExpiryDate' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"Fees\">{{ 'Fees' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"text\" formControlName=\"fees\" class=\"form-control\" placeholder=\" {{ 'Fees' | translate }} \" (keypress)=\"common.allow_numeric($event);\" readonly>\r\n                      <div *ngIf=\"(g.fees.touched || isFormSubmited)  && g.fees.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.fees.errors.required\">{{ 'Fees' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"EmiratesIDExpiryDate\">{{ 'EmiratesExpiryDate' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input [owlDateTime]=\"dt1\" [owlDateTimeTrigger]=\"dt1\" placeholder=\"{{ 'EmiratesExpiryDate' | translate }}\" formControlName=\"emiratesIDExpiryDate\" class=\"form-control password_field\" id=\"date\" (ngModelChange)=\"onSelectDate($event)\" [min]=\"minDateForEID\">\r\n                      <owl-date-time #dt1 [pickerType]=\"'calendar'\" ></owl-date-time>\r\n                      <div *ngIf=\"(g.emiratesIDExpiryDate.touched || isFormSubmited)  && g.emiratesIDExpiryDate.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.emiratesIDExpiryDate.errors.required\">{{ 'EmiratesExpiryDate' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Late fee and Total amount by Abhijith 18-04-23 -->\r\n                <!-- Show late fee if company is not belongs to franchise -->\r\n                 <div class=\"row\" *ngIf=\"driveInfo?.Status == 'Expired' && isLateFeeApplied == true && common.showLateFee == true\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"LateFee\">{{ 'LateFee' | translate }}</label>\r\n                      <input type=\"text\" formControlName=\"lateFee\" class=\"form-control\" placeholder=\" {{ 'Late Fee' | translate }} \" (keypress)=\"common.allow_numeric($event);\" readonly>\r\n                      <div *ngIf=\"(g.lateFee.touched || isFormSubmited)  && g.lateFee.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.lateFee.errors.required\">{{ 'Late Fee' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"TotalAmount\">{{ 'TotalAmount' | translate }}</label>\r\n                      <input type=\"text\" formControlName=\"totalAmount\" class=\"form-control\" placeholder=\" {{ 'TotalAmount' | translate }} \" (keypress)=\"common.allow_numeric($event);\" readonly>\r\n                      <div *ngIf=\"(g.totalAmount.touched || isFormSubmited)  && g.totalAmount.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.totalAmount.errors.required\">{{ 'TotalAmount' | translate }} </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div> \r\n                <!-- End -->\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"DrivingLicenseExpiryDate\">{{ 'DrivingLicenseExpiryDate' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input [owlDateTime]=\"dt2\" [owlDateTimeTrigger]=\"dt2\" placeholder=\"{{ 'DrivingLicenseExpiryDate' | translate }}\" formControlName=\"drivingLicenseExpiryDate\" class=\"form-control form_date\" [min]=\"minDateForDriverLic\">\r\n                      <owl-date-time #dt2 [pickerType]=\"'calendar'\"></owl-date-time>\r\n                      <div *ngIf=\"(g.drivingLicenseExpiryDate.touched || isFormSubmited)  && g.drivingLicenseExpiryDate.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.drivingLicenseExpiryDate.errors.required\">{{ 'DrivingLicenseExpiryDate' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <!--<section *ngIf=\"showDocumentSection\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file1\">{{ 'Document1' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file1')\" id=\"file1\" name=\"file1\">\r\n                      <div *ngIf=\"(g.file1.touched || isFormSubmited)  && g.file1.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file1.errors.required\">{{ 'Document1' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"common.downloadFile(driverRenewalForm.value.file1)\" *ngIf=\"driverRenewalForm.value.file1\">{{driverRenewalForm.value.file1.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file2\">{{ 'Document2' | translate }} <span class=\"danger\"></span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file2')\" id=\"file2\" name=\"file2\">\r\n                      <div *ngIf=\"(g.file2.touched || isFormSubmited)  && g.file2.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file2.errors.required\">{{ 'Document2' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"common.downloadFile(driverRenewalForm.value.file2)\" *ngIf=\"driverRenewalForm.value.file2\">{{driverRenewalForm.value.file2.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file3\">{{ 'Document3' | translate }} <span class=\"danger\"></span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file3')\" id=\"file3\" name=\"file3\">\r\n                      <div *ngIf=\"(g.file3.touched || isFormSubmited)  && g.file3.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file3.errors.required\">{{ 'Document3' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"common.downloadFile(driverRenewalForm.value.file3)\" *ngIf=\"driverRenewalForm.value.file3\">{{driverRenewalForm.value.file3.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file4\">{{ 'EmiratesID' | translate }} <span class=\"danger\"></span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file4')\" id=\"file4\" name=\"file4\">\r\n                      <div *ngIf=\"(g.file4.touched || isFormSubmited)  && g.file4.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file4.errors.required\">{{ 'EmiratesID' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"common.downloadFile(driverRenewalForm.value.file4)\" *ngIf=\"driverRenewalForm.value.file4\">{{driverRenewalForm.value.file4.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file5\">{{ 'Generic' | translate }} <span class=\"danger\"></span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file5')\" id=\"file5\" name=\"file5\">\r\n                      <div *ngIf=\"(g.file5.touched || isFormSubmited)  && g.file5.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file5.errors.required\">{{ 'Generic' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"downloadFile(driverRenewalForm.value.file5)\" *ngIf=\"driverRenewalForm.value.file5\">{{driverRenewalForm.value.file5.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>-->\r\n              <section *ngIf=\"showDocumentSection\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file1\">{{ 'EmiratesID' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file1')\" id=\"file1\" name=\"file1\">\r\n                      <div *ngIf=\"(g.file1.touched || isFormSubmited)  && g.file1.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file1.errors.required\">{{ 'EmiratesID' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"common.downloadFile(driverRenewalForm.value.file1)\" *ngIf=\"driverRenewalForm.value.file1\">{{driverRenewalForm.value.file1.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file2\">{{ 'Passport' | translate }} <span class=\"danger\"></span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file2')\" id=\"file2\" name=\"file2\">\r\n                      <div *ngIf=\"(g.file2.touched || isFormSubmited)  && g.file2.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file2.errors.required\">{{ 'Passport' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"common.downloadFile(driverRenewalForm.value.file2)\" *ngIf=\"driverRenewalForm.value.file2\">{{driverRenewalForm.value.file2.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file3\">{{ 'ResidenceVisa' | translate }} <span class=\"danger\"></span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file3')\" id=\"file3\" name=\"file3\">\r\n                      <div *ngIf=\"(g.file3.touched || isFormSubmited)  && g.file3.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file3.errors.required\">{{ 'ResidenceVisa' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"common.downloadFile(driverRenewalForm.value.file3)\" *ngIf=\"driverRenewalForm.value.file3\">{{driverRenewalForm.value.file3.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file4\">{{ 'DrivingLicense' | translate }} <span class=\"danger\"></span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file4')\" id=\"file4\" name=\"file4\">\r\n                      <div *ngIf=\"(g.file4.touched || isFormSubmited)  && g.file4.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file4.errors.required\">{{ 'DrivingLicense' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"common.downloadFile(driverRenewalForm.value.file4)\" *ngIf=\"driverRenewalForm.value.file4\">{{driverRenewalForm.value.file4.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file5\">{{ 'DriverPhoto' | translate }} <span class=\"danger\">*</span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file5')\" id=\"file5\" name=\"file5\">\r\n                      <div *ngIf=\"(g.file5.touched || isFormSubmited)  && g.file5.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file5.errors.required\">{{ 'DriverPhoto' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"downloadFile(driverRenewalForm.value.file5)\" *ngIf=\"driverRenewalForm.value.file5\">{{driverRenewalForm.value.file5.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"file6\">{{ 'Other' | translate }} <span class=\"danger\"></span> </label>\r\n                      <input type=\"file\" class=\"form-control\" accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, image/x-png,image/jpg,image/jpeg\" (change)=\"onChange($event , 'file6')\" id=\"file6\" name=\"file6\">\r\n                      <div *ngIf=\"(g.file6.touched || isFormSubmited)  && g.file6.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"g.file6.errors.required\">{{ 'Other' | translate }} {{ 'isRequired' | translate }}</div>\r\n                      </div>\r\n                      <label class=\"file_name\" (click)=\"downloadFile(driverRenewalForm.value.file6)\" *ngIf=\"driverRenewalForm.value.file6\">{{driverRenewalForm.value.file5.FileName}}</label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n              <section>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"button\">\r\n                      <button class=\"btn theme-blue-btn add_company_xs\" type=\"submit\">\r\n                        {{ 'Submit' | translate }}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </section>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit, ElementRef, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subject } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { DateTimeAdapter } from 'ng-pick-datetime';\r\n\r\n@Component({\r\n  selector: 'app-detaildriver',\r\n  templateUrl: './detaildriver.component.html',\r\n  styleUrls: ['./detaildriver.component.scss']\r\n})\r\nexport class DetaildriverComponent implements OnInit {\r\n\r\n  reactiveFormName: FormGroup;\r\n  driverRenewalForm: FormGroup;\r\n  driverViewRenewalForm: FormGroup;\r\n\r\n\r\n  dtOptions: DataTables.Settings = {\r\n    order: [[1, 'desc']]\r\n  };\r\n  dtTrigger = new Subject();\r\n\r\n  today = new Date();\r\n  driverInfo: any = {};\r\n  renewalattach: boolean = false;\r\n  viewDriverInfo: any = {};\r\n  updatedriveInfo: any = {};\r\n  driverRenewalsList: any = [];\r\n  emiratesList: any = [];\r\n  driverUpdateRequestList: any = [];\r\n  vehicleTypeList: any = [];\r\n  driverTypePermitListWithFilter: any = [];\r\n  viewDriverAttachmentsList: any = [];\r\n  driverTypeList: any = [];\r\n  driverTypePermitList: any = [];\r\n  showDriverRenewalBtn: boolean = false;\r\n  showDriverEditBtn: boolean = false;\r\n  showDriverRenewalsTable: boolean = true;\r\n  showDriverUpdateRequestTable: boolean = false;\r\n  showDocumentSection: boolean = true;\r\n  isFormSubmited: Boolean = false;\r\n  noDriverUpdateRequestRecordsFound: boolean = false;\r\n  noDriverRenewalRecordsFound: boolean = false;\r\n  FranchiseDriverType: any = \"Franchise Driver\"; FranchiseCompanyDriverType: any = \"Franchise\";\r\n  FranchiseDrivertypeid: any = \"8\"; FranchiseDriverpermittypeid: any = \"DP14\"; FranchiseDriverpermittypename: any = \"12 Months\";\r\n  isLateFeeApplied = false;\r\n  franshiseTotalFee: any;\r\n  isPermitypeSelected = false;\r\n  showAddDriverBtn: any;\r\n  minDateForEID: any;\r\n  minDateForDriverLic: any;\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private apiCall: ApiService,\r\n    public common: CommonService,\r\n    private translate: TranslateService,\r\n    private el: ElementRef,\r\n    private modalService: NgbModal,\r\n    private sanitizer: DomSanitizer,\r\n    dateTimeAdapter: DateTimeAdapter<any>\r\n  ) {\r\n    dateTimeAdapter.setLocale('en-IN');\r\n  }\r\n\r\n  driveInfo: any = {};\r\n  async ngOnInit() {\r\n    this.driveInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    this.initRectiveForm();\r\n    this.initMasterData();\r\n    this.dtOptions = {\r\n      order: [[0, 'desc']],\r\n      language: ({\r\n        \"zeroRecords\": await this.translate.get('NoDataAvailable').toPromise(),\r\n        \"search\": await this.translate.get('Search').toPromise(),\r\n        \"info\": await this.translate.get('Information').toPromise(),\r\n        \"infoFiltered\": await this.translate.get('infoFiltered').toPromise(),\r\n        \"infoEmpty\": await this.translate.get('infoEmpty').toPromise(),\r\n        \"lengthMenu\": await this.translate.get('lengthMenu').toPromise(),\r\n        \"paginate\": {\r\n          \"first\": await this.translate.get('First').toPromise(),\r\n          \"last\": await this.translate.get('Last').toPromise(),\r\n          \"next\": await this.translate.get('Next').toPromise(),\r\n          \"previous\": await this.translate.get('Previous').toPromise(),\r\n        }\r\n      }),\r\n    }\r\n\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n  }\r\n  initRectiveForm() {\r\n    this.reactiveFormName = this.formBuilder.group({\r\n      emiratesId: ['', [Validators.required]],\r\n      emiratesIdExpiryDate: ['', [Validators.required]],\r\n      firstName: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      email: ['', [Validators.required]],\r\n      mobileNo: ['', [Validators.required]],\r\n      gender: [null, [Validators.required]],\r\n      nationality: ['', [Validators.required]],\r\n      licenseNumber: ['', [Validators.required]],\r\n      emirate: ['', [Validators.required]],\r\n      issueDate: ['', [Validators.required]],\r\n      expiryDate: ['', [Validators.required]],\r\n      chooseType: ['', [Validators.required]],\r\n      typeOfPermit: ['', [Validators.required]],\r\n      permitIssueDate: ['', [Validators.required]],\r\n      permitExpiryDate: ['', [Validators.required]],\r\n      permitFees: ['', [Validators.required]]\r\n    });\r\n\r\n    this.driverRenewalForm = this.formBuilder.group({\r\n      ID: [null],\r\n      driverId: ['', [Validators.required]],\r\n      companyId: ['', [Validators.required]],\r\n      fees: ['', [Validators.required]],\r\n      driverTypeID: ['', [Validators.required]],\r\n      typeOfPermitID: ['', [Validators.required]],\r\n      permitStartDate: ['', [Validators.required]],\r\n      permitExpiryDate: ['', [Validators.required]],\r\n      emiratesIDExpiryDate: [null, [Validators.required]],\r\n      drivingLicenseExpiryDate: [null, [Validators.required]],\r\n      file1: [null, [Validators.required]],\r\n      file2: [null],\r\n      file3: [null],\r\n      file4: [null],\r\n      file5: [null, [Validators.required]],\r\n      file6: [null],\r\n      lateFee: [''],\r\n      totalAmount: [''],\r\n\r\n    });\r\n\r\n    this.driverViewRenewalForm = this.formBuilder.group({\r\n      driverId: ['', [Validators.required]],\r\n      companyId: ['', [Validators.required]],\r\n      fees: ['', [Validators.required]],\r\n      driverTypeID: ['', [Validators.required]],\r\n      typeOfPermitID: ['', [Validators.required]],\r\n      permitStartDate: ['', [Validators.required]],\r\n      permitExpiryDate: ['', [Validators.required]],\r\n      emiratesIDExpiryDate: ['', [Validators.required]],\r\n      drivingLicenseExpiryDate: ['', [Validators.required]]\r\n    });\r\n\r\n  }\r\n\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.reactiveFormName.controls; }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get g() { return this.driverRenewalForm.controls; }\r\n\r\n  // Used for call all APIs\r\n  async initMasterData() {\r\n    this.common.mesage = {};\r\n    this.showAddDriverBtn = this.common.getValueFromSessionStorage(\"showAddDriverBtn\");//Get showAddDriverBtn true/false after all DisableFineRestriction check in listDriver page, Abhijith 15-12-2023\r\n    this.getDriverDeatilInfo();\r\n    await this.getDriverRenewalsList();\r\n    await this.getEmiratesList();\r\n    await this.getDriverUpdateRequestList();\r\n    await this.getViewDriverAttachmentsList();\r\n    await this.getDriverTypeList();\r\n    await this.getDriverTypePermitList();\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    if (selectedDriverInfo.DriverType == 'Special Service') {\r\n      this.showDriverRenewalBtn = false;\r\n    } else {\r\n      this.showDriverRenewalBtn = true;\r\n    }\r\n    // this.common.isCompanyTypeFranchise = false;\r\n    if (this.common.isCompanyTypeFranchise) {\r\n      if (selectedDriverInfo.DriverTrainingStatus) {\r\n        this.showDriverRenewalBtn = true;\r\n      } else {\r\n        this.showDriverRenewalBtn = false;\r\n      }\r\n      if (selectedDriverInfo.PendingPayments) {\r\n        this.showDriverRenewalBtn = false;\r\n      }\r\n      this.showDriverEditBtn = false;\r\n    }\r\n    else {\r\n      if (this.showAddDriverBtn) {//If adddriver button is hided then hide renewal button also, just added comment, Abhijith 08-12-2023\r\n        this.showDriverRenewalBtn = false;\r\n        this.showDriverEditBtn = false;\r\n      }\r\n    }\r\n    //Driver renewal button should be enabled only one month before permit expiry date, This should applicable for franchise & nornmal Company both\r\n    //changes by client, Abhijith 03-08-2023    \r\n    if (selectedDriverInfo.PermitExpiryDate != null && selectedDriverInfo.PermitExpiryDate != '') {\r\n      var newdate = selectedDriverInfo.PermitExpiryDate.split(\"-\").reverse().join(\"-\");\r\n      let startdate = new Date(newdate);\r\n      let today = new Date();\r\n      startdate.setDate(startdate.getDate() - 30);\r\n\r\n      /*For Franchise company DisableFineRestriction is not applicable, Abhijith-04-01-2024  */\r\n      if (this.common.isCompanyTypeFranchise && selectedDriverInfo.DriverTrainingStatus) {\r\n        if (today >= startdate && !selectedDriverInfo.PendingPayments &&\r\n          !selectedDriverInfo.PendingRenewalsAvailable) {//For franchise ADD Driver btn is always disabled, So DisableFineRestriction not applicable to franhise company drivers.\r\n          this.showDriverRenewalBtn = true;\r\n        }\r\n        else {\r\n          this.showDriverRenewalBtn = false;\r\n        }\r\n      }\r\n      /*For other company DisableFineRestriction is applicable based on showAddDriverBtn validation, Abhijith-04-01-2024*/\r\n      else {\r\n        if (today >= startdate && !selectedDriverInfo.PendingPayments &&\r\n          !selectedDriverInfo.PendingRenewalsAvailable && !this.showAddDriverBtn) {//If isFine is availbale & addDriverBtn is enabled(based on DisableFineRestrictionAPI) then show driver renewal button, Abhijith 08-12-2023\r\n          this.showDriverRenewalBtn = true;\r\n        }\r\n        //01-08-2023 Driver renewal button should be enabled only one month before permit expiry date, Abhijith \r\n        else {\r\n          this.showDriverRenewalBtn = false;\r\n          //end 01-08-2023\r\n        }\r\n      }\r\n    }\r\n    if (!selectedDriverInfo.PendingPayments &&\r\n      !selectedDriverInfo.PendingRenewalsAvailable) {\r\n      this.showDriverEditBtn = true;\r\n    }\r\n\r\n  }\r\n\r\n  //open driver renewal popup form\r\n  async openDriverRenewalModel(content) {\r\n\r\n    let today = new Date();\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let expDate = this.common.strintoUTCDate(selectedDriverInfo.PermitExpiryDate);\r\n    if (today <= expDate) {\r\n      expDate.setDate(expDate.getDate() + 1);\r\n      today = expDate;\r\n    }\r\n\r\n    /**Min date changes for EID expiry date and dcrive license exiry date, Abhijith 19-01-2024 */\r\n    this.minDateForEID = selectedDriverInfo.EmiratesIDExpiryDate;\r\n    this.minDateForDriverLic = selectedDriverInfo.DrivingLicenseExpiryDate;\r\n    /**End, 19-01-2024  */\r\n\r\n\r\n    //If driver doesn't belongs to franchise then if condition will work or else condition will work\r\n    if (this.common.isCompanyTypeFranchise == false) {\r\n      let month = (today.getMonth() + 1);\r\n      let day = today.getDate();\r\n      let permitStartDate = (day > 9 ? day : ('0' + day)) + '-' + (month > 9 ? month : ('0' + month)) + '-' + today.getFullYear();\r\n      this.driverRenewalForm.controls['permitStartDate'].setValue(permitStartDate);\r\n    }\r\n    else {\r\n      //this.displayPermitStartDateBeforeSelectingDropDown();\r\n      this.franchiseDriverRenewal();\r\n    }\r\n    const indexArray = this.driverTypeList.filter(value => value.NameEN == selectedDriverInfo.DriverType);\r\n    if (indexArray.length > 0) {\r\n      this.driverRenewalForm.controls['driverTypeID'].setValue(indexArray[0].ID);\r\n      this.getfilterDriverTypePermitList();\r\n    }\r\n    if (selectedDriverInfo.DriverType == this.FranchiseDriverType && selectedDriverInfo.CompanyDriverType == this.FranchiseCompanyDriverType) {//added hardcoded values based on venkat comments\r\n      indexArray[0].ID = this.FranchiseDrivertypeid;\r\n      this.driverRenewalForm.controls['driverTypeID'].setValue(indexArray[0].ID); this.getfilterDriverTypePermitList();\r\n    }\r\n    this.driverRenewalForm.controls['driverId'].setValue(selectedDriverInfo.DriverID);\r\n    this.driverRenewalForm.controls['companyId'].setValue(selectedCompanyInfo.CompanyID);\r\n    this.driverRenewalForm.controls['emiratesIDExpiryDate'].setValue(this.common.stringDateToCalendarDateFormat(selectedDriverInfo.EmiratesIDExpiryDate));\r\n    this.driverRenewalForm.controls['drivingLicenseExpiryDate'].setValue(this.common.stringDateToCalendarDateFormat(selectedDriverInfo.DrivingLicenseExpiryDate));\r\n    this.renewalattach = true;\r\n    await this.getViewDriverAttachmentsList();\r\n    this.modalService.open(content, {\r\n      ariaLabelledBy: 'modal-basic-title', size: 'xl', centered: true,\r\n      backdropClass: 'custom_backdrop_cls', backdrop: true, windowClass: 'custom_window_cls'\r\n    }).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n\r\n  //close driver renewal popup form\r\n  closeModel() {\r\n    this.driverRenewalForm.reset();\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n\r\n  //open view driver renewal popup from\r\n  openDriverViewRenewalModel(id, content) {\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let jsonData: any = {};\r\n    jsonData.ID = id;\r\n    jsonData.DriverID = selectedDriverInfo.DriverID;\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    this.apiCall.postAPICallWithToken('api/DriverManager/getViewDriverRenewal', jsonData).then(result => {\r\n      this.viewDriverInfo = result;\r\n      this.assignDataToDriverViewRenewalForm(this.viewDriverInfo);\r\n      this.modalService.open(content, {\r\n        ariaLabelledBy: 'modal-basic-title', size: 'xl', centered: true,\r\n        backdropClass: 'custom_backdrop_cls', backdrop: true, windowClass: 'custom_window_cls'\r\n      }).result.then((result) => {\r\n      }, (reason) => {\r\n      });\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n\r\n  //close view driver renewal popup from\r\n  closeViewModel() {\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  // Used for open renewal form\r\n  async openDriverUpdateRenewalModel(driver, content) {\r\n    this.isLateFeeApplied = true;\r\n    this.driverRenewalForm.reset();\r\n    await this.assignDataToDriverUpdateRenewalForm(driver);\r\n    await this.getViewDriverRenewalAttachments();\r\n    this.modalService.open(content, {\r\n      ariaLabelledBy: 'modal-basic-title', size: 'xl', centered: true,\r\n      backdropClass: 'custom_backdrop_cls', backdrop: true, windowClass: 'custom_window_cls'\r\n    }).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  // Used for get driver details\r\n  getDriverDeatilInfo() {\r\n    let outerJsonData: any = {};\r\n    let jsonData: any = {};\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let companyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.CompanyID = companyInfo.CompanyID;\r\n    jsonData.DriverID = selectedDriverInfo.DriverID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    this.apiCall.postAPICallWithToken('api/DriverManager/getViewDriverDetails', jsonData).then(result => {\r\n      this.driverInfo = result;\r\n      this.assignDataToform(this.driverInfo);\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n\r\n  //assigning data to driver details form\r\n  assignDataToform(driverInfo) {\r\n    debugger;\r\n    this.reactiveFormName.controls['emiratesId'].setValue(driverInfo.EmiratesID);\r\n    this.reactiveFormName.controls['emiratesIdExpiryDate'].setValue(driverInfo.EmiratesIDExpiryDate);\r\n    this.reactiveFormName.controls['firstName'].setValue(driverInfo.FirstName);\r\n    this.reactiveFormName.controls['lastName'].setValue(driverInfo.LastName);\r\n    this.reactiveFormName.controls['email'].setValue(driverInfo.Email);\r\n    this.reactiveFormName.controls['mobileNo'].setValue(driverInfo.MobilePhone);\r\n    this.reactiveFormName.controls['gender'].setValue(driverInfo.Gender);\r\n    this.reactiveFormName.controls['nationality'].setValue(driverInfo.Nationality);\r\n    this.reactiveFormName.controls['licenseNumber'].setValue(driverInfo.DrivingLicenseNumber);\r\n    this.reactiveFormName.controls['emirate'].setValue(driverInfo.LicenseEmirate);\r\n    this.reactiveFormName.controls['issueDate'].setValue(driverInfo.DrivingLicenseIssueDate);\r\n    this.reactiveFormName.controls['expiryDate'].setValue(driverInfo.DrivingLicenseExpiryDate);\r\n    this.reactiveFormName.controls['chooseType'].setValue(driverInfo.DriverType);\r\n    if (driverInfo.DriverType == this.FranchiseDriverType && driverInfo.CompanyDriverType == this.FranchiseCompanyDriverType) {//added hardcoded values based on venkat comments\r\n      driverInfo.TypeOfPermit = this.FranchiseDriverpermittypename;\r\n    } this.reactiveFormName.controls['typeOfPermit'].setValue(driverInfo.TypeOfPermit);\r\n    this.reactiveFormName.controls['permitIssueDate'].setValue(driverInfo.PermitIssueDate);\r\n    this.reactiveFormName.controls['permitExpiryDate'].setValue(driverInfo.PermitExpiryDate);\r\n    this.reactiveFormName.controls['permitFees'].setValue(driverInfo.Fees);\r\n  }\r\n\r\n\r\n  //assigning data to view renewal form\r\n  assignDataToDriverViewRenewalForm(viewDriverInfo) {\r\n    debugger;\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    this.driverViewRenewalForm.controls['driverId'].setValue(viewDriverInfo.DriverID);\r\n    this.driverViewRenewalForm.controls['companyId'].setValue(selectedCompanyInfo.CompanyID);\r\n    this.driverViewRenewalForm.controls['fees'].setValue(viewDriverInfo.Fees);\r\n    this.driverViewRenewalForm.controls['driverTypeID'].setValue(viewDriverInfo.DriverType);\r\n    if (viewDriverInfo.DriverType == this.FranchiseDriverType && viewDriverInfo.CompanyDriverType == this.FranchiseCompanyDriverType) {//added hardcoded values based on venkat comments\r\n      this.driverViewRenewalForm.controls['typeOfPermitID'].setValue(this.FranchiseDriverpermittypeid);\r\n    } else { this.driverViewRenewalForm.controls['typeOfPermitID'].setValue(viewDriverInfo.TypeOfPermit); }\r\n    this.driverViewRenewalForm.controls['permitStartDate'].setValue(viewDriverInfo.PermitStartDate);\r\n    this.driverViewRenewalForm.controls['permitExpiryDate'].setValue(viewDriverInfo.PermitExpiryDate);\r\n    this.driverViewRenewalForm.controls['emiratesIDExpiryDate'].setValue(viewDriverInfo.EmiratesIDExpiryDate);\r\n    this.driverViewRenewalForm.controls['drivingLicenseExpiryDate'].setValue(viewDriverInfo.DrivingLicenseExpiryDate);\r\n  }\r\n\r\n\r\n  //assigning data to view renewal form\r\n  async assignDataToDriverUpdateRenewalForm(viewDriverInfo) {\r\n    debugger;\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    this.driverRenewalForm.controls['ID'].setValue(viewDriverInfo.ID);\r\n    this.driverRenewalForm.controls['driverId'].setValue(viewDriverInfo.DriverID);\r\n    this.driverRenewalForm.controls['companyId'].setValue(selectedCompanyInfo.CompanyID);\r\n    this.driverRenewalForm.controls['fees'].setValue(viewDriverInfo.Fees);\r\n    this.driverRenewalForm.controls['permitStartDate'].setValue(viewDriverInfo.PermitStartDate);\r\n    this.driverRenewalForm.controls['permitExpiryDate'].setValue(viewDriverInfo.PermitExpiryDate);\r\n    this.driverRenewalForm.controls['emiratesIDExpiryDate'].setValue(this.common.stringDateToCalendarDateFormat(viewDriverInfo.EmiratesIDExpiryDate));\r\n    this.driverRenewalForm.controls['drivingLicenseExpiryDate'].setValue(this.common.stringDateToCalendarDateFormat(viewDriverInfo.DrivingLicenseExpiryDate));\r\n\r\n    //Added LateFee & TotalAmount while editing Driver renewal if status is \"Need more information\", Abhijith 11-08-2023\r\n    this.driverRenewalForm.controls['lateFee'].setValue(viewDriverInfo.LateFees);\r\n    this.driverRenewalForm.controls['totalAmount'].setValue(viewDriverInfo.TotalAmount)\r\n\r\n    const indexArray = this.driverTypeList.filter(value => value.NameEN == viewDriverInfo.DriverType);\r\n    if (indexArray.length > 0) {\r\n      this.driverRenewalForm.controls['driverTypeID'].setValue(indexArray[0].ID);\r\n      this.getfilterDriverTypePermitList();\r\n    }\r\n    if (viewDriverInfo.DriverType == this.FranchiseDriverType && viewDriverInfo.CompanyDriverType == this.FranchiseCompanyDriverType) {//added hardcoded values based on venkat comments\r\n      indexArray[0].ID = this.FranchiseDrivertypeid;\r\n      viewDriverInfo.TypeOfPermit = this.FranchiseDriverpermittypename;\r\n      this.driverRenewalForm.controls['driverTypeID'].setValue(indexArray[0].ID); this.getfilterDriverTypePermitList();\r\n    }\r\n    const permitTypeArray = this.driverTypePermitListWithFilter.filter(value => value.PermitName == viewDriverInfo.TypeOfPermit);\r\n    if (permitTypeArray.length > 0) {\r\n      this.driverRenewalForm.controls['typeOfPermitID'].setValue(permitTypeArray[0].ID);\r\n    }\r\n  }\r\n\r\n  // Used for get driver renewal list\r\n  async getDriverRenewalsList() {\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let companyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let jsonData: any = {};\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.CompanyID = companyInfo.CompanyID;\r\n    jsonData.DriverID = selectedDriverInfo.DriverID;\r\n    this.showDriverRenewalsTable = false;\r\n    this.noDriverRenewalRecordsFound = false;\r\n    await this.apiCall.postAPICallWithToken('api/DriverManager/getListDriverRenewals', jsonData).then(result => {\r\n      this.driverRenewalsList = result;\r\n      let indexArray = result.filter(value => value.Status == 'Under Approval');\r\n      let needArray = result.filter(value => value.Status == 'Need More Information');\r\n      if (indexArray.length > 0 || needArray.length > 0) {\r\n        if (!this.showAddDriverBtn) {\r\n          this.showDriverRenewalBtn = false;\r\n          this.showDriverEditBtn = false;\r\n        }\r\n      }\r\n      if (this.common.isCompanyTypeFranchise) {\r\n        this.showDriverRenewalBtn = false;\r\n        this.showDriverEditBtn = false;\r\n      }\r\n      this.showDriverRenewalsTable = true;\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n    if (this.driverRenewalsList.length == 0) {\r\n      this.noDriverRenewalRecordsFound = true;\r\n    }\r\n  }\r\n\r\n\r\n  //driver renewal form submission\r\n  driverRenewalSubmitForm() {\r\n    this.isFormSubmited = true;\r\n    if (this.driverRenewalForm.invalid) {\r\n      return\r\n    }\r\n    let outerJsonData: any = {};\r\n    let jsonData: any = {};\r\n    let driverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    jsonData.DriverID = driverInfo.DriverID;\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n    jsonData.Fees = this.driverRenewalForm.value.fees + '';\r\n    jsonData.DriverTypeID = this.driverRenewalForm.value.driverTypeID;\r\n    jsonData.TypeOfPermitID = this.driverRenewalForm.value.typeOfPermitID;\r\n    jsonData.PermitStartDate = this.driverRenewalForm.value.permitStartDate.split(\"-\").reverse().join(\"-\");\r\n    jsonData.PermitExpiryDate = this.driverRenewalForm.value.permitExpiryDate.split(\"-\").reverse().join(\"-\");\r\n    //jsonData.EmiratesIDExpiryDate = this.common.dateFormatWithDash(this.driverRenewalForm.value.emiratesIDExpiryDate);\r\n    //jsonData.DrivingLicenseExpiryDate = this.common.dateFormatWithDash(this.driverRenewalForm.value.drivingLicenseExpiryDate);\r\n    jsonData.EmiratesIDExpiryDate = this.common.convertDateFormat(this.driverRenewalForm.value.emiratesIDExpiryDate);\r\n    jsonData.DrivingLicenseExpiryDate = this.common.convertDateFormat(this.driverRenewalForm.value.drivingLicenseExpiryDate);\r\n\r\n    //Sending late fee and total Amnt only if company type is not franchise - Abhijith 05-05-2023\r\n    if (this.common.showLateFee == true) {\r\n      jsonData.LateFees = this.driverRenewalForm.value.lateFee.toString();\r\n      jsonData.TotalAmount = this.driverRenewalForm.value.totalAmount.toString();\r\n    } else {\r\n      jsonData.LateFees = '';\r\n      jsonData.totalAmount = '';\r\n    }\r\n    //End\r\n    let ApiEndPoint: string = '';\r\n\r\n   ApiEndPoint = \"api/DriverManager/DriverRenewalCreation\";\r\n    if (this.driverRenewalForm.value.ID != null) {\r\n      jsonData.ID = this.driverRenewalForm.value.ID;\r\n     ApiEndPoint = \"api/DriverManager/DriverRenewalUpdate\";\r\n    }\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    this.apiCall.postAPICallWithToken(ApiEndPoint, jsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        if (result.ID) {\r\n          this.onSubmitOfAttchmentForm(result.ID)\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  // Used for get attachment\r\n  async getViewDriverAttachmentsList(loader: boolean = true) {\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let companyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let outerJsonData: any = {};\r\n    let jsonData: any = {};\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.CompanyID = companyInfo.CompanyID;\r\n    jsonData.DriverID = selectedDriverInfo.DriverID;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    await this.apiCall.postAPICallWithToken('api/DriverManager/ViewDriverAttachments', outerJsonData, loader).then(result => {\r\n      if (this.renewalattach) {\r\n        this.assignAttachmentToFrom(result);\r\n      }\r\n      let attachmentArray: any = [];\r\n      for (let data of result) {\r\n        data.attachment = 'data:image/jpg;base64,' + data.Data;\r\n        data.attachment = this.sanitizer.bypassSecurityTrustResourceUrl(data.attachment);\r\n        attachmentArray.push(data);\r\n      }\r\n      this.viewDriverAttachmentsList = attachmentArray;\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  // Used for get driver update request list\r\n  async getDriverUpdateRequestList(loader: boolean = true) {\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let companyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let outerJsonData: any = {};\r\n    let jsonData: any = {};\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.CompanyID = companyInfo.CompanyID;\r\n    jsonData.DriverID = selectedDriverInfo.DriverID;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    this.showDriverUpdateRequestTable = false;\r\n    this.noDriverUpdateRequestRecordsFound = false;\r\n    await this.apiCall.postAPICallWithToken('api/DriverManager/ListDriverUpdateRequests', outerJsonData, loader).then(result => {\r\n      this.driverUpdateRequestList = result;\r\n      this.showDriverUpdateRequestTable = true;\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n    if (this.driverUpdateRequestList.length == 0) {\r\n      this.noDriverUpdateRequestRecordsFound = true;\r\n    }\r\n  }\r\n\r\n  // Used for navigate to drive update request create screen\r\n  driverUpdateRequestCreation() {\r\n    let driverInfom = this.common.getValueFromSessionStorage('driverInfo');\r\n    driverInfom.requestFrom = 'driverUpdateReqCreation';\r\n    this.common.setValueToSessionStorage('updateDriverInfo', driverInfom);\r\n    this.router.navigateByUrl('/driver/adddriver');\r\n  }\r\n\r\n\r\n  // Used for get Emirates List\r\n  async getEmiratesList() {\r\n    let getEmiratesList = this.common.getValueFromSessionStorage('getEmiratesList');\r\n    if (getEmiratesList != null) {\r\n      this.emiratesList = getEmiratesList;\r\n      return\r\n    }\r\n    await this.apiCall.postEnquiryAPICallWithToken('api/EnquiryManager/getEmiratesList', {}).then(result => {\r\n      this.emiratesList = result;\r\n      this.common.setValueToSessionStorage('getEmiratesList', result);\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n\r\n  // This function is used for get Driver Type List\r\n  async getDriverTypeList() {\r\n    let getDriverTypeList = this.common.getValueFromSessionStorage('getDriverTypeList');\r\n    if (getDriverTypeList != null) {\r\n      this.driverTypeList = getDriverTypeList;\r\n      return\r\n    }\r\n    await this.apiCall.postAPICallWithToken('api/DriverManager/getDriverTypeList', {}).then(result => {\r\n      this.driverTypeList = result;\r\n      this.common.setValueToSessionStorage('getDriverTypeList', result);\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n\r\n  // Used for get Driver Type Permit List\r\n  async getDriverTypePermitList() {\r\n    debugger;\r\n    let getDriverTypePermitList = this.common.getValueFromSessionStorage('getDriverTypePermitList');\r\n    if (getDriverTypePermitList != null) {\r\n      this.driverTypePermitList = getDriverTypePermitList;\r\n      return\r\n    }\r\n    await this.apiCall.postAPICallWithToken('api/DriverManager/getDriverTypePermitList', {}).then(result => {\r\n      this.driverTypePermitList = result;\r\n      this.common.setValueToSessionStorage('getDriverTypePermitList', result);\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  // For filter Vehicle Type Permit List based on vehicle type\r\n  async getfilterDriverTypePermitList() {\r\n    debugger;\r\n    this.driverRenewalForm.controls['typeOfPermitID'].setValue(\"\");\r\n    const indexArray = this.driverTypeList.filter(value => value.ID == this.driverRenewalForm.value.driverTypeID);\r\n    var searchValue = '';\r\n    if (indexArray.length > 0) {\r\n      searchValue = indexArray[0].NameEN;\r\n    }\r\n    if (this.driverRenewalForm.value.driverTypeID == this.FranchiseDrivertypeid && this.driverRenewalForm.value.CompanyDriverType == this.FranchiseCompanyDriverType) {//added hardcoded values based on venkat comments on 10-1-2023\r\n      searchValue = this.FranchiseDriverType;\r\n    }\r\n    this.driverTypePermitListWithFilter = this.driverTypePermitList.filter(value => value.DriverType == searchValue);\r\n  }\r\n  onchangeOfPermitType() {\r\n    this.isPermitypeSelected = true;\r\n    const indexArray = this.driverTypePermitList.filter(value => value.ID == this.driverRenewalForm.value.typeOfPermitID);\r\n    if (indexArray.length > 0) {\r\n      let index = indexArray[0]\r\n      this.driverRenewalForm.controls['fees'].setValue(index.FeesForRenew + '');\r\n      let array = index.PermitName.split(' ');\r\n      if (!isNaN(array[0])) {\r\n        if (this.common.isCompanyTypeFranchise == false) {\r\n\r\n\r\n          let permitStartDate = this.common.strintoUTCDate(this.g.permitStartDate.value);\r\n          let fee = parseInt(array[0]);\r\n          var newDate = new Date(permitStartDate.setMonth(permitStartDate.getMonth() + fee));\r\n          let month = (newDate.getMonth() + 1);\r\n          let day = newDate.getDate();\r\n          let pemitIssueDate = (day > 9 ? day : ('0' + day)) + '-' + (month > 9 ? month : ('0' + month)) + '-' + newDate.getFullYear();\r\n          this.driverRenewalForm.controls['permitExpiryDate'].setValue(pemitIssueDate);\r\n\r\n          // Driver Late fee logic by Abhijith 19-04-2023 - start                  \r\n          var expiredDate = new Date(this.driverInfo.PermitExpiryDate.split(\"-\").reverse().join(\"-\"));\r\n          var todaysDate = new Date(this.driverRenewalForm.value.permitStartDate.split(\"-\").reverse().join(\"-\"));\r\n          var diffInTime = todaysDate.getTime() - expiredDate.getTime();\r\n\r\n          // To calculate the no. of days between two dates and late fee applicable only after 30days from Exp date.\r\n          let diffInDays = diffInTime / (1000 * 3600 * 24);\r\n          if (diffInDays > 30) {\r\n\r\n            // New logic 20AED / Per Month Abhijith       \r\n            let date = expiredDate;\r\n            date.setDate(date.getDate() + 30);\r\n\r\n            // calculate num of months and year after 30days \r\n            let monthDiff = todaysDate.getMonth() - date.getMonth();\r\n            let yearDiff = todaysDate.getFullYear() - date.getFullYear();\r\n\r\n            let numberOfMonth = monthDiff + yearDiff * 12;\r\n            let amount = numberOfMonth * index.LateFees;\r\n            this.isLateFeeApplied = true;\r\n            this.driverRenewalForm.controls['lateFee'].setValue(Number(amount));\r\n            this.driverRenewalForm.controls['totalAmount'].setValue(Number(this.driverRenewalForm.value.fees) + Number(this.driverRenewalForm.value.lateFee))\r\n            // this.driverRenewalForm.controls['fees'].setValue(this.driverRenewalForm.value.totalAmount);\r\n          } else {\r\n            this.driverRenewalForm.controls['fees'].setValue(index.FeesForRenew + '');\r\n          }\r\n          // End\r\n        }\r\n        else {\r\n\r\n          //Call Frnchise driver renwal method, Abhijith 17-07-2023\r\n          this.franchiseDriverRenewal();\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //Franchise driver renewal changes moved to production, Abhijith 03-08-2023\r\n  //Franchise driver renewal based on over all years calculation from expiry date, Abhijith 20-07-2023\r\n  franchiseDriverRenewal() {\r\n    var expiredDate = new Date(this.driverInfo.PermitExpiryDate.split(\"-\").reverse().join(\"-\"));\r\n    let currentDate = new Date();\r\n    let getDateFromExpiredDate = expiredDate.getDate();\r\n    let getMonthFromExpiredDate = (expiredDate.getMonth() + 1);\r\n\r\n    // calculate number of years between permission expiry date and current date    \r\n    let yearDiff = currentDate.getFullYear() - expiredDate.getFullYear();\r\n    let getAmountfromForm = this.driverRenewalForm.value.fees;\r\n    let calculateAmountOne = Number(getAmountfromForm) * yearDiff;\r\n\r\n    //If expiry date year is equal to todays date year then if condition will work\r\n    //If expiry date year is less then current date year then else condition will work\r\n    //So here 2 functionalities will work for franchise driver renewal\r\n    if (expiredDate.getFullYear() == currentDate.getFullYear()) {\r\n      let assignSameExpiryDateToPermitStartDate = (getDateFromExpiredDate > 9 ? getDateFromExpiredDate : ('0' + getDateFromExpiredDate)) + '-' + (getMonthFromExpiredDate > 9 ? getMonthFromExpiredDate : ('0' + getMonthFromExpiredDate)) + '-' + expiredDate.getFullYear();\r\n      this.driverRenewalForm.controls['permitStartDate'].setValue(assignSameExpiryDateToPermitStartDate);\r\n      if (this.isPermitypeSelected == true) {\r\n\r\n        let addOneYearToExpiryDate = (expiredDate.getFullYear() + 1)\r\n        let newDateAfterAddingYearToExpiredDate = (getDateFromExpiredDate > 9 ? getDateFromExpiredDate : ('0' + getDateFromExpiredDate)) + '-' + (getMonthFromExpiredDate > 9 ? getMonthFromExpiredDate : ('0' + getMonthFromExpiredDate)) + '-' + addOneYearToExpiryDate;\r\n        this.driverRenewalForm.controls['permitExpiryDate'].setValue(newDateAfterAddingYearToExpiredDate);\r\n\r\n        //Make amount double to existing fee for franchise driver renewel only.\r\n        this.franshiseTotalFee = getAmountfromForm * 2;\r\n        this.driverRenewalForm.controls['fees'].setValue(this.franshiseTotalFee);\r\n      }\r\n\r\n    } else {\r\n      //Based on num of years difference permission expiry date and current date calculate new date\r\n      var yearForPermitStartDateOne = (expiredDate.getFullYear() + yearDiff);\r\n      var yearsAddedToExpiryDate = (getDateFromExpiredDate > 9 ? getDateFromExpiredDate : ('0' + getDateFromExpiredDate)) + '-' + (getMonthFromExpiredDate > 9 ? getMonthFromExpiredDate : ('0' + getMonthFromExpiredDate)) + '-' + yearForPermitStartDateOne;\r\n\r\n      //If dropdown selected then if condition will work, show expiry date and fees otherwise only show start date\r\n      if (this.isPermitypeSelected == true) {\r\n        var getDateFromYearsAddedToExpiryDate;\r\n\r\n        //Check for month\r\n        let month = (currentDate.getMonth() + 1);\r\n        if (getMonthFromExpiredDate <= month) {\r\n\r\n          //check fot day\r\n          if (getMonthFromExpiredDate < (currentDate.getMonth() + 1) || getDateFromExpiredDate <= currentDate.getDate()) {\r\n            getDateFromYearsAddedToExpiryDate = new Date(yearsAddedToExpiryDate.split(\"-\").reverse().join(\"-\"));\r\n            let addOneMoreYear = (getDateFromYearsAddedToExpiryDate.getFullYear() + 1);\r\n            let getNewDateAdded = (getDateFromYearsAddedToExpiryDate.getDate() > 9 ? getDateFromYearsAddedToExpiryDate.getDate() : ('0' + getDateFromYearsAddedToExpiryDate.getDate())) + '-' + ((getDateFromYearsAddedToExpiryDate.getMonth() + 1) > 9 ? (getDateFromYearsAddedToExpiryDate.getMonth() + 1) : ('0' + (getDateFromYearsAddedToExpiryDate.getMonth() + 1))) + '-' + addOneMoreYear;\r\n            this.driverRenewalForm.controls['permitExpiryDate'].setValue(getNewDateAdded);\r\n            calculateAmountOne = calculateAmountOne + Number(getAmountfromForm);\r\n\r\n            //Minus one year so that will be our permit start date\r\n            var getDateFromNewDate = new Date(getNewDateAdded.split(\"-\").reverse().join(\"-\"));\r\n          }\r\n          else {\r\n            this.driverRenewalForm.controls['permitExpiryDate'].setValue(yearsAddedToExpiryDate);\r\n            getDateFromNewDate = new Date(yearsAddedToExpiryDate.split(\"-\").reverse().join(\"-\"));\r\n          }\r\n        }\r\n        else {\r\n          this.driverRenewalForm.controls['permitExpiryDate'].setValue(yearsAddedToExpiryDate);\r\n          getDateFromNewDate = new Date(yearsAddedToExpiryDate.split(\"-\").reverse().join(\"-\"));\r\n        }\r\n        //Make amount double to existing fee for franchise driver renewel only.\r\n        this.franshiseTotalFee = calculateAmountOne * 2;\r\n        this.driverRenewalForm.controls['fees'].setValue(this.franshiseTotalFee);\r\n      }\r\n      else {\r\n        //Minus one year so that will be our permit start date\r\n        var getDateFromNewDate = new Date(yearsAddedToExpiryDate.split(\"-\").reverse().join(\"-\"));\r\n      }\r\n      //This will be for start date\r\n      let dayForPermitStartDateTwo = getDateFromNewDate.getDate();\r\n      let monthForPermitStartDateTwo = (getDateFromNewDate.getMonth() + 1);\r\n      let yearForPermitStartDateTwo = (getDateFromNewDate.getFullYear() - 1);\r\n      let minusOneyear = (dayForPermitStartDateTwo > 9 ? dayForPermitStartDateTwo : ('0' + dayForPermitStartDateTwo)) + '-' + (monthForPermitStartDateTwo > 9 ? monthForPermitStartDateTwo : ('0' + monthForPermitStartDateTwo)) + '-' + yearForPermitStartDateTwo;\r\n      this.driverRenewalForm.controls['permitStartDate'].setValue(minusOneyear);\r\n    }\r\n  }\r\n\r\n  // Used for download file\r\n  downloadFile(json) {\r\n    this.common.downloadFile(json);\r\n  }\r\n\r\n  // For Navigate to Edit Driver Screen\r\n  navigateToUpdatePage() {\r\n    this.updatedriveInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    this.updatedriveInfo.requestFrom = 'editUpdate';\r\n    this.common.setValueToSessionStorage('updateDriverInfo', this.updatedriveInfo);\r\n    this.router.navigateByUrl('/driver/adddriver');\r\n  }\r\n\r\n  // On file Select check file type and file size\r\n  onChange(event, keyIndex) {\r\n    this.common.mesage = {};\r\n    if (event.target.files.length > 0) {\r\n      let file = event.target.files[0];\r\n      let fileExtanction = file.name.substring(file.name.lastIndexOf(\".\") + 1);\r\n      if (!this.common.allowedFileType.includes(fileExtanction.toLowerCase())) {\r\n        this.common.showSussessFailureMessage(2, 'You can upload only ' + this.common.allowedFileType + 'File Type. ');\r\n        return\r\n      }\r\n      let allowedfileSize = this.common.allowedFileSizeInMB * 1024 * 1024;\r\n      if (allowedfileSize < file.size) {\r\n        this.common.showSussessFailureMessage(2, 'You can upload Maximum ' + this.common.allowedFileSizeInMB + ' MB File.');\r\n        return\r\n      }\r\n      let json: any = {}\r\n      if (this.driverRenewalForm.value[keyIndex]) {\r\n        json = this.driverRenewalForm.value[keyIndex];\r\n      }\r\n      json.FileName = file.name;\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        json.Data = reader.result;\r\n        this.driverRenewalForm.controls[keyIndex].setValue(json);\r\n      };\r\n    }\r\n  }\r\n\r\n  //readonly file1SubjectName: string = 'Business Name License';\r\n  //readonly file2SubjectName: string = 'Passport';\r\n  //readonly file3SubjectName: string = 'Other';\r\n  //readonly file4SubjectName: string = 'Emirates Id';\r\n  //readonly file5SubjectName: string = 'Generic';\r\n\r\n  readonly file1SubjectName: string = 'Emirates Id';\r\n  readonly file2SubjectName: string = 'Passport';\r\n  readonly file3SubjectName: string = 'Residence Visa';\r\n  readonly file4SubjectName: string = 'Driving License';\r\n  readonly file5SubjectName: string = 'Driver Photo';\r\n  readonly file6SubjectName: string = 'Other';\r\n  // Used for upload attchment of attchment found\r\n  async onSubmitOfAttchmentForm(ID) {\r\n    if (ID == null || ID == '') {\r\n      return;\r\n    }\r\n    let file = this.driverRenewalForm.value.file1;\r\n    if (file != null) {\r\n      await this.uplaodAttachmentToServerOneByOne(ID, file, false, this.file1SubjectName);\r\n    }\r\n    file = this.driverRenewalForm.value.file2;\r\n    if (file != null) {\r\n      await this.uplaodAttachmentToServerOneByOne(ID, file, false, this.file2SubjectName);\r\n    }\r\n    file = this.driverRenewalForm.value.file3;\r\n    if (file != null) {\r\n      await this.uplaodAttachmentToServerOneByOne(ID, file, false, this.file3SubjectName);\r\n    }\r\n    file = this.driverRenewalForm.value.file4;\r\n    if (file != null) {\r\n      await this.uplaodAttachmentToServerOneByOne(ID, file, false, this.file4SubjectName);\r\n    }\r\n    file = this.driverRenewalForm.value.file5;\r\n    if (file != null) {\r\n      await this.uplaodAttachmentToServerOneByOne(ID, file, false, this.file5SubjectName);\r\n    }\r\n    file = this.driverRenewalForm.value.file6;\r\n    if (file != null) {\r\n      await this.uplaodAttachmentToServerOneByOne(ID, file, false, this.file6SubjectName);\r\n    }\r\n    this.apiCall.spinner.hide();\r\n    this.modalService.dismissAll();\r\n    this.getDriverRenewalsList();\r\n    if (this.driverRenewalForm.value.ID != null) {\r\n      this.common.showSussessFailureMessage(1, 'Driver Renewal Updated Successfully and submitted for approval');\r\n    } else {\r\n      this.common.showSussessFailureMessage(1, 'Driver Renewal Created Successfully and submitted for approval');\r\n    }\r\n    this.driverRenewalForm.reset();\r\n    this.showDocumentSection = false\r\n    setTimeout(() => {\r\n      this.showDocumentSection = true;\r\n    }, 300);\r\n  }\r\n\r\n  // Used for call attachment upload API call\r\n  async uplaodAttachmentToServerOneByOne(ID, file, loader: boolean, Subject = 'Attachment') {\r\n    if (ID == null || ID == '') {\r\n      return;\r\n    }\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let jsonData: any = {};\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.DriverID = selectedDriverInfo.DriverID;\r\n    jsonData.DriverRenewalID = ID;\r\n    jsonData.Subject = Subject;\r\n    jsonData.FileName = file.FileName;\r\n    let fileData = file.Data.split('base64,');\r\n    if (fileData.length > 1) {\r\n      jsonData.Data = fileData[1];\r\n    } else {\r\n      jsonData.Data = file.Data;\r\n    }\r\n    let APIEndPoint: string = 'api/DriverManager/DriverRenewalAttachment';\r\n    if (file.AttachmentID) {\r\n      jsonData.AttachmentID = file.AttachmentID;\r\n      APIEndPoint = 'api/DriverManager/DriverRenewalAttachment';//Before it was VehicleManager/UpdateAttachment, After issue raised by client in prod we fixed the issue, Changed on 10-01-2024, Abhijith\r\n    }\r\n    let outerJsonData: any = {};\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    await this.apiCall.postAPICallWithToken(APIEndPoint, outerJsonData, loader).then(result => {\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  // Used for get renewal attachment\r\n  async getViewDriverRenewalAttachments(loader: boolean = true) {\r\n    debugger;\r\n    if (!this.driverRenewalForm.value.ID) {\r\n      return;\r\n    }\r\n    let selectedDriverInfo = this.common.getValueFromSessionStorage('driverInfo');\r\n    let userLoginInfo = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    let outerJsonData: any = {};\r\n    let jsonData: any = {};\r\n    jsonData.UserID = userLoginInfo.ID;\r\n    jsonData.Token = userLoginInfo.Token;\r\n    jsonData.DriverID = selectedDriverInfo.DriverID;\r\n    jsonData.DriverRenewalID = this.driverRenewalForm.value.ID;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n    await this.apiCall.postAPICallWithToken('api/DriverManager/ViewDriverRenewalAttachments', outerJsonData, loader).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        this.assignAttachmentToFrom(result);\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n\r\n  // Used for assign attachment to form\r\n  assignAttachmentToFrom(result: any[]) {\r\n    debugger;\r\n    let indexArray = result.filter(value => value.Subject == this.file1SubjectName);\r\n    if (indexArray.length != 0) {\r\n      //let indexArray = result[0];\r\n      let val = indexArray[0];\r\n      let json: any = {}\r\n      json.FileName = val.FileName;\r\n      json.Data = val.Data;\r\n      json.AttachmentID = val.AttachmentID\r\n      json.attachment = 'data:image/jpg;base64,' + val.Data;\r\n      json.attachment = this.sanitizer.bypassSecurityTrustResourceUrl(json.attachment);\r\n      this.driverRenewalForm.controls['file1'].setValue(json);\r\n    }\r\n\r\n    let indexArray2 = result.filter(value => value.Subject == this.file2SubjectName);\r\n    if (indexArray2.length != 0) {\r\n      // let indexArray = result[1];\r\n      let val = indexArray2[0];\r\n      let json: any = {}\r\n      json.FileName = val.FileName;\r\n      json.Data = val.Data;\r\n      json.AttachmentID = val.AttachmentID\r\n      json.attachment = 'data:image/jpg;base64,' + val.Data;\r\n      json.attachment = this.sanitizer.bypassSecurityTrustResourceUrl(json.attachment);\r\n      this.driverRenewalForm.controls['file2'].setValue(json);\r\n    }\r\n\r\n    let indexArray3 = result.filter(value => value.Subject == this.file3SubjectName);\r\n    if (indexArray3.length != 0) {\r\n      //let indexArray = result[2];\r\n      let val = indexArray3[0];\r\n      let json: any = {}\r\n      json.FileName = val.FileName;\r\n      json.Data = val.Data;\r\n      json.AttachmentID = val.AttachmentID\r\n      json.attachment = 'data:image/jpg;base64,' + val.Data;\r\n      json.attachment = this.sanitizer.bypassSecurityTrustResourceUrl(json.attachment);\r\n      this.driverRenewalForm.controls['file3'].setValue(json);\r\n    }\r\n\r\n    let indexArray4 = result.filter(value => value.Subject == this.file4SubjectName);\r\n    if (indexArray4.length != 0) {\r\n      //let indexArray = result[3];\r\n      let val = indexArray4[0];\r\n      let json: any = {}\r\n      json.FileName = val.FileName;\r\n      json.Data = val.Data;\r\n      json.AttachmentID = val.AttachmentID\r\n      json.attachment = 'data:image/jpg;base64,' + val.Data;\r\n      json.attachment = this.sanitizer.bypassSecurityTrustResourceUrl(json.attachment);\r\n      this.driverRenewalForm.controls['file4'].setValue(json);\r\n    }\r\n\r\n    let indexArray5 = result.filter(value => value.Subject == this.file5SubjectName);\r\n    if (indexArray5.length != 0) {\r\n      //let indexArray = indexArray5[0];\r\n      let val = indexArray5[0];\r\n      let json: any = {}\r\n      json.FileName = val.FileName;\r\n      json.Data = val.Data;\r\n      json.AttachmentID = val.AttachmentID\r\n      json.attachment = 'data:image/jpg;base64,' + val.Data;\r\n      json.attachment = this.sanitizer.bypassSecurityTrustResourceUrl(json.attachment);\r\n      this.driverRenewalForm.controls['file5'].setValue(json);\r\n    }\r\n\r\n    let indexArray6 = result.filter(value => value.Subject == this.file6SubjectName);\r\n    if (indexArray6.length != 0) {\r\n      //let indexArray = indexArray6[0];\r\n      let val = indexArray6[0];\r\n      let json: any = {}\r\n      json.FileName = val.FileName;\r\n      json.Data = val.Data;\r\n      json.AttachmentID = val.AttachmentID\r\n      json.attachment = 'data:image/jpg;base64,' + val.Data;\r\n      json.attachment = this.sanitizer.bypassSecurityTrustResourceUrl(json.attachment);\r\n      this.driverRenewalForm.controls['file6'].setValue(json);\r\n    }\r\n  }\r\n\r\n\r\n  /**Emirates ID Expiry date should work based on two cases,\r\n   *  1. If user don't want to change it, then system should accept same date.\r\n   *  2. If user wants to change the date then also system should accept the changed date, Abhijith 22-01-2024 */\r\n  onSelectDate(event) {\r\n    let currentDate = new Date();\r\n    if (event.getFullYear() < currentDate.getFullYear()) {\r\n      let getDay = event.getDate();\r\n      let getMonth = event.getMonth() + 1;\r\n      let convertDate = (getDay > 9 ? getDay : ('0' + getDay)) + '-' + (getMonth > 9 ? getMonth : (getMonth)) + '-' + this.common.minDate.getFullYear();\r\n      this.minDateForEID = this.common.stringDateToCalendarDateFormat(convertDate);\r\n      this.driverRenewalForm.controls['emiratesIDExpiryDate'].setValue(this.minDateForEID);\r\n      return;\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DetaildriverRoutingModule } from './detaildriver-routing.module';\nimport { DetaildriverComponent } from './detaildriver.component';\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbDatepickerModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { GlobalheaderModule } from '../../common/globalheader/globalheader.module';\r\nimport { GlobalfooterModule } from '../../common/globalfooter/globalfooter.module';\r\nimport { DataTablesModule } from 'angular-datatables';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule, OWL_DATE_TIME_LOCALE } from 'ng-pick-datetime';\n\r\n\n\n@NgModule({\n  declarations: [DetaildriverComponent],\n  imports: [\n    CommonModule,\n    DetaildriverRoutingModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    NgbDatepickerModule,\n    GlobalheaderModule,\n    GlobalfooterModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    NgbModule,\n    DataTablesModule\n  ],\n  providers: [\r\n    { provide: OWL_DATE_TIME_LOCALE, useValue: 'us' },\r\n  ],\n})\nexport class DetaildriverModule { }\n"]}