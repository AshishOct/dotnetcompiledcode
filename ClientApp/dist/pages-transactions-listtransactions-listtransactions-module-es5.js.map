{"version":3,"sources":["webpack:///node_modules/angular-datatables/__ivy_ngcc__/index.js","webpack:///node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.directive.js","webpack:///node_modules/angular-datatables/__ivy_ngcc__/src/angular-datatables.module.js","webpack:///src/app/pages/transactions/listtransactions/listtransactions-routing.module.ts","webpack:///src/app/pages/transactions/listtransactions/listtransactions.component.html","webpack:///src/app/pages/transactions/listtransactions/listtransactions.component.ts","webpack:///src/app/pages/transactions/listtransactions/listtransactions.module.ts"],"names":["DataTableDirective","el","dtOptions","prototype","ngOnInit","_this","dtTrigger","subscribe","displayTable","ngOnDestroy","unsubscribe","dt","destroy","dtInstance","Promise","resolve","reject","then","setTimeout","options","rowCallback","row","data","index","columns","columns_1","colsWithPipe","filter","x","ngPipeInstance","forEach","pipe","i","findIndex","e","rowFromCol","childNodes","item","rowVal","$","text","rowValAfter","transform","Object","assign","nativeElement","DataTable","ctorParameters","type","propDecorators","ɵfac","DataTableDirective_Factory","t","ɵdir","selectors","inputs","args","selector","DataTablesModule","forRoot","ngModule","ɵmod","ɵinj","factory","DataTablesModule_Factory","imports","ngJitMode","declarations","exports","routes","path","component","ListtransactionsRoutingModule","forChild","ListtransactionsComponent","router","apiCall","common","translate","order","emiratesList","addComapanyMappingResponseData","listOfTransactions","companyList","userLoginDetails","selectedCompanyInfo","selectedLang","amount","pendingFineAmount","PendingAmount","ispaybtnDis","noRecordsFound","isShowNoticepopUp","isbtndisable","getUnpaidTransactionsId","showListTable","body","document","getElementsByTagName","classList","remove","getValueFromSessionStorage","listOfTransanctions","onChangeOfCompany","get","toPromise","language","subscription","getContent","msg","jsonData","UserID","ID","CompanyID","Token","postAPICallWithToken","result","Message","showSussessFailureMessage","getDataFromTransactionList","Amount","ListTransactions","length","TransactionStatus","Fees","obj","TransactionId","TransactionID","push","sessionStorage","setItem","JSON","stringify","isCompanyTypeFranchise","outerJsonData","inputParameter","isfirstLoad","TotalUnPaidFineAmount","console","log","error","BrokenTransactionExist","GetPaymentRefID","jsonDataValue","apiEndPoint","toString","CompanyId","PortalReferenceID","ReferenceID","FineAmount","requestFrom","setValueToSessionStorage","setValueToLocalStorage","isPageLoad","navigateByUrl","transaction_Id","transactionIDToDelete","closeNoticePopUp","Status","showDeleteConfirmationPopUp","templateUrl","styleUrls","ListtransactionsModule"],"mappings":"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","file":"pages-transactions-listtransactions-listtransactions-module-es5.js","sourcesContent":["/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\n/**\n * @module\n * @description\n * Entry point from which you should import all public library APIs.\n */\nexport { DataTableDirective } from './src/angular-datatables.directive';\nexport { DataTablesModule } from './src/angular-datatables.module';\n\n//# sourceMappingURL=index.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { Directive, ElementRef, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nvar DataTableDirective = /** @class */ (function () {\n    function DataTableDirective(el) {\n        this.el = el;\n        /**\n         * The DataTable option you pass to configure your table.\n         */\n        this.dtOptions = {};\n    }\n    DataTableDirective.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.dtTrigger) {\n            this.dtTrigger.subscribe(function () {\n                _this.displayTable();\n            });\n        }\n        else {\n            this.displayTable();\n        }\n    };\n    DataTableDirective.prototype.ngOnDestroy = function () {\n        if (this.dtTrigger) {\n            this.dtTrigger.unsubscribe();\n        }\n        if (this.dt) {\n            this.dt.destroy(true);\n        }\n    };\n    DataTableDirective.prototype.displayTable = function () {\n        var _this = this;\n        this.dtInstance = new Promise(function (resolve, reject) {\n            Promise.resolve(_this.dtOptions).then(function (dtOptions) {\n                // Using setTimeout as a \"hack\" to be \"part\" of NgZone\n                setTimeout(function () {\n                    // Assign DT properties here\n                    var options = {\n                        rowCallback: function (row, data, index) {\n                            if (dtOptions.columns) {\n                                var columns_1 = dtOptions.columns;\n                                // Filter columns with pipe declared\n                                var colsWithPipe = columns_1.filter(function (x) { return x.ngPipeInstance; });\n                                // Iterate\n                                colsWithPipe.forEach(function (el) {\n                                    var pipe = el.ngPipeInstance;\n                                    // find index of column using `data` attr\n                                    var i = columns_1.findIndex(function (e) { return e.data == el.data; });\n                                    // get <td> element which holds data using index\n                                    var rowFromCol = row.childNodes.item(i);\n                                    // Transform data with Pipe\n                                    var rowVal = $(rowFromCol).text();\n                                    var rowValAfter = pipe.transform(rowVal);\n                                    // Apply transformed string to <td>\n                                    $(rowFromCol).text(rowValAfter);\n                                });\n                            }\n                            // run user specified row callback if provided.\n                            if (_this.dtOptions.rowCallback) {\n                                _this.dtOptions.rowCallback(row, data, index);\n                            }\n                        }\n                    };\n                    // merge user's config with ours\n                    options = Object.assign({}, dtOptions, options);\n                    _this.dt = $(_this.el.nativeElement).DataTable(options);\n                    resolve(_this.dt);\n                });\n            });\n        });\n    };\n    DataTableDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    DataTableDirective.propDecorators = {\n        dtOptions: [{ type: Input }],\n        dtTrigger: [{ type: Input }]\n    };\nDataTableDirective.ɵfac = function DataTableDirective_Factory(t) { return new (t || DataTableDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataTableDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTableDirective, selectors: [[\"\", \"datatable\", \"\"]], inputs: { dtOptions: \"dtOptions\", dtTrigger: \"dtTrigger\" } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTableDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[datatable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { dtOptions: [{\n            type: Input\n        }], dtTrigger: [{\n            type: Input\n        }] }); })();\n    return DataTableDirective;\n}());\nexport { DataTableDirective };\n\n//# sourceMappingURL=angular-datatables.directive.js.map","/**\n * @license\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE\n */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableDirective } from './angular-datatables.directive';\nimport * as ɵngcc0 from '@angular/core';\nvar DataTablesModule = /** @class */ (function () {\n    function DataTablesModule() {\n    }\n    DataTablesModule.forRoot = function () {\n        return {\n            ngModule: DataTablesModule\n        };\n    };\nDataTablesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DataTablesModule });\nDataTablesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DataTablesModule_Factory(t) { return new (t || DataTablesModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DataTablesModule, { declarations: function () { return [DataTableDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DataTableDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTablesModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [DataTableDirective],\n                exports: [DataTableDirective]\n            }]\n    }], function () { return []; }, null); })();\n    return DataTablesModule;\n}());\nexport { DataTablesModule };\n\n//# sourceMappingURL=angular-datatables.module.js.map","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ListtransactionsComponent } from './listtransactions.component';\n\nconst routes: Routes = [{ path: '', component: ListtransactionsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListtransactionsRoutingModule { }\n","<app-globalheader></app-globalheader>\r\n<div class=\"page-wrapper\" dir=\"{{common.textAlignment}}\">\r\n  <!-- ============================================================== -->\r\n  <!-- Container fluid  -->\r\n  <!-- ============================================================== -->\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-12 d-flex action_box py-3\">\r\n        <div class=\"d-flex align-items-center action_box-first\">\r\n          <!-- Franchaise company should not have pay all button, Enabled in staging and production, Abhijith 03-08-2023 -->\r\n          <button class=\"btn theme-blue-btn px-4 add_company_xs mx-auto mt-0\"\r\n          *ngIf=\"common.isCompanyTypeFranchise == false\" (click)=\"payAll()\"\r\n          [disabled]=\"(PendingAmount!=0 && getDataFromTransactionList.BrokenTransactionExist)||isbtndisable\">\r\n          <img class=\"theme-blue-btn-img\" src=\"/assets/images/company-page/wallet-filled-money-tool.svg\" alt=\"\">\r\n          <span>{{ 'PayAll' | translate }} : <span> {{PendingAmount}}</span></span>\r\n        </button>\r\n          <!-- <button class=\"btn theme-blue-btn px-4 add_company_xs mx-auto mt-0\" (click)=\"payAll()\" [disabled]=\"((getDataFromTransactionList.Amount!=0 && getDataFromTransactionList.BrokenTransactionExist)||ispaybtnDis)\">\r\n            <img class=\"theme-blue-btn-img\" src=\"/assets/images/company-page/wallet-filled-money-tool.svg\" alt=\"\">\r\n            <span>{{ 'PayAll' | translate }} : <span> {{amount}}</span></span>\r\n          </button> -->\r\n          <div *ngIf=\"getDataFromTransactionList && getDataFromTransactionList.BrokenTransactionExist\"\r\n          class=\"alert alert-danger payment_validation\">\r\n          <strong>{{ 'PleaseWaitPaymentIsUnderProgress' | translate }}</strong>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"common.mesage.showMessage\" [class]=\"common.mesage.class\" style=\"width: 100%;\">\r\n        <strong>{{common.mesage.mesage}}</strong>\r\n        <span class=\"close\" (click)=\"common.mesage.showMessage=!common.mesage.showMessage\">&times;</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12 card add_company_tab_card\">\r\n        <div class=\"table-responsive\" *ngIf=\"!noRecordsFound\">\r\n          <table datatable [dtOptions]=\"dtOptions\" *ngIf=\"showListTable\" class=\"mytable\">\r\n            <thead>\r\n              <tr>\r\n                <th>{{ 'TransactionId' | translate }}</th>\r\n                <th>{{ 'TransactionName' | translate }}</th>\r\n                <th>{{ 'ServiceCode' | translate }}</th>\r\n                <th>{{ 'Fees' | translate }}</th>\r\n                <th>{{ 'TransactionDate' | translate }}</th>\r\n                <th>{{ 'TransactionStatus' | translate }}</th>\r\n                <th>{{ 'Action' | translate }}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let transactions of listOfTransactions;\">\r\n                <td>{{transactions.TransactionID}}</td>\r\n                <td>{{transactions.TransactionName}}</td>\r\n                <td>{{transactions.ServiceCode}}</td>\r\n                <td>{{transactions.Fees}}</td>\r\n                <td>{{transactions.TransactionDate}}</td>\r\n                <td>{{transactions.TransactionStatus}}</td>\r\n                <td> <button class=\"btn btn-orders edit\" *ngIf=\"transactions.TransactionStatus == 'UnPaid' \"\r\n                    (click)=\"showDeleteConfirmationPopUp(transactions.TransactionID)\">\r\n                    <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n                  </button></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"col-md-12 p-0\" *ngIf=\"noRecordsFound\">\r\n          <div class=\"main_card no_record_found\">\r\n            <span>{{ 'NoRecordFound' | translate }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!---- For Delete confirmation pop-up, Abhijith 02-08-2023, Released to production on 07-08-2023------>\r\n<div class=\"rakta_login_blk \" *ngIf=\"isShowNoticepopUp\">\r\n  <div class=\"login_container_blk rakta_delete_confirm_blk\">\r\n    <img src=\"/assets/images/close_image.svg\" (click)=\"showDeleteConfirmationPopUp('')\" alt=\"close image\"\r\n      class=\"close_img\">\r\n    <h1 class=\"heading\">{{ 'Are you sure, You want to delete this transaction' | translate }}</h1>\r\n    <div class=\"row\" style=\"padding-left: 56px;\">\r\n      <div class=\"d-flex align-items-center justify-content-between edit_popup_button\">\r\n        <div class=\"col-md-12\">\r\n          <button class=\"login_btn\" (click)=\"onDelete()\"> {{ 'Yes' | translate }} </button>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <button class=\"login_btn\" (click)=\"showDeleteConfirmationPopUp('')\"> {{ 'No' | translate }} </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!----  For Delete confirmation pop-up End------>\r\n<app-globalfooter></app-globalfooter>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ApiService } from '../../../services/api.service';\r\nimport { CommonService } from '../../../services/common.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-listtransactions',\r\n  templateUrl: './listtransactions.component.html',\r\n  styleUrls: ['./listtransactions.component.scss']\r\n})\r\nexport class ListtransactionsComponent implements OnInit {\r\n\r\n  dtOptions: DataTables.Settings = {\r\n    order: [[1, 'desc']]\r\n  };\r\n\r\n  @ViewChild(DataTableDirective, { static: false }) datatableElement: DataTableDirective;\r\n\r\n  dtTrigger = new Subject();\r\n\r\n  reactiveFormName: FormGroup;\r\n\r\n  emiratesList: any = [];\r\n  addComapanyMappingResponseData: any = [];\r\n  listOfTransactions: any = [];\r\n  companyList: any = [];\r\n  userLoginDetails: any = {};\r\n  selectedCompanyInfo: any = {};\r\n  selectedLang: string = \"\";\r\n  amount: number = 0;\r\n  pendingFineAmount: number = 0;\r\n  PendingAmount: number = 0;\r\n  filterSearchBox: any;\r\n  filterStartDate: any;\r\n  ispaybtnDis: boolean = false;\r\n  filterEndDate: any;\r\n  noRecordsFound: boolean = false;\r\n  transactionIDToDelete: any;\r\n  getDataFromTransactionList: any;\r\n  isShowNoticepopUp: boolean = false;\r\n  isbtndisable: boolean = false;\r\n  getUnpaidTransactionsId = [];\r\n  constructor(\r\n    private router: Router,\r\n    private apiCall: ApiService,\r\n    public common: CommonService,\r\n    private translate: TranslateService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    const body = document.getElementsByTagName('body')[0];\r\n    body.classList.remove('userLogin');\r\n\r\n    this.userLoginDetails = this.common.getValueFromSessionStorage('userLoginInfo');\r\n    this.selectedCompanyInfo\r\n    this.listOfTransanctions();\r\n    this.onChangeOfCompany();\r\n    this.dtOptions = {\r\n      order: [[0, 'desc']],\r\n      language: ({\r\n        \"zeroRecords\": await this.translate.get('NoDataAvailable').toPromise(),\r\n        \"search\": await this.translate.get('Search').toPromise(),\r\n        \"info\": await this.translate.get('Information').toPromise(),\r\n        \"infoFiltered\": await this.translate.get('infoFiltered').toPromise(),\r\n        \"infoEmpty\": await this.translate.get('infoEmpty').toPromise(),\r\n        \"lengthMenu\": await this.translate.get('lengthMenu').toPromise(),\r\n        \"paginate\": {\r\n          \"first\": await this.translate.get('First').toPromise(),\r\n          \"last\": await this.translate.get('Last').toPromise(),\r\n          \"next\": await this.translate.get('Next').toPromise(),\r\n          \"previous\": await this.translate.get('Previous').toPromise(),\r\n        }\r\n      }),\r\n    }\r\n  }\r\n\r\n  showListTable: boolean = true;\r\n  public subscription: Subscription;\r\n  public ngOnDestroy(): void {\r\n    // onDestroy cancels the subscribe request\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n    // Do not forget to unsubscribe the event\r\n    if (this.dtTrigger) {\r\n      this.dtTrigger.unsubscribe();\r\n    }\r\n  }\r\n  onChangeOfCompany() {\r\n    this.subscription = this.common.getContent().subscribe(msg => {\r\n      let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n      if (selectedCompanyInfo != null) {\r\n        this.listOfTransanctions();\r\n        //this.transactionPayAllAmount(true);////added code by radhika on 24-07-2023 for transaction amount issue on calling both api's \r\n      }\r\n    });\r\n  }\r\n\r\n  // Used for get transaction list\r\n  async listOfTransanctions() {\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let jsonData: any = {};\r\n    jsonData.UserID = this.userLoginDetails.ID;\r\n    jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n    jsonData.Token = this.userLoginDetails.Token;\r\n    this.showListTable = false;\r\n    this.noRecordsFound = false;\r\n    await this.apiCall.postAPICallWithToken('api/TransactionManager/getTransactionList', jsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        debugger;\r\n        //This is having reference in PayAll() & GetPaymentRefID() methods, Abhijith 04-08-2023\r\n        this.getDataFromTransactionList = result;\r\n        this.amount = result.Amount;\r\n        this.listOfTransactions = result.ListTransactions;\r\n        //Code changes done by radhika for transaction amounts check on calling both api's 24-07-2023 start\r\n        if (this.listOfTransactions.length == 0) {\r\n          this.noRecordsFound = true;\r\n        }\r\n        else {\r\n          this.PendingAmount = 0;\r\n          let getUnpaidTransactionsId = [];\r\n          \r\n          for (var i = 0; i < this.listOfTransactions.length; i++) {\r\n            if (this.listOfTransactions[i].TransactionStatus == \"UnPaid\") {\r\n              this.PendingAmount += this.listOfTransactions[i].Fees;//test\r\n              /**Get Unpaid transaction list TransactionID's to send in PaymentGatewayResponseCreateUpdate API, Abhijith 22-11-2023 */\r\n              let obj = {\r\n                TransactionId : this.listOfTransactions[i].TransactionID\r\n                //unpaidTransactionAmount : this.listOfTransactions[i].Fees.toString()\r\n              }\r\n              getUnpaidTransactionsId.push(obj);              \r\n            }\r\n          }\r\n          /**Store getUnpaidTransactionsId in array to access in payment page, Abhijith 22-11-2023 */\r\n          sessionStorage.setItem(\"GetUnpaidTransactionsIdList\", JSON.stringify(getUnpaidTransactionsId));\r\n\r\n          if (!this.common.isCompanyTypeFranchise) { \r\n          //added below code for showing validation message to  Restrict Transaction Payment depends on Fines\r\n          // If we have un paid Transaction and un paid Fine, the fines should be paid first.radhika-04-09-2023\r\n          let outerJsonData: any = {};\r\n          outerJsonData.inputParameter = JSON.stringify(jsonData);\r\n          outerJsonData.isfirstLoad = true;\r\n          this.apiCall.postAPICallWithToken('api/TransactionManager/getListCompanyFines', outerJsonData).then(result => {\r\n            if (result.Message) {\r\n              this.common.showSussessFailureMessage(2, result.Message);\r\n            } else {\r\n              this.pendingFineAmount = result.TotalUnPaidFineAmount;\r\n              console.log(\"1stcall\", result);\r\n              console.log(\"1stcall\", result.TotalUnPaidFineAmount);\r\n              if (this.PendingAmount != 0 && this.pendingFineAmount != 0) {\r\n                this.common.showSussessFailureMessage(2, 'Please pay pending fines first before doing pending payment', false);\r\n                this.isbtndisable = true;\r\n              }\r\n              else {\r\n                this.isbtndisable = this.PendingAmount == 0 ? true : false;\r\n              }\r\n            }\r\n          }).catch(error => {\r\n            console.log(\"error \", error);\r\n          });//end radhika-04-09-2023\r\n          \r\n        }\r\n        }\r\n      }\r\n      this.showListTable = true;\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  //This API is doesn't exists from 04-08-2023 due to new implementation in gettransactionlist API only, Abhijith 04-08-2023\r\n  // // Used for get total unpaid amount\r\n  // totalUnPaidTransAmount: any;\r\n  // async transactionPayAllAmount(obj) {\r\n  //   let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n  //   let jsonData: any = {};\r\n  //   jsonData.UserID = this.userLoginDetails.ID;\r\n  //   jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n  //   jsonData.Token = this.userLoginDetails.Token;\r\n  //   jsonData.isFirstLoading = obj;\r\n  //   jsonData.transAmount = this.PendingAmount;\r\n  //   this.amount = 0;\r\n  //   await this.apiCall.postAPICallWithToken('api/TransactionManager/getListTotalUnPaidTransAmount', jsonData).then(result => {\r\n  //     debugger;\r\n  //     this.totalUnPaidTransAmount = result;\r\n  //     this.amount = result.Amount;\r\n  //     if (this.amount == 0) {\r\n  //       this.ispaybtnDis = true;\r\n  //     } else {\r\n  //       if (this.PendingAmount != this.amount) {//added code by radhika on 24-07-2023 for transaction amount issue on calling both api's start\r\n  //         this.ispaybtnDis = true;\r\n  //       }\r\n  //       else {\r\n  //         this.ispaybtnDis = false;\r\n  //       }//added code by radhika on 24-07-2023 for transaction amount issue on calling both api's end\r\n  //     }\r\n  //   }).catch(error => {\r\n  //     console.log(\"error \", error);\r\n  //   });\r\n  // }\r\n\r\n  //Used for payment\r\n  payAll() {\r\n    //Use total unpaid amount from getTransactionList API response, Abhijith 04-08-2023\r\n    if (this.getDataFromTransactionList && this.PendingAmount > 0) {\r\n      if (!this.getDataFromTransactionList.BrokenTransactionExist) {\r\n        this.GetPaymentRefID();\r\n      }\r\n    }\r\n  }\r\n  // Used for get payment refrence id while doing payment\r\n  async GetPaymentRefID() {\r\n    debugger;\r\n    let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n    let outerJsonData: any = {};\r\n    let jsonDataValue: any = {};\r\n    jsonDataValue.CompanyID = selectedCompanyInfo.CompanyID;\r\n    outerJsonData.inputParameter = JSON.stringify(jsonDataValue);\r\n    outerJsonData.apiEndPoint = '/CRM/API/GetCompanyPaymentRefID';\r\n    outerJsonData.UserID = this.userLoginDetails.ID;\r\n    //Instead of amount parameter from getTransaction API, We will pass this.PendingAmount(Total unpaid list of amount)-05-08-2023\r\n    // outerJsonData.Amount = this.getDataFromTransactionList.Amount.toString();\r\n    outerJsonData.Amount = this.PendingAmount.toString();\r\n    outerJsonData.CompanyId = selectedCompanyInfo.CompanyID;\r\n\r\n    await this.apiCall.postAPICallWithToken('api/EnquiryManager/GetPaymentRefID', outerJsonData).then(result => {\r\n      if (result.Message) {\r\n        this.common.showSussessFailureMessage(2, result.Message);\r\n      } else {\r\n        let jsonData: any = {}\r\n        jsonData.UserID = this.userLoginDetails.ID;\r\n        jsonData.CompanyID = selectedCompanyInfo.CompanyID;\r\n        jsonData.PortalReferenceID = result.ReferenceID;\r\n        //Instead of amount parameter from getTransaction API, We will pass this.PendingAmount(Total unpaid list of amount)-05-08-2023\r\n        jsonData.FineAmount = this.PendingAmount;\r\n        jsonData.requestFrom = 'companyPayAll';\r\n        this.common.setValueToSessionStorage('paymentInfo', jsonData);\r\n        this.common.setValueToLocalStorage('paymentInfo', jsonData);\r\n        this.common.isPageLoad = true;\r\n        this.router.navigateByUrl('/payment/choosepaymentgetway');\r\n      }\r\n    }).catch(error => {\r\n      console.log(\"error \", error);\r\n    });\r\n  }\r\n\r\n  //Ask confirmation before delete, Abhijith 02-08-2023\r\n  showDeleteConfirmationPopUp(transaction_Id) {\r\n    this.transactionIDToDelete = transaction_Id;\r\n    if (this.isShowNoticepopUp) {\r\n      this.isShowNoticepopUp = false;\r\n      this.common.closeNoticePopUp = false;\r\n    } else {\r\n      this.isShowNoticepopUp = true;\r\n    }\r\n  }\r\n\r\n    //Delete updaid transaction, Abhijith 02-08-2023\r\n    onDelete() {\r\n      let selectedCompanyInfo = this.common.getValueFromSessionStorage('selectedCompanyInfo');\r\n      let jsonData = {\r\n        CompanyId: selectedCompanyInfo.CompanyID,\r\n        TransactionId: this.transactionIDToDelete\r\n      }\r\n      this.apiCall.postAPICallWithToken('api/TransactionManager/DeleteUnpaidTransaction', jsonData).then(result => {\r\n        debugger;\r\n        if (result != null) {\r\n          this.common.showSussessFailureMessage(1, result.Status);\r\n          this.showDeleteConfirmationPopUp(this.transactionIDToDelete)\r\n          this.listOfTransanctions();\r\n        }\r\n        else {\r\n          this.common.showSussessFailureMessage(2, result.Status);\r\n        }\r\n      }).catch(error => {\r\n        console.log(\"error \", error);\r\n      });\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListtransactionsRoutingModule } from './listtransactions-routing.module';\nimport { ListtransactionsComponent } from './listtransactions.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbDatepickerModule, NgbModule, NgbDateAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { DataTablesModule } from 'angular-datatables';\nimport { GlobalheaderModule } from '../../common/globalheader/globalheader.module';\r\nimport { GlobalfooterModule } from '../../common/globalfooter/globalfooter.module';\r\n\n@NgModule({\n  declarations: [ListtransactionsComponent],\n  imports: [\n    CommonModule,\n    ListtransactionsRoutingModule,\n    TranslateModule,\n    DataTablesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbDatepickerModule,\n    NgbModule,\n    GlobalheaderModule,\n    GlobalfooterModule\n  ]\n})\nexport class ListtransactionsModule { }\n"]}